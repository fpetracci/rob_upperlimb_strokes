(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1768660,      32733]
NotebookOptionsPosition[   1746176,      32095]
NotebookOutlinePosition[   1746554,      32111]
CellTagsIndexPosition[   1746511,      32108]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARM -10R with ergonomic constraint- weight to be set", "Title",
 CellChangeTimes->{{3.799303901217402*^9, 3.7993039249329557`*^9}, {
   3.7993040036349297`*^9, 3.799304021871172*^9}, {3.7995830677533264`*^9, 
   3.79958306858211*^9}, {3.799583108168663*^9, 3.7995831194328003`*^9}, {
   3.800210269783987*^9, 3.80021027365532*^9}, 3.8002580145282373`*^9, {
   3.800265708977599*^9, 3.8002657741307573`*^9}}],

Cell["Alessia Biondi June 2020", "Subtitle",
 CellChangeTimes->{{3.7993040263871374`*^9, 3.799304059475628*^9}, {
   3.799304998918648*^9, 3.799304999282722*^9}, {3.7995831244431496`*^9, 
   3.7995831249567766`*^9}, {3.7999796128290095`*^9, 3.799979618146599*^9}, 
   3.8002652063258057`*^9}],

Cell["Brief description of notebook purpose", "Subsubtitle",
 CellChangeTimes->{{3.799584926521897*^9, 3.799585002460859*^9}, {
   3.799585077944744*^9, 3.799585080209689*^9}, 3.8002660579776*^9}],

Cell["\<\
What is done inside this notebook:
first, it is implemented the reconstruction of an ideal trajectory from data \
provided by IMU sensors placed on subjects\[CloseCurlyQuote]arm during the \
execution of a specific task (only using the end effector position, here hand \
position). 
Then, it is defined a functional cost (J) in order to encourage the most \
ergonomic arm\[CloseCurlyQuote]s movement.
After that, inverse Kinematic is implemented: it is imposed as trajectory to \
be followed the one obtained from data about hand movements. Here, CLIK is a \
redoundant problem because of the redundant degrees of freedom of a 10R arm: \
these redundancies are used to impose ergonomic constraints by functional \
cost\[CloseCurlyQuote]s minimization (J, defined above).
Finally, joints\[CloseCurlyQuote] angles obtained as CLIK result (10 angles \
values) will be the ones that allow the execution of the task by minimizing \
J, so trying to follow the more ergonomic way to execute it.\
\>", "Text",
 CellChangeTimes->{{3.7993058723246155`*^9, 3.799305875562011*^9}, {
   3.799575466146116*^9, 3.7995754777359877`*^9}, {3.799582897517875*^9, 
   3.799582915809898*^9}, {3.7995831338789215`*^9, 3.7995832609571505`*^9}, {
   3.7995833005413136`*^9, 3.7995833353013754`*^9}, {3.7995833667323375`*^9, 
   3.7995839979993877`*^9}, {3.799584030682003*^9, 3.7995840670311966`*^9}, {
   3.7995842906781893`*^9, 3.7995843369269314`*^9}, {3.799584373381462*^9, 
   3.799584408964323*^9}, {3.7995850305726953`*^9, 3.799585054082838*^9}, 
   3.7995862873701987`*^9, {3.800258573406875*^9, 3.800258575154789*^9}}],

Cell[CellGroupData[{

Cell["General setting", "Subtitle",
 CellChangeTimes->{{3.800265972004255*^9, 3.800266023695987*^9}}],

Cell[CellGroupData[{

Cell["Loading Data and Parameters", "Section",
 CellChangeTimes->{{3.79930426965368*^9, 3.7993042951634665`*^9}, {
  3.799554088455702*^9, 3.799554092845667*^9}, {3.7995856293081455`*^9, 
  3.7995856326163516`*^9}, {3.80008164859734*^9, 3.8000816518534145`*^9}, {
  3.8002637627094*^9, 3.8002637635007153`*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\n", 
 RowBox[{"<<", "ScrewCalculusPro`"}], "\n", 
 RowBox[{"<<", "OdeSolve`"}]}], "Input",
 CellChangeTimes->{{3.79930379717654*^9, 3.7993038209370117`*^9}, 
   3.7993040991794715`*^9, 3.799305349840207*^9, {3.7993054596709642`*^9, 
   3.7993056530200453`*^9}, {3.79930586197828*^9, 3.799305863487266*^9}}],

Cell["\<\
Current trial execution: \[OpenCurlyDoubleQuote]H01 T07 L1\
\[CloseCurlyDoubleQuote]
It is about the first healthy (H) subject that executes the task number 7 \
(T07) using his left arm (L) (first of three trials)\
\>", "Text",
 CellChangeTimes->{{3.7995541001698666`*^9, 3.7995541288562803`*^9}, {
  3.7995850923232994`*^9, 3.7995851920964375`*^9}}],

Cell[CellGroupData[{

Cell["Data Load", "Subsection",
 CellChangeTimes->{{3.8002637865138693`*^9, 3.8002637997504344`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Data", " ", "are", " ", "imported", " ", 
   RowBox[{"from", " ", ".", "csv"}], " ", "files", " ", "generated", " ", 
   "using", " ", "Matlab", " ", "function", " ", "\"\<writematrix\>\"", " ", 
   "on", " ", "data", " ", 
   RowBox[{"structures", ".", "\[IndentingNewLine]", "  ", "Inside"}], " ", 
   RowBox[{"handr", "/", "handl"}], " ", "are", " ", "loaded", " ", 
   "position", " ", "and", " ", "orientation", " ", "of", " ", "the", " ", 
   "hand", " ", "during", " ", "all", " ", "task", " ", 
   RowBox[{"execution", ":", " ", 
    RowBox[{
    "these", " ", "values", " ", "provide", " ", "us", " ", "the", " ", 
     "trajectory", " ", "to", " ", "be", " ", "followed", " ", "during", " ", 
     "inverse", " ", "kinematics", " ", 
     RowBox[{"execution", ".", "\[IndentingNewLine]", "Inside"}], " ", 
     RowBox[{"parr", "/", "parl"}], " ", "are", " ", "loaded", " ", "all", 
     " ", "parameters", " ", "needed", " ", "in", " ", "order", " ", "to", 
     " ", "build", " ", "the", " ", "arm", " ", "of", " ", "each", " ", 
     "subject", " ", "using", " ", "real", " ", 
     RowBox[{"size", "."}]}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799585200367295*^9, 3.7995852591851273`*^9}, {
  3.7995852896317215`*^9, 3.7995855973575716`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Handr", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<H01_T07_L1_hand_R.csv\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.799574781686279*^9, 3.799574785427456*^9}, 
   3.7995884299252167`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Handl", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<H01_T07_L1_hand_L.csv\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.799567135278695*^9, 3.7995672099985156`*^9}, {
   3.799567323203594*^9, 3.7995673255777564`*^9}, 3.799567628231701*^9, 
   3.7995676611212244`*^9, {3.79957303644703*^9, 3.7995730487434983`*^9}, 
   3.7995884315810766`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Handvr", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<H01_T07_L1_hand_vR.csv\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.799574781686279*^9, 3.799574785427456*^9}, 
   3.7995884299252167`*^9, {3.799899485657405*^9, 3.7998994932888255`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Handvl", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<H01_T07_L1_hand_vL.csv\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.799567135278695*^9, 3.7995672099985156`*^9}, {
   3.799567323203594*^9, 3.7995673255777564`*^9}, 3.799567628231701*^9, 
   3.7995676611212244`*^9, {3.79957303644703*^9, 3.7995730487434983`*^9}, 
   3.7995884315810766`*^9, {3.7998994905767784`*^9, 3.7998994949373026`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"parr", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<H01_T07_L1_par_R.csv\>\"", "]"}]}], ";", " ", 
  RowBox[{"parr", "//", "TableForm"}]}]], "Input",
 CellChangeTimes->{{3.7995747941705923`*^9, 3.7995748086552567`*^9}, {
  3.799575119263917*^9, 3.799575128755522*^9}, {3.799578067822527*^9, 
  3.7995780965010076`*^9}, {3.799588436324149*^9, 3.799588449208433*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"L5_pos_x\"\>", "\<\"L5_pos_y\"\>", "\<\"L5_pos_z\"\>", \
"\<\"L5_shoulder_dist\"\>", "\<\"depth_shoulder\"\>", \
"\<\"theta_shoulder\"\>", "\<\"upperarm_length\"\>", "\<\"forearm_length\"\>"},
    {
     RowBox[{"-", "0.1964`"}], "0.012548`", "0.92348`", "0.39413`", 
     "0.14293`", "0.3998`", "0.31801`", "0.26032`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7995751313789597`*^9, 3.79957783037029*^9, {3.7995780483339386`*^9, 
   3.7995781210723505`*^9}, 3.7995789749580345`*^9, 3.799588486738989*^9, 
   3.799590623417734*^9, 3.799590672512333*^9, 3.799592360668582*^9, 
   3.7995980484800663`*^9, 3.799598922383974*^9, 3.799600120491186*^9, 
   3.7996023515978985`*^9, 3.7996025062144613`*^9, 3.7996035610107265`*^9, 
   3.7996036550536413`*^9, 3.799604086159176*^9, 3.799605938344283*^9, 
   3.7996059943416924`*^9, 3.7996060316351085`*^9, 3.7997304469475713`*^9, 
   3.799733367846122*^9, 3.799900335523661*^9, 3.799900371481393*^9, 
   3.799900914117214*^9, 3.7999009730253787`*^9, {3.7999010054445*^9, 
   3.799901011025878*^9}, 3.799902516515259*^9, 3.799902629724092*^9, 
   3.7999028554001093`*^9, 3.799905187179639*^9, 3.7999061608868537`*^9, 
   3.799924419500104*^9, 3.799928727459417*^9, 3.7999290455606503`*^9, 
   3.7999294612537546`*^9, 3.7999797087619667`*^9, 3.799980192934802*^9, 
   3.8000746777925997`*^9, 3.800077036292306*^9, 3.8000792370208445`*^9, 
   3.8000801413670816`*^9, 3.8000816715880947`*^9, 3.800205474024045*^9, 
   3.8002056502487965`*^9, 3.8002067079445124`*^9, 3.800207888424356*^9, 
   3.8002084741965327`*^9, 3.8002085589716206`*^9, 3.800208842180196*^9, 
   3.8002093158547487`*^9, {3.8002554105611544`*^9, 3.8002554628848753`*^9}, 
   3.80025564048131*^9, 3.8002650564010572`*^9, 3.800438887943409*^9, 
   3.8004417050890856`*^9, 3.8019813314748793`*^9, 3.8019835401575575`*^9, 
   3.801984077291803*^9, 3.801984626192876*^9, {3.8019886338130608`*^9, 
   3.801988642325491*^9}, 3.801989050810397*^9, 3.801989543035446*^9, 
   3.8020011428733244`*^9, 3.802092454578019*^9, 3.8020932959882593`*^9, 
   3.802094225470316*^9, 3.802094838041326*^9, 3.8020954444171104`*^9, 
   3.8020965445420647`*^9, 3.80209925581273*^9, 3.8021039859412932`*^9, 
   3.8021093056678534`*^9, 3.802146607210295*^9, 3.802147149039194*^9, 
   3.8021476888761635`*^9, 3.8021554319455595`*^9, 3.8021565588685083`*^9, 
   3.8021573998376927`*^9, 3.802158067925452*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"parl", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<H01_T07_L1_par_L.csv\>\"", "]"}]}], ";", " ", 
  RowBox[{"parl", "//", "TableForm"}]}]], "Input",
 CellChangeTimes->{{3.799567253080696*^9, 3.799567264601029*^9}, {
   3.7995673285014963`*^9, 3.799567350567561*^9}, 3.7995676664001627`*^9, 
   3.79957299719167*^9, 3.7995748110166793`*^9, 3.7995748796446314`*^9, {
   3.799574985961316*^9, 3.7995750060225554`*^9}, {3.7995780832230835`*^9, 
   3.799578092205701*^9}, {3.799588439949695*^9, 3.799588446198387*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"L5_pos_x\"\>", "\<\"L5_pos_y\"\>", "\<\"L5_pos_z\"\>", \
"\<\"L5_shoulder_dist\"\>", "\<\"depth_shoulder\"\>", \
"\<\"theta_shoulder\"\>", "\<\"upperarm_length\"\>", "\<\"forearm_length\"\>"},
    {
     RowBox[{"-", "0.1964`"}], "0.012548`", "0.92348`", "0.39403`", 
     "0.11261`", "0.46639`", "0.31801`", "0.26032`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7995749896584167`*^9, 3.799575006650865*^9}, 
   3.799575107031822*^9, 3.7995778304141464`*^9, {3.799578099180958*^9, 
   3.799578121129156*^9}, 3.7995789749989247`*^9, 3.7995884868028183`*^9, 
   3.7995906234836273`*^9, 3.7995906726649666`*^9, 3.7995923607144547`*^9, 
   3.7995980485159707`*^9, 3.7995989224258595`*^9, 3.7996001205350695`*^9, 
   3.799602351638815*^9, 3.7996025062563515`*^9, 3.799603561054614*^9, 
   3.7996036550855556`*^9, 3.7996040861950817`*^9, 3.7996059383792424`*^9, 
   3.7996059943845644`*^9, 3.799606031677994*^9, 3.799730447244046*^9, 
   3.799733367876091*^9, 3.799900335552704*^9, 3.7999003715034256`*^9, 
   3.799900914144246*^9, 3.799900973101494*^9, {3.7999010054665213`*^9, 
   3.799901011051917*^9}, 3.7999025165453033`*^9, 3.7999026297581325`*^9, 
   3.79990285542114*^9, 3.799905187207692*^9, 3.7999061609199133`*^9, 
   3.7999244195918975`*^9, 3.7999287275774393`*^9, 3.7999290456456223`*^9, 
   3.799929461330551*^9, 3.799979708786994*^9, 3.799980192959839*^9, 
   3.8000746778356647`*^9, 3.800077036320383*^9, 3.800079237052932*^9, 
   3.8000801413911476`*^9, 3.8000816716136646`*^9, 3.8002054740626507`*^9, 
   3.800205650275871*^9, 3.800206707967074*^9, 3.800207888456946*^9, 
   3.8002084742205987`*^9, 3.800208559001703*^9, 3.800208842205264*^9, 
   3.800209315898368*^9, {3.8002554106248283`*^9, 3.800255462944038*^9}, 
   3.80025564053246*^9, 3.8002650566053762`*^9, 3.800438887981514*^9, 
   3.800441705119668*^9, 3.801981331519501*^9, 3.8019835402152295`*^9, 
   3.8019840773409367`*^9, 3.801984626258618*^9, {3.8019886338441076`*^9, 
   3.8019886423595743`*^9}, 3.8019890508459945`*^9, 3.8019895430710435`*^9, 
   3.802001142906916*^9, 3.802092454626889*^9, 3.8020932960181847`*^9, 
   3.802094225505231*^9, 3.802094838071246*^9, 3.802095444481943*^9, 
   3.8020965445878773`*^9, 3.8020992558646517`*^9, 3.802103985970275*^9, 
   3.802109305708745*^9, 3.802146607264927*^9, 3.8021471490830564`*^9, 
   3.8021476889130507`*^9, 3.802155431975512*^9, 3.802156558904352*^9, 
   3.8021573998746085`*^9, 3.8021580679613223`*^9}]
}, Open  ]],

Cell["Initial Config calculated in Matlab:", "Text",
 CellChangeTimes->{{3.8000791956658783`*^9, 3.8000792159450502`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"q0", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<H01_T07_L1_q0.csv\>\"", "]"}]}], ";", " ", 
  RowBox[{"q0", "//", "TableForm"}]}]], "Input",
 CellChangeTimes->{{3.800079110867268*^9, 3.800079129992921*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.20093881134252`", 
     RowBox[{"-", "0.163932943457349`"}], 
     RowBox[{"-", "0.137382940160237`"}], 
     RowBox[{"-", "1.51320314119314`"}], 
     RowBox[{"-", "0.646139432945586`"}], "0.469653831001788`", 
     "0.0440365613519629`", "0.468693601607463`", "0.0331790002411373`", 
     "0.293170449045744`"},
    {"0.347153201103699`", 
     RowBox[{"-", "0.236103923105011`"}], 
     RowBox[{"-", "0.203083788377595`"}], 
     RowBox[{"-", "1.53884002196687`"}], 
     RowBox[{"-", "0.577990872921876`"}], "0.423292081951694`", 
     RowBox[{"-", "0.0711882180353547`"}], "0.423276456058091`", 
     RowBox[{"-", "0.172628419824457`"}], "0.0612219565085571`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8000791260094767`*^9, 3.8000791316252184`*^9}, 
   3.8000792370850196`*^9, 3.800080141418723*^9, 3.80008167164124*^9, 
   3.800205474102259*^9, 3.8002056503141565`*^9, 3.8002067079991617`*^9, 
   3.8002078885050774`*^9, 3.8002084742546916`*^9, 3.8002085590277743`*^9, 
   3.800208842236868*^9, 3.800209315943492*^9, {3.800255410682486*^9, 
   3.8002554629966817`*^9}, 3.800255640583618*^9, 3.800265056700124*^9, 
   3.800438888019117*^9, 3.800441705152257*^9, 3.801981331565627*^9, 
   3.8019835402784233`*^9, 3.801984077388093*^9, 3.8019846263247976`*^9, {
   3.8019886338751535`*^9, 3.8019886423921614`*^9}, 3.8019890508830957`*^9, 
   3.801989543110694*^9, 3.8020011429395056`*^9, 3.8020924546667814`*^9, 
   3.802093296054038*^9, 3.8020942255471115`*^9, 3.802094838103161*^9, 
   3.8020954445233393`*^9, 3.8020965446387396`*^9, 3.8020992559204435`*^9, 
   3.802103985998207*^9, 3.802109305831415*^9, 3.8021466073217745`*^9, 
   3.802147149130928*^9, 3.802147688949961*^9, 3.8021554320023704`*^9, 
   3.8021565589392586`*^9, 3.802157399910009*^9, 3.8021580680062056`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"q0r", " ", "=", " ", 
   RowBox[{"q0", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8000791350934105`*^9, 3.800079147689289*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"q0l", " ", "=", " ", 
   RowBox[{"q0", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8000791507395782`*^9, 3.8000791600572376`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"samplerate", " ", "=", " ", "60"}], ";"}]], "Input",
 CellChangeTimes->{{3.799589230348918*^9, 3.799589237529182*^9}, {
  3.799589297204898*^9, 3.799589312389659*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"t0", " ", "=", " ", 
   RowBox[{"1", "/", "samplerate"}]}], " ", ";"}]], "Input",
 CellChangeTimes->{{3.79959920988717*^9, 3.799599219403736*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tend", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Length", " ", "[", "Handr", "]"}], "-", "1"}], ")"}], "/", 
    "samplerate"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799589314701689*^9, 3.7995894152541456`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Parameters for both arm", "Subsection",
 CellChangeTimes->{{3.80007993172939*^9, 3.8000799502479725`*^9}}],

Cell[CellGroupData[{

Cell["Graphic Plot Par", "Subsubsection",
 CellChangeTimes->{{3.8000799556233816`*^9, 3.800079958906376*^9}, {
  3.800080039466934*^9, 3.8000800465311236`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xmin3d", " ", "=", " ", 
   RowBox[{"-", "1.5"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xmax3d", " ", "=", " ", "1.5"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ymin3d", " ", "=", " ", 
   RowBox[{"-", "1.5"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ymax3d", " ", "=", " ", "1.5"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"zmin3d", " ", "=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"zmax3d", " ", "=", " ", "1.5"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7584445123307157`*^9, 3.758444525250996*^9}, {
   3.7584491150937796`*^9, 3.7584491364287763`*^9}, {3.7584493315490484`*^9, 
   3.7584493410040646`*^9}, {3.758452434393653*^9, 3.7584524516650667`*^9}, 
   3.758517595911215*^9, {3.758517630836439*^9, 3.7585176308374505`*^9}, {
   3.799564219332836*^9, 3.7995642628101125`*^9}, {3.801980876277032*^9, 
   3.801980881301087*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Joint Angles Range", "Subsubsection",
 CellChangeTimes->{{3.8019826378279467`*^9, 3.8019826592919283`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nangoliH", "=", "10"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "max", " ", "angle", " ", "value", " ", "and", " ", "min", " ", "angle", 
    " ", "value", " ", "for", " ", "every", " ", "joint", " ", "angles"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"torso", " ", "flexion", " ", 
    RowBox[{"(", "pitch", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q1M", " ", "=", 
    RowBox[{"Pi", "/", "2"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q1m", " ", "=", 
    RowBox[{
     RowBox[{"-", "Pi"}], "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"torso", " ", "twist"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q2M", " ", "=", 
   RowBox[{"Pi", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q2m", " ", "=", 
    RowBox[{
     RowBox[{"-", "Pi"}], "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"shoulder", " ", "\"\<raise\>\""}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q3M", " ", "=", "0.26"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q3m", " ", "=", 
    RowBox[{"-", "0.26"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"shoulder", " ", "front", " ", "opening"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q4M", " ", "=", 
   RowBox[{"Pi", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q4m", " ", "=", 
    RowBox[{"-", "2.96"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"shoulder", " ", "lateral", " ", "opening"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q5M", " ", "=", "0.87"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q5m", " ", "=", 
    RowBox[{"-", "Pi"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"shoulder", " ", "pronosupination"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q6M", " ", "=", "Pi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q6m", " ", "=", 
    RowBox[{
     RowBox[{"-", "Pi"}], "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"elbow", " ", "flexion"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q7M", " ", "=", "2.53"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q7m", " ", "=", 
    RowBox[{"-", "0.17"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"forearm", " ", "pronosupination"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q8M", " ", "=", 
   RowBox[{"Pi", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q8m", " ", "=", 
    RowBox[{
     RowBox[{"-", "Pi"}], "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"wrist", " ", "flexion"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q9M", " ", "=", "1.22"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q9m", " ", "=", 
    RowBox[{
     RowBox[{"-", "Pi"}], "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"wrist", " ", 
    RowBox[{"(", "yaw", ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q10M", " ", "=", "0.26"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q10m", " ", "=", 
    RowBox[{"-", "0.26"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "range", " ", "size", " ", "for", " ", "every", " ", "joint", " ", 
    "angles"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RANGEq1", "=", 
    RowBox[{"q1M", " ", "-", " ", "q1m"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RANGEq2", "=", 
    RowBox[{"q2M", " ", "-", " ", "q2m"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RANGEq3", "=", 
    RowBox[{"q3M", " ", "-", " ", "q3m"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RANGEq4", "=", 
    RowBox[{"q4M", " ", "-", " ", "q4m"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RANGEq5", "=", " ", 
    RowBox[{"q5M", " ", "-", " ", "q5m"}]}], " ", ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RANGEq6", "=", 
   RowBox[{"q6M", " ", "-", " ", "q6m"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RANGEq7", "=", 
    RowBox[{"q7M", " ", "-", " ", "q7m"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RANGEq8", "=", 
    RowBox[{"q8M", " ", "-", " ", "q8m"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RANGEq9", "=", 
    RowBox[{"q9M", " ", "-", " ", "q9m"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RANGEq10", "=", 
    RowBox[{"q10M", " ", "-", " ", "q10m"}]}], ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.801977941361906*^9, 3.801978013764529*^9}, {
   3.8019796403490458`*^9, 3.801979651426731*^9}, {3.801981525268961*^9, 
   3.801981538516617*^9}, {3.8019817063170433`*^9, 3.801981735324142*^9}, {
   3.801982375660996*^9, 3.801982403278286*^9}, 3.8019824861333637`*^9, 
   3.801982547501503*^9, {3.8019826811095734`*^9, 3.8019827101410913`*^9}, {
   3.801982764440281*^9, 3.8019827781176367`*^9}, {3.8019835098378615`*^9, 
   3.801983525869763*^9}, {3.8019886183299417`*^9, 3.801988619441969*^9}, 
   3.801989047322231*^9, {3.8019894931623554`*^9, 3.801989523650446*^9}, {
   3.802088457623854*^9, 3.8020884648369803`*^9}, {3.802088899722939*^9, 
   3.8020889838133945`*^9}, {3.802089029327993*^9, 3.8020890834737453`*^9}, {
   3.802089115684657*^9, 3.8020894170220222`*^9}, {3.802090296382278*^9, 
   3.8020903160073414`*^9}, {3.8020907821264286`*^9, 
   3.8020908326080933`*^9}, {3.8020908827866364`*^9, 
   3.8020909113755336`*^9}, {3.8020909436154704`*^9, 3.802090970372347*^9}, 
   3.802091004590742*^9, 3.802091035778207*^9, {3.802091067560644*^9, 
   3.802091116358495*^9}, {3.8020912843820868`*^9, 3.802091314173108*^9}, {
   3.802091351938896*^9, 3.8020915858532057`*^9}, 3.802092129437108*^9, 
   3.802093014180169*^9, 3.802094196802432*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"ref", " ", "values"}], ",", " ", 
   RowBox[{"for", " ", "the", " ", "first"}], ",", " ", 
   RowBox[{
   "second", " ", "and", " ", "third", " ", "ones", " ", "we", " ", "use", 
    " ", "initial", " ", "condition", " ", "angles"}], ",", " ", 
   RowBox[{
   "for", " ", "the", " ", "other", " ", "ones", " ", "we", " ", "use", " ", 
    "half", " ", "values"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8020887370754733`*^9, 3.8020887562151785`*^9}, {
  3.802089425388848*^9, 3.8020894512940087`*^9}, {3.802089493617896*^9, 
  3.802089546709319*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"q1c", " ", "=", " ", 
   RowBox[{"q0l", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q2c", " ", "=", " ", 
   RowBox[{"q0l", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q3c", " ", "=", " ", 
   RowBox[{"q0l", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q4c", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"q4M", " ", "+", " ", "q4m"}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q5c", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"q5M", " ", "+", " ", "q5m"}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q6c", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"q6M", " ", "+", " ", "q6m"}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q7c", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"q7M", " ", "+", " ", "q7m"}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q8c", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"q8M", " ", "+", " ", "q8m"}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q9c", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"q9M", " ", "+", " ", "q9m"}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q10c", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"q10M", " ", "+", " ", "q10m"}], ")"}], "/", "2"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.802088521613164*^9, 3.802088585437708*^9}, {
  3.8020894607746615`*^9, 3.8020894899786367`*^9}, {3.802089584087947*^9, 
  3.8020896221277704`*^9}, {3.802089667335644*^9, 3.8020896749677906`*^9}, {
  3.802089718410098*^9, 3.8020897308327503`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gains for CLIK", "Subsubsection",
 CellChangeTimes->{{3.8000800501851645`*^9, 3.8000800721354346`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "weigth", " ", "chosen", " ", "based", " ", "on", " ", "the", " ", "fact", 
   " ", "that", " ", "the", " ", "shoulder", " ", "has", " ", "no", " ", "a", 
   " ", "big", " ", "range", " ", "of", " ", 
   RowBox[{"motion", ".", " ", "For"}], " ", "wrist", " ", "weigths", " ", 
   "are", " ", "chosen", " ", "the", " ", "ones", " ", "suggested", " ", 
   "inside", " ", "Xuguang", " ", "Wang", " ", "paper", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"A", " ", "behavior"}], "-", 
     RowBox[{
     "based", " ", "inverse", " ", "kinematics", " ", "algorithm", " ", "to", 
      " ", "predict", "\n", "arm", " ", "prehension", " ", "postures", " ", 
      "for", " ", "computer"}], "-", 
     RowBox[{"aided", " ", "ergonomic", " ", "evaluation"}]}], ")"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.802158797186679*^9, 3.8021589044495387`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"weights", "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "20", ",", "20", ",", "20", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
     "1.5", ",", "2", ",", "3"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.800081603201754*^9, 3.800081639718137*^9}, {
   3.800441620140975*^9, 3.8004416957490916`*^9}, {3.8019895319632587`*^9, 
   3.801989537186205*^9}, {3.8019900864592466`*^9, 3.8019900904427032`*^9}, {
   3.802093281793558*^9, 3.8020932828831353`*^9}, {3.8020942143426313`*^9, 
   3.802094216587698*^9}, 3.8020947724802117`*^9, {3.8020954310543356`*^9, 
   3.802095438412304*^9}, {3.8020965268586664`*^9, 3.8020965330869303`*^9}, {
   3.802099232536517*^9, 3.802099238545493*^9}, {3.802103964652252*^9, 
   3.802103972055493*^9}, {3.802146587467444*^9, 3.8021466018667316`*^9}, {
   3.802147119357647*^9, 3.802147144586708*^9}, {3.8021476205388136`*^9, 
   3.8021476251969185`*^9}, {3.8021553118532653`*^9, 3.80215531806184*^9}, {
   3.802156552093322*^9, 3.802156555226666*^9}, {3.802157390212962*^9, 
   3.8021573946218305`*^9}, {3.802158062124366*^9, 3.8021580642725844`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"W", " ", "=", " ", 
   RowBox[{"weights", " ", "*", " ", 
    RowBox[{"IdentityMatrix", "[", "10", "]"}]}]}], ";", " ", 
  RowBox[{"W", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.800081621878192*^9, 3.8000816257293158`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"20", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "20", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "20", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "1", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "1", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "0", "0"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "1.5`", "0.`", "0.`"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "2", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "3"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8020965450097675`*^9, 3.802099256265551*^9, 
  3.802103986160739*^9, 3.8021093060151415`*^9, 3.802146607693595*^9, 
  3.8021471495843215`*^9, 3.802147689145239*^9, 3.8021554321605744`*^9, 
  3.802156559161669*^9, 3.802157400125433*^9, 3.802158068238584*^9}]
}, Open  ]],

Cell["\<\
Proportional Gain parameters to the close loop inverse Kinematics \
\>", "Text",
 CellChangeTimes->{{3.800263824372954*^9, 3.8002638639996333`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ko", " ", "=", " ", "20"}], ";"}]], "Input",
 CellChangeTimes->{{3.800080074192683*^9, 3.8000800809065323`*^9}, {
  3.800205644959728*^9, 3.800205645143059*^9}, {3.8002088344777746`*^9, 
  3.800208834556917*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"kp", " ", "=", " ", "50"}], ";"}]], "Input",
 CellChangeTimes->{{3.8000800823355656`*^9, 3.8000800843868637`*^9}, 
   3.800208836741356*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["General Functions", "Section",
 CellChangeTimes->{{3.799906631845425*^9, 3.7999066407556477`*^9}, {
  3.8002659365193872`*^9, 3.8002659387249804`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xAxis", " ", "=", "  ", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{
        RowBox[{"Length", "[", "Handl", "]"}], "-", "1"}]}], "}"}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.7999075391916714`*^9, 3.7999075524710865`*^9}, {
  3.7999076561283083`*^9, 3.799907691799326*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Plot", " ", "of", " ", "a_"}], ",", " ", 
   RowBox[{
    RowBox[{"xAxis", " ", "represents", " ", "number", " ", "of", " ", 
     RowBox[{"samples", ".", " ", "Corresponding"}], " ", "time", " ", 
     "value"}], " ", "=", " ", 
    RowBox[{"xAsis", " ", "/", "samplerate"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7999087659280205`*^9, 3.7999088903690777`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Draw", "[", "a_", "]"}], " ", ":=", " ", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"b", " ", "=", " ", 
      RowBox[{"Transpose", " ", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"xAxis", ",", " ", 
          RowBox[{"(", "b", ")"}]}], "}"}], "]"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"ImageSize", " ", "->", " ", 
        RowBox[{"1100", "*", "Scala"}]}], ",", " ", 
       RowBox[{"AspectRatio", " ", "->", " ", 
        RowBox[{"0.25", "/", "Scala"}]}], ",", " ", 
       RowBox[{"PlotRange", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xx", ",", " ", 
            RowBox[{"xx", " ", "+", " ", "\[CapitalDelta]xx"}]}], "}"}], ",", 
          " ", "All"}], "}"}]}]}], "]"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Scala", ",", " ", "1"}], "}"}], ",", " ", "0.1", ",", " ", 
      "4"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xx", ",", " ", "0"}], "}"}], ",", " ", "0", ",", " ", 
      RowBox[{"Max", "[", "xAxis", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalDelta]xx", ",", " ", 
        RowBox[{
         RowBox[{"Max", "[", "xAxis", "]"}], "*", "1.05"}]}], "}"}], ",", " ",
       "0", ",", " ", 
      RowBox[{
       RowBox[{"Max", "[", "xAxis", "]"}], "*", "1.05"}]}], "}"}]}], " ", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.799906653709011*^9, 3.7999066796050944`*^9}, {
   3.799906902982177*^9, 3.799906930885928*^9}, 3.7999075173039265`*^9, {
   3.7999076507118654`*^9, 3.799907676055314*^9}, {3.7999246473551455`*^9, 
   3.7999246576330967`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Plot", " ", "of", " ", "a_", " ", "splitted", " ", "along", " ", "every", 
   " ", "single", " ", "axis", " ", "of", " ", "the", " ", "frame", " ", "it",
    " ", "is", " ", "referred", " ", "to"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7999085768378253`*^9, 3.7999087469133344`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Draw3", "[", "a_", "]"}], " ", ":=", " ", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"b", " ", "=", " ", 
      RowBox[{"Transpose", " ", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"xAxis", ",", " ", 
            RowBox[{"(", 
             RowBox[{"b", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}]}], "}"}], "]"}], ",", " ",
          "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"xAxis", ",", " ", 
            RowBox[{"(", 
             RowBox[{"b", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ")"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"xAxis", ",", " ", 
            RowBox[{"(", 
             RowBox[{"b", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ")"}]}], "}"}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", " ", "->", " ", 
        RowBox[{"1100", "*", "Scala"}]}], ",", " ", 
       RowBox[{"AspectRatio", " ", "->", " ", 
        RowBox[{"0.25", "/", "Scala"}]}], ",", " ", 
       RowBox[{"PlotRange", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xx", ",", " ", 
            RowBox[{"xx", " ", "+", " ", "\[CapitalDelta]xx"}]}], "}"}], ",", 
          " ", "All"}], "}"}]}]}], "]"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Scala", ",", " ", "1"}], "}"}], ",", " ", "0.1", ",", " ", 
      "4"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xx", ",", " ", "0"}], "}"}], ",", " ", "0", ",", " ", 
      RowBox[{"Max", "[", "xAxis", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalDelta]xx", ",", " ", 
        RowBox[{
         RowBox[{"Max", "[", "xAxis", "]"}], "*", "1.05"}]}], "}"}], ",", " ",
       "0", ",", " ", 
      RowBox[{
       RowBox[{"Max", "[", "xAxis", "]"}], "*", "1.05"}]}], "}"}]}], " ", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.799906653709011*^9, 3.7999066796050944`*^9}, {
   3.799906902982177*^9, 3.799906930885928*^9}, 3.7999075173039265`*^9, {
   3.7999076507118654`*^9, 3.799907681639669*^9}, {3.799907713681429*^9, 
   3.7999077468004923`*^9}, {3.7999245231342087`*^9, 3.799924528162668*^9}, {
   3.7999245661910934`*^9, 3.7999246243326607`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InterpLin", "[", 
    RowBox[{"a_", ",", "b_", ",", "t_"}], "]"}], ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"t", ">", "1"}], ",", " ", "ErrorBox", ",", 
     RowBox[{"a", "+", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "a"}], ")"}], " ", "*", " ", "t"}]}]}], "]"}]}], 
  ";"}]], "Input"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Right Arm", "Subtitle",
 CellChangeTimes->{{3.8000714918584533`*^9, 3.8000715022510557`*^9}}],

Cell[CellGroupData[{

Cell["Hand trajectory definition", "Section",
 CellChangeTimes->{{3.7993046058439083`*^9, 3.799304625874298*^9}, 
   3.799557331063614*^9, {3.799585650922355*^9, 3.7995856534037204`*^9}, {
   3.7995924103469706`*^9, 3.799592423571974*^9}, {3.7996038628718615`*^9, 
   3.799603872180266*^9}, {3.7996044805695863`*^9, 3.7996045061016693`*^9}, {
   3.8000715584111514`*^9, 3.8000715631547832`*^9}, {3.800071949403977*^9, 
   3.800071951827394*^9}, {3.800257617061536*^9, 3.800257617538245*^9}}],

Cell["\<\
We have DT data, 60 sample each second, so we have to interpolate between \
samples because a CT trajectory is needed inside inverse kinematic algorithm.\
\>", "Text",
 CellChangeTimes->{{3.799588054364394*^9, 3.7995881156312094`*^9}, {
   3.799604597028613*^9, 3.799604627350134*^9}, 3.8002585478085833`*^9}],

Cell[CellGroupData[{

Cell["Load Data", "Subsubsection",
 CellChangeTimes->{{3.800071964951279*^9, 3.800071971302886*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"skip", " ", "first", " ", 
   RowBox[{"row", ":", " ", 
    RowBox[{"data", " ", "description"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799589168301449*^9, 3.7995891978764114`*^9}, {
  3.800258939320729*^9, 3.8002589549461174`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"handr", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{"Handr", ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995884020995655`*^9, 3.799588497471877*^9}, {
   3.7995886044323397`*^9, 3.799588693871185*^9}, {3.799588727062657*^9, 
   3.799588732938038*^9}, {3.7995888330230017`*^9, 3.799588860627429*^9}, 
   3.7995889054086866`*^9, 3.799589074789773*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"handvr", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{"Handvr", ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7999002175298605`*^9, 3.7999002201863947`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"pos", " ", "and", " ", "quat", " ", "extraction"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.799589168301449*^9, 3.7995891978764114`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataposr", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "handr", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799588550365163*^9, 3.7995885890251837`*^9}, {
  3.7995887724611464`*^9, 3.7995887886241937`*^9}, {3.7995888212040577`*^9, 
  3.7995888220175467`*^9}, {3.7995889309417973`*^9, 3.799588941370019*^9}, {
  3.7995894920774455`*^9, 3.7995894924963255`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataquatr", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "handr", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"4", ";;", "7"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995889499033623`*^9, 3.7995889877990217`*^9}, {
  3.7995894859694967`*^9, 3.799589489930626*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"datavelr", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "handvr", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799588550365163*^9, 3.7995885890251837`*^9}, {
  3.7995887724611464`*^9, 3.7995887886241937`*^9}, {3.7995888212040577`*^9, 
  3.7995888220175467`*^9}, {3.7995889309417973`*^9, 3.799588941370019*^9}, {
  3.7995894920774455`*^9, 3.7995894924963255`*^9}, {3.7999001828839445`*^9, 
  3.799900200785821*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataangvelr", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "handvr", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"4", ";;", "6"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995889499033623`*^9, 3.7995889877990217`*^9}, {
   3.7995894859694967`*^9, 3.799589489930626*^9}, {3.7999001906099615`*^9, 
   3.7999002068899508`*^9}, 3.799900366818427*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Orientation", "Subsubsection",
 CellChangeTimes->{{3.799899607362062*^9, 3.7998996287744894`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"quat", " ", "interpolation", " ", "using", " ", "slerp"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.79958803139232*^9, 3.799588048964197*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"quatr", "[", "time_", "]"}], "=", "  ", "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"time", "\[GreaterEqual]", "tend"}], ",", " ", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"time2", " ", "=", " ", 
      RowBox[{"tend", "-", "0.001"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"Re", "[", 
      RowBox[{"Slerp", "[", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", 
          RowBox[{"Floor", "[", 
           RowBox[{"time2", "*", "samplerate"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"t", "=", 
          RowBox[{
           RowBox[{"time2", "*", " ", "samplerate"}], " ", "-", "i"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"dataquatr", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        "\t\t", 
        RowBox[{"dataquatr", "[", 
         RowBox[{"[", " ", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}], "]"}]}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"Re", "[", 
     RowBox[{"Slerp", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"time", "*", "samplerate"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"t", "=", 
         RowBox[{
          RowBox[{"time", " ", "*", " ", "samplerate"}], " ", "-", "i"}]}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"dataquatr", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"dataquatr", "[", 
        RowBox[{"[", " ", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7995894761710243`*^9, 3.799589502411525*^9}, {
   3.7995895535063667`*^9, 3.7995896795450687`*^9}, {3.799589762211838*^9, 
   3.799589833011608*^9}, {3.7995898693688555`*^9, 3.799589877777122*^9}, {
   3.7995899580985603`*^9, 3.799590052811866*^9}, {3.799590127247675*^9, 
   3.799590194329986*^9}, {3.799590282635967*^9, 3.799590302586648*^9}, {
   3.7995904317718596`*^9, 3.799590535861517*^9}, 3.799590566707635*^9, {
   3.7995906332200336`*^9, 3.7995906465985146`*^9}, {3.799590877400994*^9, 
   3.7995910269642973`*^9}, {3.79959106322342*^9, 3.799591068054925*^9}, {
   3.799591124003354*^9, 3.799591124855937*^9}, 3.7995922105951996`*^9, {
   3.7995989062524967`*^9, 3.7995989153134413`*^9}, {3.799979655443187*^9, 
   3.7999796610355434`*^9}, {3.800205364083827*^9, 3.8002053808629894`*^9}, {
   3.800209216432598*^9, 3.8002092201344347`*^9}, {3.8002589150482674`*^9, 
   3.800258919281273*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"time", "\[GreaterEqual]", "3"}], ",", 
   RowBox[{
    RowBox[{"time2", "=", 
     RowBox[{"tend", "-", "0.001`"}]}], ";", 
    RowBox[{"Re", "[", 
     RowBox[{"Slerp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"time2", " ", "samplerate"}], "]"}]}], ";", 
        RowBox[{"t", "=", 
         RowBox[{
          RowBox[{"time2", " ", "samplerate"}], "-", "i"}]}], ";", 
        RowBox[{
        "dataquatr", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
        ",", 
       RowBox[{"dataquatr", "\[LeftDoubleBracket]", 
        RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], "]"}],
      "]"}]}], ",", 
   RowBox[{"Re", "[", 
    RowBox[{"Slerp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time", " ", "samplerate"}], "]"}]}], ";", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time", " ", "samplerate"}], "-", "i"}]}], ";", 
       RowBox[{
       "dataquatr", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"dataquatr", "\[LeftDoubleBracket]", 
       RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], "]"}], 
    "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.8002650583400955`*^9, 3.800438888276821*^9, 
  3.8004417054551306`*^9, 3.8020924552848077`*^9, 3.8020932965839777`*^9, 
  3.802094226057743*^9, 3.8020948386333447`*^9, 3.8020954451267247`*^9, 
  3.8020965456790953`*^9, 3.8020992571535764`*^9, 3.802103986450968*^9, 
  3.802109306374148*^9, 3.8021466081523237`*^9, 3.802147150055978*^9, 
  3.802147689451289*^9, 3.802155432440545*^9, 3.802156559521718*^9, 
  3.8021574004914527`*^9, 3.802158068612842*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Position", "Subsubsection",
 CellChangeTimes->{{3.7998996361214857`*^9, 3.7998996438753633`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"position", " ", "linear", " ", "interpolation"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.799589449382847*^9, 3.7995894561919575`*^9}, {
  3.7995911826974335`*^9, 3.799591184586772*^9}, {3.8002590272338266`*^9, 
  3.8002590279685073`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"posr", "[", "time_", "]"}], "=", "  ", "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"time", "\[GreaterEqual]", "tend"}], ",", " ", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"time2", " ", "=", " ", 
      RowBox[{"tend", "-", "0.001"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"time2", "*", "samplerate"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"t", "=", 
         RowBox[{
          RowBox[{"time2", "*", " ", "samplerate"}], " ", "-", "i"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"dataposr", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"dataposr", "[", 
        RowBox[{"[", " ", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time", "*", "samplerate"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time", " ", "*", " ", "samplerate"}], " ", "-", "i"}]}], 
       ";", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"dataposr", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"dataposr", "[", 
       RowBox[{"[", " ", 
        RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7995894761710243`*^9, 3.799589502411525*^9}, {
   3.7995895535063667`*^9, 3.7995896795450687`*^9}, {3.799589762211838*^9, 
   3.799589833011608*^9}, {3.7995898693688555`*^9, 3.799589877777122*^9}, {
   3.7995899580985603`*^9, 3.799590052811866*^9}, {3.799590127247675*^9, 
   3.799590194329986*^9}, {3.799590282635967*^9, 3.799590302586648*^9}, {
   3.7995904317718596`*^9, 3.799590535861517*^9}, 3.799590566707635*^9, {
   3.7995906332200336`*^9, 3.7995906465985146`*^9}, {3.799590877400994*^9, 
   3.7995910269642973`*^9}, {3.79959106322342*^9, 3.799591068054925*^9}, {
   3.799591124003354*^9, 3.7995911458632956`*^9}, {3.799592047956257*^9, 
   3.7995920660904913`*^9}, {3.799729817387885*^9, 3.7997298231183705`*^9}, {
   3.799729854098565*^9, 3.799729859955495*^9}, 3.7999796659710236`*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"time", "\[GreaterEqual]", "3"}], ",", 
   RowBox[{
    RowBox[{"time2", "=", 
     RowBox[{"tend", "-", "0.001`"}]}], ";", 
    RowBox[{"InterpLin", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time2", " ", "samplerate"}], "]"}]}], ";", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time2", " ", "samplerate"}], "-", "i"}]}], ";", 
       RowBox[{
       "dataposr", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"dataposr", "\[LeftDoubleBracket]", 
       RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], 
     "]"}]}], ",", 
   RowBox[{"InterpLin", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{"time", " ", "samplerate"}], "]"}]}], ";", 
      RowBox[{"t", "=", 
       RowBox[{
        RowBox[{"time", " ", "samplerate"}], "-", "i"}]}], ";", 
      RowBox[{
      "dataposr", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
     ",", 
     RowBox[{"dataposr", "\[LeftDoubleBracket]", 
      RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], "]"}]}],
   "]"}]], "Output",
 CellChangeTimes->{3.800265058461769*^9, 3.800438888299884*^9, 
  3.8004417054786954`*^9, 3.802092455332698*^9, 3.802093296632848*^9, 
  3.8020942260926495`*^9, 3.8020948386931615`*^9, 3.8020954451666555`*^9, 
  3.8020965457578764`*^9, 3.8020992572742558`*^9, 3.80210398648588*^9, 
  3.8021093064190288`*^9, 3.802146608217721*^9, 3.8021471501018543`*^9, 
  3.8021476894882183`*^9, 3.802155432476448*^9, 3.802156559566581*^9, 
  3.802157400534337*^9, 3.8021580686617117`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Homogeneous Transform", "Subsubsection",
 CellChangeTimes->{{3.7998997395542235`*^9, 3.799899750743788*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"RotX", "[", 
    RowBox[{"Pi", "/", "2"}], "]"}], ":", " ", 
   RowBox[{
   "to", " ", "reorient", " ", "data", " ", "from", " ", "local", " ", 
    "Xsens", " ", "frame", " ", 
    RowBox[{"(", 
     RowBox[{"IMU", " ", "frame"}], ")"}], " ", "to", " ", "global", " ", 
    "frame"}]}], "  ", "*)"}]], "Input",
 CellChangeTimes->{3.7996048486976476`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"REEr", "[", "time_", "]"}], " ", ":=", 
    RowBox[{
     RowBox[{"QuatToMat", "[", 
      RowBox[{"quatr", "[", "time", "]"}], "]"}], ".", 
     RowBox[{"RotX", "[", 
      RowBox[{"Pi", "/", "2"}], "]"}]}]}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.7999261692822905`*^9, 3.7999261808557606`*^9}, 
   3.7999796761391797`*^9, 3.800206698977583*^9, {3.8002067309618697`*^9, 
   3.8002067375175705`*^9}, 3.80020678063422*^9, 3.8002069810340705`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TEEr", "[", "time_", "]"}], " ", ":=", " ", 
   RowBox[{"RPToHomogeneous", "[", 
    RowBox[{
     RowBox[{"REEr", "[", "time", "]"}], ",", 
     RowBox[{"posr", "[", "time", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799597771532092*^9, 3.7995978007631855`*^9}, {
   3.7995979415205035`*^9, 3.7995979588573112`*^9}, {3.7995979977379694`*^9, 
   3.7995980149521627`*^9}, {3.7995980875471926`*^9, 
   3.7995980903147593`*^9}, {3.7995999958333054`*^9, 
   3.7995999971498127`*^9}, {3.79960232680692*^9, 3.799602330755127*^9}, {
   3.799733696907731*^9, 3.7997337003226566`*^9}, {3.799926192668418*^9, 
   3.7999261949081497`*^9}, 3.7999796765630636`*^9, {3.8002068207778544`*^9, 
   3.8002068358819313`*^9}, 3.8002069258659267`*^9, 3.8002591223452234`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Angular velocity", "Subsubsection",
 CellChangeTimes->{{3.7998996522428703`*^9, 3.7998996654214745`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"angular", " ", "velocity", " ", "linear", " ", "interpolation"}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799589449382847*^9, 3.7995894561919575`*^9}, {
  3.7995911826974335`*^9, 3.799591184586772*^9}, {3.799899814993404*^9, 
  3.799899821104529*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"angvelr", "[", "time_", "]"}], "=", "  ", "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"time", "\[GreaterEqual]", "tend"}], ",", " ", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"time2", " ", "=", " ", 
      RowBox[{"tend", "-", "0.001"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"time2", "*", "samplerate"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"t", "=", 
         RowBox[{
          RowBox[{"time2", "*", " ", "samplerate"}], " ", "-", "i"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"dataangvelr", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"dataangvelr", "[", 
        RowBox[{"[", " ", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time", "*", "samplerate"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time", " ", "*", " ", "samplerate"}], " ", "-", "i"}]}], 
       ";", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"dataangvelr", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"dataangvelr", "[", 
       RowBox[{"[", " ", 
        RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7995894761710243`*^9, 3.799589502411525*^9}, {
   3.7995895535063667`*^9, 3.7995896795450687`*^9}, {3.799589762211838*^9, 
   3.799589833011608*^9}, {3.7995898693688555`*^9, 3.799589877777122*^9}, {
   3.7995899580985603`*^9, 3.799590052811866*^9}, {3.799590127247675*^9, 
   3.799590194329986*^9}, {3.799590282635967*^9, 3.799590302586648*^9}, {
   3.7995904317718596`*^9, 3.799590535861517*^9}, 3.799590566707635*^9, {
   3.7995906332200336`*^9, 3.7995906465985146`*^9}, {3.799590877400994*^9, 
   3.7995910269642973`*^9}, {3.79959106322342*^9, 3.799591068054925*^9}, {
   3.799591124003354*^9, 3.7995911458632956`*^9}, {3.799592047956257*^9, 
   3.7995920660904913`*^9}, {3.799729817387885*^9, 3.7997298231183705`*^9}, {
   3.799729854098565*^9, 3.799729859955495*^9}, {3.7998998369699306`*^9, 
   3.79989983841738*^9}, {3.7998998828978395`*^9, 3.799899910089052*^9}, 
   3.7999796739549303`*^9, {3.8002054154114375`*^9, 3.800205430894555*^9}, {
   3.8002092298092775`*^9, 3.800209236097231*^9}, {3.8002591459210873`*^9, 
   3.800259147382767*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"time", "\[GreaterEqual]", "3"}], ",", 
   RowBox[{
    RowBox[{"time2", "=", 
     RowBox[{"tend", "-", "0.001`"}]}], ";", 
    RowBox[{"InterpLin", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time2", " ", "samplerate"}], "]"}]}], ";", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time2", " ", "samplerate"}], "-", "i"}]}], ";", 
       RowBox[{
       "dataangvelr", "\[LeftDoubleBracket]", "i", 
        "\[RightDoubleBracket]"}]}], ",", 
      RowBox[{"dataangvelr", "\[LeftDoubleBracket]", 
       RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], 
     "]"}]}], ",", 
   RowBox[{"InterpLin", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{"time", " ", "samplerate"}], "]"}]}], ";", 
      RowBox[{"t", "=", 
       RowBox[{
        RowBox[{"time", " ", "samplerate"}], "-", "i"}]}], ";", 
      RowBox[{
      "dataangvelr", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
      ",", 
     RowBox[{"dataangvelr", "\[LeftDoubleBracket]", 
      RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], "]"}]}],
   "]"}]], "Output",
 CellChangeTimes->{3.8002650588272767`*^9, 3.8004388883485174`*^9, 
  3.80044170552783*^9, 3.8020924554403505`*^9, 3.8020932967533274`*^9, 
  3.802094226183406*^9, 3.8020948387639713`*^9, 3.802095445295274*^9, 
  3.802096546030145*^9, 3.80209925760756*^9, 3.8021039865626683`*^9, 
  3.8021093065118437`*^9, 3.8021466083857713`*^9, 3.80214715021555*^9, 
  3.8021476895699987`*^9, 3.802155432563225*^9, 3.8021565596962347`*^9, 
  3.802157400707873*^9, 3.802158068797346*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Linear velocity", "Subsubsection",
 CellChangeTimes->{{3.7998999310113134`*^9, 3.7998999489112716`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"linear", " ", "velocity", " ", "linear", " ", "interpolation"}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799589449382847*^9, 3.7995894561919575`*^9}, {
  3.7995911826974335`*^9, 3.799591184586772*^9}, {3.799899814993404*^9, 
  3.799899821104529*^9}, {3.799899964617754*^9, 3.7998999826092443`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"velr", "[", "time_", "]"}], "=", "  ", "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"time", "\[GreaterEqual]", "tend"}], ",", " ", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"time2", " ", "=", " ", 
      RowBox[{"tend", "-", "0.001"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"time2", "*", "samplerate"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"t", "=", 
         RowBox[{
          RowBox[{"time2", "*", " ", "samplerate"}], " ", "-", "i"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"datavelr", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"datavelr", "[", 
        RowBox[{"[", " ", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time", "*", "samplerate"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time", " ", "*", " ", "samplerate"}], " ", "-", "i"}]}], 
       ";", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"datavelr", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"datavelr", "[", 
       RowBox[{"[", " ", 
        RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7995894761710243`*^9, 3.799589502411525*^9}, {
   3.7995895535063667`*^9, 3.7995896795450687`*^9}, {3.799589762211838*^9, 
   3.799589833011608*^9}, {3.7995898693688555`*^9, 3.799589877777122*^9}, {
   3.7995899580985603`*^9, 3.799590052811866*^9}, {3.799590127247675*^9, 
   3.799590194329986*^9}, {3.799590282635967*^9, 3.799590302586648*^9}, {
   3.7995904317718596`*^9, 3.799590535861517*^9}, 3.799590566707635*^9, {
   3.7995906332200336`*^9, 3.7995906465985146`*^9}, {3.799590877400994*^9, 
   3.7995910269642973`*^9}, {3.79959106322342*^9, 3.799591068054925*^9}, {
   3.799591124003354*^9, 3.7995911458632956`*^9}, {3.799592047956257*^9, 
   3.7995920660904913`*^9}, {3.799729817387885*^9, 3.7997298231183705`*^9}, {
   3.799729854098565*^9, 3.799729859955495*^9}, {3.7998998369699306`*^9, 
   3.79989983841738*^9}, {3.7998998828978395`*^9, 3.799899910089052*^9}, {
   3.799899975514155*^9, 3.799899997137985*^9}, 3.799979679915078*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"time", "\[GreaterEqual]", "3"}], ",", 
   RowBox[{
    RowBox[{"time2", "=", 
     RowBox[{"tend", "-", "0.001`"}]}], ";", 
    RowBox[{"InterpLin", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time2", " ", "samplerate"}], "]"}]}], ";", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time2", " ", "samplerate"}], "-", "i"}]}], ";", 
       RowBox[{
       "datavelr", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"datavelr", "\[LeftDoubleBracket]", 
       RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], 
     "]"}]}], ",", 
   RowBox[{"InterpLin", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{"time", " ", "samplerate"}], "]"}]}], ";", 
      RowBox[{"t", "=", 
       RowBox[{
        RowBox[{"time", " ", "samplerate"}], "-", "i"}]}], ";", 
      RowBox[{
      "datavelr", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
     ",", 
     RowBox[{"datavelr", "\[LeftDoubleBracket]", 
      RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], "]"}]}],
   "]"}]], "Output",
 CellChangeTimes->{3.800265058957798*^9, 3.8004388883720818`*^9, 
  3.8004417055488877`*^9, 3.80209245549127*^9, 3.802093296784298*^9, 
  3.802094226215377*^9, 3.8020948387964864`*^9, 3.8020954453252387`*^9, 
  3.802096546151823*^9, 3.80209925773894*^9, 3.802103986596582*^9, 
  3.802109306557716*^9, 3.8021466084880943`*^9, 3.802147150255443*^9, 
  3.802147689605913*^9, 3.802155432598117*^9, 3.8021565597331395`*^9, 
  3.802157400759734*^9, 3.802158068844232*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["10R construction Denavit Hartenberg ", "Section",
 CellChangeTimes->{{3.7993041148775673`*^9, 3.799304162433352*^9}, {
   3.7993043060564065`*^9, 3.799304331079752*^9}, 3.799557327337248*^9, {
   3.7995856588272266`*^9, 3.7995856603022757`*^9}, {3.8000723845963993`*^9, 
   3.800072384804468*^9}, 3.8002580485261183`*^9}],

Cell[CellGroupData[{

Cell["Parameters", "Subsection",
 CellChangeTimes->{{3.799306023953418*^9, 3.799306036759206*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Parameters", " ", "assignment", " ", "using", " ", "loaded", " ", "data"}],
   " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7995856685788174`*^9, 3.799585703199294*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"L5Rot", " ", "=", " ", 
   RowBox[{"RotX", "[", 
    RowBox[{
     RowBox[{"-", "Pi"}], "/", "2"}], "]"}]}], ";"}]], "Input",
 FontWeight->"Plain"],

Cell[BoxData[
 RowBox[{
  RowBox[{"L5Pos", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"parl", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
     RowBox[{
      RowBox[{"parl", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"parl", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7993076792813435`*^9, 3.7993077244854803`*^9}, {
  3.799553928094157*^9, 3.799553948790646*^9}, {3.7995753642162533`*^9, 
  3.7995753867156816`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tg0", " ", "=", " ", 
   RowBox[{"RPToHomogeneous", "[", 
    RowBox[{"L5Rot", ",", " ", "L5Pos"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7993072083421474`*^9, 3.799307215450121*^9}, {
  3.7993073106798744`*^9, 3.7993073114887123`*^9}, {3.799307446798936*^9, 
  3.7993074588786383`*^9}, {3.799307653650872*^9, 3.7993076689310904`*^9}, {
  3.79930773106895*^9, 3.799307737930604*^9}, {3.799307775423293*^9, 
  3.7993077902377434`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tg", " ", "=", " ", 
   RowBox[{"RPToHomogeneous", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "3", "]"}], ",", " ", "L5Pos"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.799559288794838*^9, 3.799559317452064*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Theta]r", "=", 
   RowBox[{
    RowBox[{"parr", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "6", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7993082342950516`*^9, 3.799308241216509*^9}, 
   3.79930986088422*^9, {3.799310242661644*^9, 3.7993102463112707`*^9}, {
   3.7995750569778323`*^9, 3.7995750846478815`*^9}, 3.7995751438267727`*^9, 
   3.7995780347485857`*^9, 3.7995857855999813`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a3r", "=", 
   RowBox[{
    RowBox[{"parr", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799309734670747*^9, 3.799309736419035*^9}, 
   3.799309866426634*^9, {3.799310169550455*^9, 3.7993101729232993`*^9}, 
   3.799575150681938*^9, 3.7995752006886597`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d3r", "=", 
   RowBox[{
    RowBox[{"parr", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "5", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799309767785523*^9, 3.7993097698203316`*^9}, 
   3.799309870438949*^9, {3.7993101561015472`*^9, 3.7993101601766896`*^9}, 
   3.7995751531873665`*^9, {3.799575240537356*^9, 3.7995752694540205`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d6r", "=", 
   RowBox[{"-", 
    RowBox[{
     RowBox[{"parr", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", "7", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7993097747130246`*^9, 3.7993097768896027`*^9}, 
   3.799309873735575*^9, {3.7993101804635057`*^9, 3.7993101846440277`*^9}, 
   3.7995751554422936`*^9, 3.7995752529112844`*^9, {3.7995752852548304`*^9, 
   3.7995752857385197`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d8r", "=", 
   RowBox[{"-", 
    RowBox[{
     RowBox[{"parr", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", "8", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7993097786922617`*^9, 3.7993097805788403`*^9}, 
   3.799309877069992*^9, {3.7993101941375895`*^9, 3.799310199701789*^9}, 
   3.799575158505872*^9, 3.7995752549864826`*^9, 3.799575288726509*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d10r", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.7993097829815545`*^9, 3.7993097854809685`*^9}, 
   3.7993098805054874`*^9, 3.7993102097973566`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Denavit Hartenberg Table and EE transform", "Subsection",
 CellChangeTimes->{{3.7993060400554314`*^9, 3.7993060937009387`*^9}, 
   3.799585950860078*^9}],

Cell["\<\
Note: \[OpenCurlyDoubleQuote]g\[CloseCurlyDoubleQuote] frame is the provided \
global frame in which the data are expressed.\
\>", "Text",
 CellChangeTimes->{{3.799306072839709*^9, 3.7993060797572145`*^9}, {
  3.799306352245037*^9, 3.7993063598876524`*^9}, {3.799585930337002*^9, 
  3.7995859392221937`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]3r", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "Pi"}], "/", "2"}], " ", "-", " ", "\[Theta]r"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]4r", " ", "=", " ", 
   RowBox[{
    RowBox[{"Pi", "/", "2"}], " ", "+", " ", "\[Theta]r"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.799307747635585*^9, 3.7993077840722284`*^9}, {
   3.7993081590781226`*^9, 3.7993082206215734`*^9}, {3.799308263643032*^9, 
   3.799308295352331*^9}, 3.79956334801563*^9, 3.799563997212399*^9, {
   3.800439217882078*^9, 3.800439224697687*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Denavit", " ", "Hartenberg", " ", "Table", " ", "for", " ", "right", " ", 
   "arm"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7995859678257155`*^9, 3.799585972364581*^9}, {
  3.79958600298276*^9, 3.799586009336763*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"DH", " ", "order", " ", 
    RowBox[{"is", ":", " ", "a"}]}], ",", " ", "alpha", ",", " ", "d", ",", 
   " ", "theta"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7993063629573965`*^9, 3.799306378558683*^9}, {
  3.7995865495069675`*^9, 3.7995865538666253`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T01r", "[", "q1_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"+", "Pi"}], "/", "2"}], ",", "0", ",", "q1", ",", 
      "\"\<R\>\""}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764862097219008*^9, 3.764862154836344*^9}, {
   3.764862208885091*^9, 3.7648622289428053`*^9}, {3.764909784415634*^9, 
   3.764909784962381*^9}, 3.7651022406737347`*^9, 3.799306009146008*^9, {
   3.799307200248787*^9, 3.799307201551299*^9}, 3.799307818158717*^9, {
   3.7993079220209455`*^9, 3.799307931652195*^9}, {3.7993079805285664`*^9, 
   3.799307990640476*^9}, {3.799308042745163*^9, 3.799308044934311*^9}, 
   3.799309026109894*^9, 3.799563994356498*^9},
 ExpressionUUID -> "c291e399-0c6c-4bae-afcc-6b9ec38c2a96"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T12r", "[", "q2_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", 
      RowBox[{"q2", " ", "+", " ", 
       RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.764862253702861*^9, 3.764862282325665*^9}, {
   3.764909790736429*^9, 3.764909791443843*^9}, 3.765102271340701*^9, 
   3.7993078225509005`*^9, {3.7993079363416557`*^9, 3.79930794045573*^9}, {
   3.7993079848050785`*^9, 3.7993080016141367`*^9}, {3.7993080512245016`*^9, 
   3.799308053923278*^9}, 3.7993090272864666`*^9, {3.7993091200684967`*^9, 
   3.799309124937396*^9}},
 ExpressionUUID -> "84243484-b146-4646-8fe1-09f283de623b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T23r", "[", "q3_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"a3r", ",", 
      RowBox[{"Pi", "/", "2"}], ",", "d3r", ",", 
      RowBox[{"q3", " ", "+", " ", "\[Theta]3r"}], ",", "\"\<R\>\""}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.76486228807624*^9, 3.764862329372554*^9}, {
   3.7649097986295967`*^9, 3.7649097993263817`*^9}, 3.765102274537818*^9, {
   3.799307825489117*^9, 3.7993078257244153`*^9}, {3.7993078723348637`*^9, 
   3.7993078730538692`*^9}, {3.7993079432402143`*^9, 3.799307975269594*^9}, 
   3.7993080052734003`*^9, {3.7993080566310363`*^9, 3.7993080795637603`*^9}, 
   3.799309028429207*^9, {3.799309223739346*^9, 3.7993092262283087`*^9}},
 ExpressionUUID -> "c131592d-325c-4219-a5a6-5f8e28c79dd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T34r", "[", "q4_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Alpha]4r", ",", "0", ",", 
      RowBox[{"q4", " ", "+", " ", 
       RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.764862320226762*^9, 3.764862324062711*^9}, {
   3.7648623546291513`*^9, 3.764862379868434*^9}, {3.764904568969067*^9, 
   3.764904574856801*^9}, {3.764909801460581*^9, 3.764909802131589*^9}, 
   3.76510227733145*^9, 3.7993078291761966`*^9, {3.7993080119076138`*^9, 
   3.79930801745179*^9}, {3.7993080815314665`*^9, 3.7993081024695497`*^9}, 
   3.799309029474966*^9},
 ExpressionUUID -> "ad4684fc-7ddd-4b63-9126-3f395283cb31"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T45r", "[", "q5_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", 
      RowBox[{"q5", " ", "-", " ", 
       RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.764862097219008*^9, 3.764862154836344*^9}, {
   3.764862208885091*^9, 3.7648622289428053`*^9}, {3.764909784415634*^9, 
   3.764909784962381*^9}, 3.7651022406737347`*^9, 3.799306009146008*^9, {
   3.799307068629629*^9, 3.799307079159524*^9}, 3.7993078313184595`*^9, {
   3.7993080202932673`*^9, 3.799308020704167*^9}, {3.799308106937532*^9, 
   3.799308110068211*^9}, 3.7993090303203444`*^9},
 ExpressionUUID -> "c291e399-0c6c-4bae-afcc-6b9ec38c2a96"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T56r", "[", "q6_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"Pi", "/", "2"}], ",", "d6r", ",", "q6", ",", "\"\<R\>\""}], 
     "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764862253702861*^9, 3.764862282325665*^9}, {
   3.764909790736429*^9, 3.764909791443843*^9}, 3.765102271340701*^9, {
   3.799307086010206*^9, 3.7993070896005735`*^9}, 3.7993078341589055`*^9, {
   3.799307879287269*^9, 3.799307879892585*^9}, 3.7993080237070665`*^9, {
   3.79930811297945*^9, 3.799308113498988*^9}, 3.799309031046692*^9, {
   3.7993092154416943`*^9, 3.799309219090613*^9}},
 ExpressionUUID -> "84243484-b146-4646-8fe1-09f283de623b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T67r", "[", "q7_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"Pi", "/", "2"}], ",", "0", ",", 
      RowBox[{"q7", " ", "+", " ", "Pi"}], ",", "\"\<R\>\""}], "}"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.76486228807624*^9, 3.764862329372554*^9}, {
   3.7649097986295967`*^9, 3.7649097993263817`*^9}, 3.765102274537818*^9, {
   3.7993070922774024`*^9, 3.799307095690277*^9}, 3.799307837733356*^9, 
   3.799308026549467*^9, {3.79930811698972*^9, 3.7993081371607256`*^9}, 
   3.799309031857193*^9},
 ExpressionUUID -> "c131592d-325c-4219-a5a6-5f8e28c79dd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T78r", "[", "q8_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "2"}], ",", "d8r", ",", "q8", ",", 
      "\"\<R\>\""}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764862320226762*^9, 3.764862324062711*^9}, {
   3.7648623546291513`*^9, 3.764862379868434*^9}, {3.764904568969067*^9, 
   3.764904574856801*^9}, {3.764909801460581*^9, 3.764909802131589*^9}, 
   3.76510227733145*^9, {3.799307101596485*^9, 3.799307104871729*^9}, 
   3.799307840017273*^9, {3.7993078852761908`*^9, 3.7993078858626223`*^9}, {
   3.7993080286299047`*^9, 3.7993080288912764`*^9}, {3.7993081229826794`*^9, 
   3.7993081233417196`*^9}, 3.7993090328642106`*^9, 3.7993092140767336`*^9},
 ExpressionUUID -> "ad4684fc-7ddd-4b63-9126-3f395283cb31"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T89r", "[", "q9_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"Pi", "/", "2"}], ",", "0", ",", 
      RowBox[{"q9", " ", "+", " ", 
       RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.76486228807624*^9, 3.764862329372554*^9}, {
   3.7649097986295967`*^9, 3.7649097993263817`*^9}, 3.765102274537818*^9, {
   3.7993070922774024`*^9, 3.7993071253031373`*^9}, 3.7993078429185133`*^9, 
   3.7993080318153872`*^9, {3.799308125521854*^9, 3.79930814279174*^9}, 
   3.7993090337509937`*^9},
 ExpressionUUID -> "c131592d-325c-4219-a5a6-5f8e28c79dd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T910r", "[", "q10_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"Pi", "/", "2"}], ",", "d10r", ",", 
      RowBox[{"q10", " ", "+", " ", 
       RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.764862320226762*^9, 3.764862324062711*^9}, {
   3.7648623546291513`*^9, 3.764862379868434*^9}, {3.764904568969067*^9, 
   3.764904574856801*^9}, {3.764909801460581*^9, 3.764909802131589*^9}, 
   3.76510227733145*^9, {3.799307101596485*^9, 3.799307137393798*^9}, 
   3.7993078490949993`*^9, {3.7993078902459087`*^9, 3.7993078913849025`*^9}, 
   3.7993080344114466`*^9, {3.799308128970621*^9, 3.799308147761381*^9}, 
   3.7993090356472864`*^9, 3.799309211242158*^9},
 ExpressionUUID -> "ad4684fc-7ddd-4b63-9126-3f395283cb31"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"EE", " ", 
   RowBox[{"transform", ":", " ", 
    RowBox[{"right", " ", "hand"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799586092632036*^9, 3.7995861365229964`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TgEEr", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], "=", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01r", "[", "q1", "]"}], ".", 
    RowBox[{"T12r", "[", "q2", "]"}], ".", 
    RowBox[{"T23r", "[", "q3", "]"}], ".", 
    RowBox[{"T34r", "[", "q4", "]"}], ".", 
    RowBox[{"T45r", "[", "q5", "]"}], ".", 
    RowBox[{"T56r", "[", "q6", "]"}], ".", 
    RowBox[{"T67r", "[", "q7", "]"}], ".", 
    RowBox[{"T78r", "[", "q8", "]"}], ".", 
    RowBox[{"T89r", "[", "q9", "]"}], ".", 
    RowBox[{"T910r", "[", "q10", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7649048499309*^9, 3.764904919871928*^9}, {
   3.76490498496495*^9, 3.764904987106889*^9}, {3.764909812358943*^9, 
   3.764909817212101*^9}, 3.765102396993044*^9, {3.765103393948989*^9, 
   3.7651033990461187`*^9}, {3.7993083457225885`*^9, 
   3.7993083788350563`*^9}, {3.79930903710919*^9, 3.7993090705968957`*^9}, {
   3.7993093557960625`*^9, 3.7993094768822484`*^9}, {3.799310427952053*^9, 
   3.799310432061987*^9}, {3.7995766267384553`*^9, 3.799576628084377*^9}, 
   3.800207952204007*^9, 3.8002083503088245`*^9},
 ExpressionUUID -> "2369f496-18c4-4174-952a-6edb1bd994ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TgEErInv", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidInverse", "[", 
    RowBox[{"TgEEr", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7", 
       ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8002083437900157`*^9, 3.800208420788727*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"posEEr", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], "=", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"TgEEr", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7", 
       ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.764909826652611*^9, 3.76490985170117*^9}, {
   3.7649099304712543`*^9, 3.7649099525931063`*^9}, {3.765017061742051*^9, 
   3.765017062927095*^9}, 3.7651035167512217`*^9, {3.799309528390517*^9, 
   3.799309592088688*^9}, 3.7993096236574764`*^9, {3.7995766309868035`*^9, 
   3.7995766599506764`*^9}},
 ExpressionUUID -> "d5c2ca86-dbd9-4c21-8413-5cedd59cc621"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"orEErInv", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], "=", 
   RowBox[{"RigidOrientation", "[", 
    RowBox[{"TgEErInv", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7", 
       ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7649099559516773`*^9, 3.764909993246737*^9}, {
   3.765017068392355*^9, 3.765017069772504*^9}, 3.7651035919272947`*^9, {
   3.765108682861401*^9, 3.7651086865075808`*^9}, 3.7993095341632147`*^9, {
   3.7993096505533214`*^9, 3.7993096824823303`*^9}, {3.7995766344319406`*^9, 
   3.799576665908189*^9}, {3.8002079984520226`*^9, 3.800208003403652*^9}, {
   3.8002083359732447`*^9, 3.8002083656050525`*^9}},
 ExpressionUUID -> "4e8cfabd-ac4d-47d6-acd4-26bbeb13b8f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Jacobian", "Subsection",
 CellChangeTimes->{{3.799909533647818*^9, 3.799909551667117*^9}}],

Cell[CellGroupData[{

Cell["DH table", "Subsubsection",
 CellChangeTimes->{{3.8002581083575053`*^9, 3.8002581194867487`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DHtabler", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"+", "Pi"}], "/", "2"}], ",", "0", ",", "q1", ",", 
       "\"\<R\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", 
       RowBox[{"q2", " ", "+", " ", 
        RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"a3r", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "d3r", ",", 
       RowBox[{"q3", " ", "+", " ", "\[Theta]3r"}], ",", "\"\<R\>\""}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\[Alpha]4r", ",", "0", ",", 
       RowBox[{"q4", " ", "+", " ", 
        RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", 
       RowBox[{"q5", " ", "-", " ", 
        RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "d6r", ",", "q6", ",", "\"\<R\>\""}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "0", ",", 
       RowBox[{"q7", " ", "+", " ", "Pi"}], ",", "\"\<R\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", "d8r", ",", "q8", ",", 
       "\"\<R\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "0", ",", 
       RowBox[{"q9", " ", "+", " ", 
        RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "d10r", ",", 
       RowBox[{"q10", " ", "+", " ", 
        RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7999102056047955`*^9, 3.7999104014855003`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Jacobian", "Subsubsection",
 CellChangeTimes->{{3.7999096438158216`*^9, 3.7999096671773973`*^9}, {
  3.8000720606998506`*^9, 3.8000720620758114`*^9}}],

Cell["\<\
DHJacobBase::usage = \"DHJacobBase[DHtable, Tb0] computes the DH spatial \
Jacobian for the supplied DH table DHtable, w.r.t. a base frame Sb (both \
origin and orientation are considered) \\nwhere the displacement from Sb to \
S0 is expressed by the homogeneous matrix Tb0.\"\
\>", "Text",
 CellChangeTimes->{{3.7999099564181485`*^9, 3.7999099564191604`*^9}, {
  3.7999113420303617`*^9, 3.799911358100662*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Definition", " ", "of", " ", "geometric", " ", "arm", " ", "Jacobian", " ",
    "from", " ", "DH", " ", "parametrization"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799909556783244*^9, 3.7999096292829437`*^9}, {
  3.799911372861762*^9, 3.7999113741176367`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Jacr", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"DHJacobBase", "[", 
    RowBox[{
     RowBox[{"DHtabler", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7",
         ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], ",", " ", "Tg0"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7999104158319073`*^9, 3.7999105107248716`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"sanity", " ", "check"}], "-", " ", 
   RowBox[{
   "we", " ", "obtain", " ", "linear", " ", "and", " ", "angular", " ", 
    "velocity", " ", "of", " ", "hand", " ", "wrt", " ", "our", " ", "global",
     " ", "frame"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7999109146348124`*^9, 3.7999109219493265`*^9}, {
  3.7999111037491584`*^9, 3.799911143357724*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Jacr", "[", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0"}], "}"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7999105194829373`*^9, 3.799910539228326*^9}, {
  3.7999105896606455`*^9, 3.799910639660932*^9}, {3.7999107824293222`*^9, 
  3.799910835965353*^9}, {3.79991089278183*^9, 3.799910910540705*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Homogeneous Transform", "Subsection",
 CellChangeTimes->{{3.799555533156518*^9, 3.7995555957242374`*^9}, {
  3.7995866876817417`*^9, 3.7995866903239403`*^9}, {3.8000721130119696`*^9, 
  3.8000721148279057`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Tgir", " ", "=", " ", 
   RowBox[{
   "homogeneous", " ", "transformation", " ", "from", " ", "global", " ", 
    "frame", " ", "to", " ", "\"\<i\>\"", " ", "frame"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7995867149778557`*^9, 3.799586767561265*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg1r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01r", "[", "q1", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, 
   3.7995558948012996`*^9, {3.799577397916572*^9, 3.799577399470049*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg2r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01r", "[", "q1", "]"}], ".", 
    RowBox[{"T12r", "[", "q2", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, {
   3.7995558948012996`*^9, 3.7995559000448437`*^9}, 3.7995774063536005`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg3r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01r", "[", "q1", "]"}], ".", 
    RowBox[{"T12r", "[", "q2", "]"}], ".", 
    RowBox[{"T23r", "[", "q3", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, {
   3.7995558948012996`*^9, 3.799555902567129*^9}, 3.799577413350628*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg4r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01r", "[", "q1", "]"}], ".", 
    RowBox[{"T12r", "[", "q2", "]"}], ".", 
    RowBox[{"T23r", "[", "q3", "]"}], ".", 
    RowBox[{"T34r", "[", "q4", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, {
   3.7995558948012996`*^9, 3.7995559052319837`*^9}, 3.799577415758294*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg5r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01r", "[", "q1", "]"}], ".", 
    RowBox[{"T12r", "[", "q2", "]"}], ".", 
    RowBox[{"T23r", "[", "q3", "]"}], ".", 
    RowBox[{"T34r", "[", "q4", "]"}], ".", 
    RowBox[{"T45r", "[", "q5", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, {
   3.7995558948012996`*^9, 3.7995559083368616`*^9}, 3.7995562937221403`*^9, 
   3.7995774179427366`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg6r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01r", "[", "q1", "]"}], ".", 
    RowBox[{"T12r", "[", "q2", "]"}], ".", 
    RowBox[{"T23r", "[", "q3", "]"}], ".", 
    RowBox[{"T34r", "[", "q4", "]"}], ".", 
    RowBox[{"T45r", "[", "q5", "]"}], ".", 
    RowBox[{"T56r", "[", "q6", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, {
   3.7995558948012996`*^9, 3.799555910715434*^9}, 3.7995562955954866`*^9, 
   3.7995774224245696`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg7r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01r", "[", "q1", "]"}], ".", 
    RowBox[{"T12r", "[", "q2", "]"}], ".", 
    RowBox[{"T23r", "[", "q3", "]"}], ".", 
    RowBox[{"T34r", "[", "q4", "]"}], ".", 
    RowBox[{"T45r", "[", "q5", "]"}], ".", 
    RowBox[{"T56r", "[", "q6", "]"}], ".", 
    RowBox[{"T67r", "[", "q7", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799554991959058*^9, 3.799554994062825*^9}, 
   3.7995550787365417`*^9, {3.7995554495409145`*^9, 3.7995554570830665`*^9}, {
   3.799555850829101*^9, 3.799555865884227*^9}, {3.7995559190669622`*^9, 
   3.7995559279420056`*^9}, {3.7995559615460043`*^9, 3.7995559626672993`*^9}, 
   3.799556296596937*^9, 3.7995774255011387`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg8r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01r", "[", "q1", "]"}], ".", 
    RowBox[{"T12r", "[", "q2", "]"}], ".", 
    RowBox[{"T23r", "[", "q3", "]"}], ".", 
    RowBox[{"T34r", "[", "q4", "]"}], ".", 
    RowBox[{"T45r", "[", "q5", "]"}], ".", 
    RowBox[{"T56r", "[", "q6", "]"}], ".", 
    RowBox[{"T67r", "[", "q7", "]"}], ".", 
    RowBox[{"T78r", "[", "q8", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995549963258677`*^9, 3.7995549976060557`*^9}, 
   3.7995550821907005`*^9, {3.799555462468993*^9, 3.799555467926289*^9}, {
   3.799555954295529*^9, 3.799555978332964*^9}, 3.799556297823711*^9, 
   3.7995774298453836`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg9r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01r", "[", "q1", "]"}], ".", 
    RowBox[{"T12r", "[", "q2", "]"}], ".", 
    RowBox[{"T23r", "[", "q3", "]"}], ".", 
    RowBox[{"T34r", "[", "q4", "]"}], ".", 
    RowBox[{"T45r", "[", "q5", "]"}], ".", 
    RowBox[{"T56r", "[", "q6", "]"}], ".", 
    RowBox[{"T67r", "[", "q7", "]"}], ".", 
    RowBox[{"T78r", "[", "q8", "]"}], ".", 
    RowBox[{"T89r", "[", "q9", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799554999873102*^9, 3.799555003002037*^9}, 
   3.7995550853181353`*^9, {3.799555474222129*^9, 3.7995554791602144`*^9}, {
   3.799555982078133*^9, 3.799556004516265*^9}, 3.799556299337923*^9, 
   3.7995774320395255`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Tg10r", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
       ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
      "}"}], "]"}], " ", "=", " ", 
    RowBox[{"Tg0", ".", 
     RowBox[{"T01r", "[", "q1", "]"}], ".", 
     RowBox[{"T12r", "[", "q2", "]"}], ".", 
     RowBox[{"T23r", "[", "q3", "]"}], ".", 
     RowBox[{"T34r", "[", "q4", "]"}], ".", 
     RowBox[{"T45r", "[", "q5", "]"}], ".", 
     RowBox[{"T56r", "[", "q6", "]"}], ".", 
     RowBox[{"T67r", "[", "q7", "]"}], ".", 
     RowBox[{"T78r", "[", "q8", "]"}], ".", 
     RowBox[{"T89r", "[", "q9", "]"}], ".", 
     RowBox[{"T910r", "[", "q10", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7995550051530223`*^9, 3.7995550084579816`*^9}, 
   3.7995550874084764`*^9, {3.7995554846984434`*^9, 3.7995554910566845`*^9}, {
   3.7995560089095345`*^9, 3.7995560206108074`*^9}, 3.7995563005248404`*^9, {
   3.799560761829733*^9, 3.7995607661218605`*^9}, 3.799577434277096*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Inverse Kinematic : CLIK with constrains", "Section",
 CellChangeTimes->{{3.7993043705938053`*^9, 3.7993044075199327`*^9}, {
   3.799304438798328*^9, 3.799304451515282*^9}, {3.799564595024484*^9, 
   3.799564623184705*^9}, {3.7996044948207045`*^9, 3.7996045007478943`*^9}, {
   3.799604969301017*^9, 3.799604981653998*^9}, {3.799932596325004*^9, 
   3.799932611481658*^9}, {3.80007238359661*^9, 3.8000723837886353`*^9}, 
   3.8002630126896577`*^9}],

Cell[CellGroupData[{

Cell["Functional definition", "Subsection",
 CellChangeTimes->{{3.7993043447169266`*^9, 3.7993043672337227`*^9}, {
  3.799586676453062*^9, 3.7995866785166917`*^9}, {3.7996049314263735`*^9, 
  3.7996049537926455`*^9}, {3.799932526089204*^9, 3.7999325266902523`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Weight", " ", "matrix", " ", "inside", " ", "functional", " ", "def"}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799911523910018*^9, 3.7999115450945272`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Jwr", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Inverse", "[", "W", "]"}], ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Jacr", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7",
         ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], "]"}], ".", 
    RowBox[{"Inverse", "[", 
     RowBox[{
      RowBox[{"Jacr", "[", 
       RowBox[{"{", 
        RowBox[{
        "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", 
         "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], ".", 
      RowBox[{"Inverse", "[", "W", "]"}], ".", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Jacr", "[", 
        RowBox[{"{", 
         RowBox[{
         "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", 
          "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], "]"}]}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.7999265988368874`*^9, {3.799926897139247*^9, 3.7999269058574934`*^9}, 
   3.7999290216762443`*^9, 3.799929080946271*^9, {3.7999294125977564`*^9, 
   3.7999294324783735`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Position and orientation error of the end-effector", "Subsection",
 CellChangeTimes->{{3.669901455657922*^9, 3.6699014811971664`*^9}, {
  3.7999327425681486`*^9, 3.7999327480109615`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Position", " ", "error"}], " ", "=", " ", 
   RowBox[{
   "difference", " ", "between", " ", "the", " ", "desired", " ", "position", 
    " ", "of", " ", "the", " ", "EE", " ", "over", " ", "the", " ", "ideal", 
    " ", "trajectory", " ", "to", " ", "be", " ", "followed", " ", "and", " ",
     "the", " ", "position", " ", "of", " ", "the", " ", "EE", " ", "over", 
    " ", "the", " ", "real", " ", "trajectory", " ", "that", " ", "it", " ", 
    "perform", " ", "depending", " ", "on", " ", "joint", " ", "angles"}]}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7583843731790433`*^9, 3.758384391547526*^9}, 
   3.758517595732815*^9, {3.758517630742379*^9, 3.7585176307428803`*^9}, {
   3.80026310574586*^9, 3.8002632381764402`*^9}, {3.800263289349341*^9, 
   3.8002632996469026`*^9}, {3.8002633334955616`*^9, 3.8002634150070686`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "posr", " ", "is", " ", "the", " ", "desired", " ", "position", " ", "of", 
    " ", "the", " ", "EE"}], ",", " ", 
   RowBox[{
   "posEEr", " ", "is", " ", "the", " ", "position", " ", "of", " ", "EE", 
    " ", "coming", " ", "from", " ", "direct", " ", "kinematic", " ", 
    "solution", " ", "using", " ", "joint", " ", "angles"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7996787615495386`*^9, 3.7996788256322327`*^9}, {
  3.7999255452270713`*^9, 3.7999255596266346`*^9}, {3.79993169605285*^9, 
  3.79993169883074*^9}, {3.799932269768146*^9, 3.7999323633002615`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ePr", "[", 
    RowBox[{"time_", ",", 
     RowBox[{"{", 
      RowBox[{
      "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
       ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
      "}"}]}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"posr", "[", "time", "]"}], "-", 
     RowBox[{"posEEr", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7",
         ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}]}], ")"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.388311363518482*^9, 3.388311369027895*^9}, {
   3.3883117682455077`*^9, 3.3883118370321207`*^9}, {3.3883119051312776`*^9, 
   3.388311912586855*^9}, {3.388312997558428*^9, 3.388313003981845*^9}, {
   3.3883142201999006`*^9, 3.388314221055314*^9}, {3.6698048930469093`*^9, 
   3.669804912695345*^9}, {3.669901156960788*^9, 3.6699011857448387`*^9}, {
   3.7999252602993326`*^9, 3.7999252692377605`*^9}, {3.7999253082413626`*^9, 
   3.799925316950251*^9}, 3.799925362104393*^9, {3.7999254915457883`*^9, 
   3.7999255483755445`*^9}, {3.799931685914553*^9, 3.7999316921358633`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Orientation", " ", "error", " ", "is", " ", "computed", " ", "using", " ", 
   "quaternions", " ", "by", " ", "imposing", " ", "that", " ", "the", " ", 
   "product", "  ", "between", " ", "the", " ", "quaternion", " ", 
   "describing", " ", "the", " ", "desired", " ", "orientation", " ", "and", 
   " ", "the", " ", "quaternion", " ", "that", " ", "describe", " ", "the", 
   " ", "inverse", " ", "of", " ", "the", " ", "actual", " ", "orientation", 
   " ", "of", " ", "the", " ", "EE", " ", 
   RowBox[{"(", 
    RowBox[{"depending", " ", "on", " ", "joint", " ", "angles"}], ")"}], " ",
    "is", " ", "equal", " ", "to", " ", "the", " ", "Identity", " ", 
   "matrix"}], " ", "*)"}]], "Input",
 CellChangeTimes->{
  3.7585175957338166`*^9, {3.758517630746891*^9, 3.7585176307473927`*^9}, {
   3.8002634701912365`*^9, 3.8002636562948656`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "REEr", " ", "is", " ", "the", " ", "desired", " ", "orientation", " ", 
    "of", " ", "the", " ", "EE"}], ",", " ", 
   RowBox[{
   "orEEr", " ", "is", " ", "the", " ", "orientation", " ", "of", " ", "EE", 
    " ", "coming", " ", "from", " ", "direct", " ", "kinematic", " ", 
    "solution", " ", "using", " ", "joint", " ", "angles"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7996787615495386`*^9, 3.7996788256322327`*^9}, {
  3.7999255452270713`*^9, 3.7999255596266346`*^9}, {3.79993169605285*^9, 
  3.79993169883074*^9}, {3.799932269768146*^9, 3.7999323633002615`*^9}, {
  3.799932479021308*^9, 3.799932496470073*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eOr", "[", 
    RowBox[{"time_", ",", 
     RowBox[{"{", 
      RowBox[{
      "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
       ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
      "}"}]}], "]"}], ":=", 
   RowBox[{"QuatVectPart", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"REEr", "[", "time", "]"}], ".", 
      RowBox[{"orEErInv", "[", 
       RowBox[{"{", 
        RowBox[{
        "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", 
         "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}]}], ")"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388485969619128*^9, 3.388485990650378*^9}, {
   3.388486608587878*^9, 3.3884866126035037`*^9}, 3.6698048668730593`*^9, {
   3.7999259073452373`*^9, 3.799925959893572*^9}, {3.799926044080681*^9, 
   3.7999260445957108`*^9}, {3.7999262314346294`*^9, 
   3.7999262351857553`*^9}, {3.7999262726727357`*^9, 
   3.7999262844495373`*^9}, {3.7999317039080462`*^9, 3.7999317101227074`*^9}, 
   3.799979879372825*^9, 3.7999801680924687`*^9, {3.80020827982111*^9, 
   3.8002082801484194`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Gain matrices of the trajectory tracking law and qdot", "Subsection",
 CellChangeTimes->{{3.388313341285452*^9, 3.3883133579923897`*^9}, {
  3.669901892953491*^9, 3.6699019016427064`*^9}, {3.6699019430853024`*^9, 
  3.6699019561893253`*^9}, {3.799926326331081*^9, 3.799926356859374*^9}, {
  3.8000722564759555`*^9, 3.8000722797402296`*^9}, {3.8000724619726686`*^9, 
  3.8000724623486567`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "Proportional", " ", "Gain", " ", "constant", " ", "defined", " ", 
    "inside", " ", "Loading", " ", "Data", " ", "and", " ", "Parameters"}], 
   "-", 
   RowBox[{"Parameters", " ", "for", " ", "both", " ", "arm"}], "-", 
   RowBox[{"Gains", " ", "for", " ", "CLIK"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799911523910018*^9, 3.7999115450945272`*^9}, {
  3.8002638941796017`*^9, 3.800263967435726*^9}, {3.800264123414793*^9, 
  3.8002641243789387`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"KP", "=", 
   RowBox[{"kp", " ", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388313360710966*^9, 3.3883134221728525`*^9}, {
   3.388320537269215*^9, 3.3883205374039717`*^9}, {3.388320941997217*^9, 
   3.388320942165175*^9}, {3.3883214153848867`*^9, 3.388321415480584*^9}, {
   3.388321752326212*^9, 3.3883217528544984`*^9}, {3.3883769440061464`*^9, 
   3.3883769441467714`*^9}, {3.38837928302395*^9, 3.38837928321145*^9}, {
   3.388387707896041*^9, 3.388387708255416*^9}, {3.3883898752242265`*^9, 
   3.388389875527918*^9}, {3.388483562464546*^9, 3.388483562542671*^9}, {
   3.388751692888836*^9, 3.388751693160302*^9}, {3.388752359018076*^9, 
   3.3887523594975367`*^9}, {3.388752519172864*^9, 3.3887525193720703`*^9}, {
   3.7999263621401215`*^9, 3.7999263622019815`*^9}, 3.7999264251173625`*^9, {
   3.7999803502366147`*^9, 3.79998035947952*^9}, {3.7999807077734175`*^9, 
   3.799980707901066*^9}, {3.8000746731127634`*^9, 3.80007467320894*^9}, {
   3.800080093995167*^9, 3.800080094042796*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"KO", "=", 
   RowBox[{"ko", " ", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388313416904635*^9, 3.388313440307434*^9}, {
   3.3883205432678547`*^9, 3.3883205436682196`*^9}, {3.388320947061346*^9, 
   3.3883209472127037`*^9}, {3.799926365052382*^9, 3.7999263651281266`*^9}, 
   3.799926427268155*^9, 3.7999803573250685`*^9, {3.800080098315299*^9, 
   3.800080098418892*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   OverscriptBox[
    UnderscriptBox["q", "_"], "."], "=", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["J", "W"], "R"], "(", GridBox[{
       {
        RowBox[{
         SubscriptBox[
          UnderscriptBox["v", "_"], "des"], "+", 
         RowBox[{
          SubscriptBox["K", "P"], 
          SubscriptBox[
           UnderscriptBox["e", "_"], "P"]}]}]},
       {
        RowBox[{
         SubscriptBox[
          UnderscriptBox["\[Omega]", "_"], "des"], "+", 
         RowBox[{
          SubscriptBox["K", "O"], 
          SubscriptBox[
           UnderscriptBox["e", "_"], "O"]}]}]}
      }], ")"}], "+", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"I", "-", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["J", "w"], "R"], 
         SubscriptBox["J", "w"]}]}], ")"}], " ", "\\", "gradq"}], " ", 
     RowBox[{"H", "(", "q", ")"}]}]}]}], TraditionalForm]], "Text",
 CellChangeTimes->{
  3.8019832115418406`*^9, {3.8020921779361935`*^9, 3.8020921825199423`*^9}, {
   3.8020922530504155`*^9, 3.802092259609458*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "funzione", " ", "scalare", " ", "ALE", " ", "scrivimi", " ", "in", " ", 
   "inglese", " ", "ti", " ", "voglio", " ", "bene"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8019825862556953`*^9, 3.801982602133591*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Hr", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", " ", "1"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", "nangoliH"}], ")"}]}], ")"}], " ", "*", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q1", "-", "q1c"}], ")"}], "/", 
         RowBox[{"(", "RANGEq1", ")"}]}], ")"}], "^", "2"}], " ", "+", " ", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q2", "-", " ", "q2c"}], ")"}], "/", 
         RowBox[{"(", "RANGEq2", ")"}]}], ")"}], "^", "2"}], " ", "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q3", "-", "q3c"}], ")"}], "/", 
         RowBox[{"(", "RANGEq3", ")"}]}], ")"}], "^", "2"}], "  ", "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q4", "-", "q4c"}], ")"}], "/", 
         RowBox[{"(", "RANGEq4", ")"}]}], ")"}], "^", "2"}], "  ", "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q5", "-", "q5c"}], ")"}], "/", 
         RowBox[{"(", "RANGEq5", ")"}]}], ")"}], "^", "2"}], "  ", "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q6", "-", "q6c"}], ")"}], "/", 
         RowBox[{"(", "RANGEq6", ")"}]}], ")"}], "^", "2"}], "  ", "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q7", "-", "q7c"}], ")"}], "/", 
         RowBox[{"(", "RANGEq7", ")"}]}], ")"}], "^", "2"}], "  ", "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q8", "-", "q8c"}], ")"}], "/", 
         RowBox[{"(", "RANGEq8", ")"}]}], ")"}], "^", "2"}], "  ", "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q9", "-", "q9c"}], ")"}], "/", 
         RowBox[{"(", "RANGEq9", ")"}]}], ")"}], "^", "2"}], "  ", "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q10", "-", "q10c"}], ")"}], "/", 
         RowBox[{"(", "RANGEq10", ")"}]}], ")"}], "^", "2"}]}], " ", 
     ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.801977743324507*^9, 3.8019778434975553`*^9}, 
   3.801978197169995*^9, {3.8019782805377674`*^9, 3.8019782861554794`*^9}, 
   3.801979154243162*^9, 3.8019796223070493`*^9, {3.8019820834056487`*^9, 
   3.801982096132546*^9}, {3.801982204261421*^9, 3.80198224396527*^9}, {
   3.801982329414282*^9, 3.8019823321744504`*^9}, 3.8019824898710103`*^9, {
   3.8019834324226637`*^9, 3.8019834993905373`*^9}, {3.8019885978900414`*^9, 
   3.801988603025817*^9}, {3.8020011212531424`*^9, 3.802001125028287*^9}, {
   3.802088560058618*^9, 3.8020885691162214`*^9}, {3.802088600897732*^9, 
   3.802088717835994*^9}, 3.8020923670482254`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "mettere", " ", "cose", " ", "in", " ", "piu`", " ", "dentro", " ", "H"}], 
   ",", " ", 
   RowBox[{
   "magari", " ", "con", " ", "dei", " ", "pesi", " ", "associati"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.802005786961296*^9, 3.8020057986033*^9}, {
  3.8020058297639046`*^9, 3.8020058420118685`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gradHr", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Hr", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7",
         ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7",
         ",", "q8", ",", "q9", ",", "q10"}], "}"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.801978104113341*^9, 3.8019782475935974`*^9}, {
   3.801979150994837*^9, 3.8019791706041603`*^9}, {3.8019792233395576`*^9, 
   3.801979225258745*^9}, 3.801979623084062*^9, {3.8019823584945273`*^9, 
   3.8019823594134645`*^9}, {3.8020923790943394`*^9, 3.8020923816168575`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"qpr", "[", 
    RowBox[{"time_", ",", 
     RowBox[{"{", 
      RowBox[{
      "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
       ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
      "}"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k0", "=", "5"}], ",", "J", ",", "pseudoJ", ",", 
       "nullJprojector", ",", "qpd"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"Jacr", "[", 
        RowBox[{"{", 
         RowBox[{
         "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", 
          "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pseudoJ", "=", 
       RowBox[{"Jwr", "[", 
        RowBox[{"{", 
         RowBox[{
         "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", 
          "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nullJprojector", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "10", "]"}], "-", 
         RowBox[{"pseudoJ", ".", "J"}]}], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"qpd", " ", "=", " ", 
       RowBox[{"k0", " ", 
        RowBox[{"gradHr", "[", 
         RowBox[{"{", 
          RowBox[{
          "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", 
           "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pseudoJ", ".", 
        RowBox[{"(", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"velr", "[", "time", "]"}], "+", 
            RowBox[{"KP", ".", 
             RowBox[{"ePr", "[", 
              RowBox[{"time", ",", 
               RowBox[{"{", 
                RowBox[{
                "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", 
                 ",", "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}]}], 
              "]"}]}]}], ",", 
           RowBox[{
            RowBox[{"angvelr", "[", "time", "]"}], "+", 
            RowBox[{"KO", ".", 
             RowBox[{"eOr", "[", 
              RowBox[{"time", ",", 
               RowBox[{"{", 
                RowBox[{
                "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", 
                 ",", "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}]}], 
              "]"}]}]}]}], "]"}], ")"}]}], " ", "+", " ", 
       RowBox[{"nullJprojector", ".", "qpd"}]}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388313603754004*^9, 3.388313687552352*^9}, {
   3.3883140204792852`*^9, 3.3883140504451404`*^9}, {3.3883140906105385`*^9, 
   3.38831418094753*^9}, {3.3883142420149107`*^9, 3.3883142518463125`*^9}, {
   3.3883145305394125`*^9, 3.3883145679891644`*^9}, {3.388321829194339*^9, 
   3.3883218441845903`*^9}, {3.388321911388297*^9, 3.388321917259015*^9}, {
   3.388489216765004*^9, 3.3884892562414684`*^9}, {3.3884893736008434`*^9, 
   3.3884893955383434`*^9}, {3.388749269863255*^9, 3.388749279518887*^9}, {
   3.3887497010221825`*^9, 3.3887497043647423`*^9}, 3.669804941313795*^9, {
   3.799926456054603*^9, 3.799926539095886*^9}, {3.799926924657916*^9, 
   3.7999269260121827`*^9}, {3.79992699489312*^9, 3.799927085589289*^9}, {
   3.7999289315546017`*^9, 3.7999289413518944`*^9}, {3.79992916865453*^9, 
   3.799929173141063*^9}, {3.7999295008476*^9, 3.7999295110428314`*^9}, {
   3.8019785839501343`*^9, 3.801978586643591*^9}, 3.8019786415051455`*^9, {
   3.8019786877194977`*^9, 3.8019786921149015`*^9}, {3.801978811968875*^9, 
   3.801978897034504*^9}, {3.801979046250758*^9, 3.8019791432103977`*^9}, {
   3.8019793496603746`*^9, 3.801979375163555*^9}, 3.801979439555063*^9, 
   3.801982361375595*^9, {3.802092386077688*^9, 3.8020924087134876`*^9}, {
   3.80214656441336*^9, 3.802146564943449*^9}, 3.8021476381481924`*^9, 
   3.8021476726006517`*^9, 3.802155337493935*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qpr", "[", 
  RowBox[{"2", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7999289447586966`*^9, 3.799928994064047*^9}, 
   3.799929162719632*^9, {3.799931867994717*^9, 3.7999318682747145`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "56.47445887333133`"}], ",", 
   RowBox[{"-", "26.04459192428126`"}], ",", 
   RowBox[{"-", "4.426210999039324`"}], ",", 
   RowBox[{"-", "97.18124167457643`"}], ",", 
   RowBox[{"-", "27.52923899256561`"}], ",", "6.83633220752403`", ",", 
   "6.511724759801699`", ",", "4.545765549972175`", ",", 
   "17.089373679342426`", ",", "22.670305249148623`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7999292136672015`*^9, 3.799929465453414*^9, 3.799929516948886*^9, 
   3.7999320302139435`*^9, {3.7999797055588*^9, 3.7999797105177927`*^9}, 
   3.7999801950745516`*^9, 3.7999803691768136`*^9, 3.8000746815237756`*^9, 
   3.800077038472701*^9, 3.80007924144792*^9, 3.8000801519428244`*^9, 
   3.8000816726932836`*^9, {3.8002054531390095`*^9, 3.8002054760621133`*^9}, 
   3.800205664310053*^9, 3.800207031345632*^9, 3.8002078895955067`*^9, 
   3.8002085615287914`*^9, 3.8002088489988213`*^9, 3.800209319767835*^9, 
   3.800255641916585*^9, 3.800265062082588*^9, 3.800438889244209*^9, 
   3.8004417064227767`*^9, 3.802092457150435*^9, 3.8020932980490828`*^9, 
   3.8020942275331106`*^9, 3.8020948400020103`*^9, 3.8020954466138363`*^9, 
   3.8020965497406144`*^9, 3.802099261668536*^9, 3.8021039876717024`*^9, 
   3.8021093079378824`*^9, 3.802146610160692*^9, 3.8021471517966843`*^9, 
   3.802147690902032*^9, 3.8021554337122664`*^9, 3.8021565616854687`*^9, 
   3.8021574026070375`*^9, 3.8021580703448353`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"velr", " ", "=", " ", 
   RowBox[{
    RowBox[{"linear", " ", "velocity", " ", "from", " ", "data", " ", 
     RowBox[{"(", 
      RowBox[{"real", " ", "values"}], ")"}], "\[IndentingNewLine]", 
     "angvelr"}], " ", "=", " ", 
    RowBox[{"linear", " ", "velocity", " ", "from", " ", "data", " ", 
     RowBox[{"(", 
      RowBox[{"real", " ", "values"}], ")"}]}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7999271376964397`*^9, 3.7999272018443213`*^9}, {
  3.7999318814318876`*^9, 3.7999318845203705`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integration of the kinematics", "Subsection",
 CellChangeTimes->{{3.388484805902046*^9, 3.388484817667671*^9}, {
  3.388485027370796*^9, 3.388485039636421*^9}, {3.669902114316833*^9, 
  3.669902131491274*^9}, {3.7999322214194775`*^9, 3.7999322276083364`*^9}}],

Cell["Time horizon", "Text",
 CellChangeTimes->{{3.388750751508658*^9, 3.3887507634991016`*^9}, {
  3.6699023375992365`*^9, 3.669902343654047*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"t0", "=", 
   RowBox[{"1", "/", "samplerate"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7999009647634892`*^9, 3.7999009696913867`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsubsection",
 CellChangeTimes->{{3.799931916982396*^9, 3.799931926487735*^9}, {
  3.800072366556286*^9, 3.800072367780327*^9}}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Differential", " ", "equation", " ", "resolution"}], " ", ",", 
    " ", 
    RowBox[{"with", " ", "given", " ", "initial", " ", "condition"}]}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.800264210334044*^9, 3.800264233260801*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"solr", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Equal", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"q", "[", "time", "]"}], ",", "time"}], "]"}], ",", 
          RowBox[{"qpr", "[", 
           RowBox[{"time", ",", 
            RowBox[{"q", "[", "time", "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"Equal", "[", 
         RowBox[{
          RowBox[{"q", "[", "t0", "]"}], ",", "q0r"}], "]"}]}], "}"}], "]"}], 
     ",", "q", ",", 
     RowBox[{"{", 
      RowBox[{"time", ",", 
       RowBox[{"t0", "+", " ", "0.01"}], ",", 
       RowBox[{"tend", "-", " ", "0.01"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388485150683296*^9, 3.388485195636421*^9}, {
   3.388485412839546*^9, 3.388485425667671*^9}, {3.388485527573921*^9, 
   3.388485542511421*^9}, {3.388485583761421*^9, 3.388485588667671*^9}, {
   3.388485837362441*^9, 3.388485877409316*^9}, {3.38848687364633*^9, 
   3.3884869285057044`*^9}, {3.3884880517125616`*^9, 
   3.3884880819469366`*^9}, {3.388488418701748*^9, 3.388488436529873*^9}, {
   3.3884895251964703`*^9, 3.3884895254152203`*^9}, {3.3887477709132957`*^9, 
   3.3887477830394726`*^9}, {3.388748104301137*^9, 3.388748214630013*^9}, {
   3.3887482714330177`*^9, 3.3887482768164625`*^9}, {3.388750054648963*^9, 
   3.3887501125700607`*^9}, {3.388750200514627*^9, 3.388750204745802*^9}, {
   3.3887502580939493`*^9, 3.388750259341916*^9}, 3.669805013954338*^9, {
   3.669901869145849*^9, 3.6699018709866524`*^9}, 3.6699021731277466`*^9, 
   3.6699024170873766`*^9, 3.669902500180066*^9, {3.799927506220837*^9, 
   3.7999275087434263`*^9}, {3.799927542008089*^9, 3.799927568546587*^9}, {
   3.7999276805383396`*^9, 3.799927751527281*^9}, {3.7999289009932137`*^9, 
   3.799928914224619*^9}, {3.799931947869667*^9, 3.79993195262736*^9}, 
   3.8000769835815935`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"qsolr", "[", "time_", "]"}], "=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"q", "[", "time", "]"}], "/.", 
     RowBox[{"solr", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388750404220339*^9, 3.388750420039639*^9}, {
   3.3887504706037855`*^9, 3.3887504712033567`*^9}, {3.3887506575644755`*^9, 
   3.3887506792105513`*^9}, {3.388750730879119*^9, 3.388750732388788*^9}, 
   3.6698050201319485`*^9, {3.7999279255397797`*^9, 3.7999279381543274`*^9}, 
   3.799930487058312*^9, {3.7999319582429347`*^9, 3.799931963380864*^9}, 
   3.8000794171061974`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"qsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"qsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "7", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "9", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "10", "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"time", ",", 
     RowBox[{"t0", "+", " ", "0.01"}], ",", 
     RowBox[{"tend", "-", " ", "0.01"}]}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "[", "s", "]"}], ",", " ", 
      RowBox[{"q", "[", "rad", "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q1\>\"", ",", " ", "\"\<q2\>\"", ",", " ", "\"\<q3\>\"", ",", " ", 
      "\"\<q4\>\"", ",", " ", "\"\<q5\>\"", ",", " ", "\"\<q6\>\"", ",", " ", 
      "\"\<q7\>\"", ",", " ", "\"\<q8\>\"", ",", " ", "\"\<q9\>\"", ",", " ", 
      "\"\<q10\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758443792821266*^9, 3.758443795038574*^9}, 
   3.7585175957573547`*^9, {3.758517630772461*^9, 3.7585176307729626`*^9}, {
   3.799930517891491*^9, 3.799930609091443*^9}, {3.7999306456064987`*^9, 
   3.7999306681464467`*^9}, {3.7999319666248035`*^9, 3.7999319970849423`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
sa0iX07OQ79l344c9BXj2PlrZ+cB1MKY59FBkdyJm83mYWtU40k2jPeS8VuW
ZRfnwf1LaYUAY/94KVdLX50HL/ZYD0X0cN6f2AlH7O+ntF/30LckO80cA+Zh
w9BiDgXzQfF/N47cC56Hg+VddQJo0bOLW+6HzYPhwDdfCXS5J3/bg6h5EM6t
X9ZE7xnWMH30fR5mX2lv9EY/o9SrPM6Yh+Mbm76GoFs2XxJ+kjMP+0RzF76i
PbUfNj39Mw9Hi02bitEDCckmz+vmQf+x8mUmzIdE0RElt6Z5KI06/IabkV87
aALubfNATlO7uAl9nKevzqMXP3ctHZVDR94SNvSemYeH6nlaFxn59UW0nM/C
PMz0yk9fQxt8lF//cnkeVO6ePueAJtXoVL9iWQC21jJnT7SZvKvemw0LsPJi
ySAJ/UOLR8Z/4wLsif9inoHmsgxbF7BlAYos6rV+o7MD0soDdyyAhmkntQa9
cW5I653CAux+viN8Bl2bYXjig9ECHHKu1FXE80QTdqomBizAiaN/2TLQ/J0e
X68FL8AWylWeX+i2J0N8EmELsPCFIliCtvud1B3xaQH0IlL+NaID1A4+90tZ
AIvWtKY5tFlf2IhO2gKQMi7cX0VLuJOM12YtwIOJNh42PM8yi//sfPZ7AYjW
8d0C6M6TesV3qxagR+Ohojz66/A3mf11C5DcofbjIPq2z4bg0cYFCH7Lo3QU
zVrRfNW6cwESm3olDNAVNw9Xb+tZANEMDsMz6CCeCJXO/gUgc2yRN0fvNrBc
e2YMn9eZk7yBnp4sur1hagH2OQkcv43OfSPVWjW7APLbknfdR+vVjcVpriwA
8/K8+jO0w+kHOoe4FuEu9ZlGEJpYaP0xz7MINsrDXaFojncg8p1/EYR6hk5/
YJzXKh/dbwktgnL1VFwUOrSFMr538yK8feLz9wva0tn69D+RRXjK/2I+Hi29
hfrz87ZF8P+1tz8ZPZ+zR/LSrkU4tCqn9R39y+zVa5Hdi3Db8jJ/OtpzdWKh
RXoRjtTPH8tEG0YYWgTtX4RzP1u6stBb/kujGiouAs+OmclsdN/fjXK8Kovg
m7XuQQ46ycU5pOzwIhzvu+XM8P1tHWTP/xZhOgBWGM+rFvx3/bjaIljtfU9m
mNPyUy3ziUV4yfHSl9FeHQvb4TytRVhfHBfD6M/7z1ejnPQWIeett+4P9BX1
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
t+TZJ99TfzlL88/S/eR/aQRcHg==
          "]]}, Annotation[#, "Charting`Private`Tag$1322897#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
kFWxgL0b/T8M+bvR
          "]]}, Annotation[#, "Charting`Private`Tag$1322897#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$1322897#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
XyzyE5MHm3tWq5VXkLCy9DoxEbDXkhj68yoS/jz86ty/t2zi3c6taVY1JKyW
3y3WAu788e+m5jcSzhG2ia4E853/elisnoSfWt3PygfrxZzm1jSQ8MvGD0+i
wE4qql9eN8L4ee0nA8H3KuaeBDSR8JXhr6lXwd85kTp72iA/Nh9KrMHWR6ru
5fSQMLoj6KQEvv03wu7BHxK2Rc8G1oATbturXewnYXdKTa0YeCB9pmn9EAmb
JuV9nk9nE26CyvKxLBJeaZc/1AyOSJie9GSTsK+d0tp6cIF2RZXZJAlbrV0f
UwmeO2PnsmSahJtS3+0sAAeWhxf9Rybjkje2uo/Bqcdt79lQyDhUSMfyIbiW
pWS3g0bGQRNm8SFgUdlPNA4/GfdQqD9ugTUKHjTVLyJjwnRHyVWwpbFNaroQ
GS+9lNF8GfzUm2tydikZS5KU08+Cy8TK1+5fRsYXmd/tToF7UsMmZcXI2Ilr
qG4DVmzZ8KRVgowfpBrrmIGzNU70H1pDxl5XmLw9YKfsd7WmsmRck2XksAss
o7Imz3ItGa+srJ3RAods6L5jv56MG4Nik1XAOol7nc9sgPEVrxObwDy5V6bO
SmQc6F9M3gA+LX1WzmMLGZ95ISUgB5aKqRK4rkrGi6zu164G14krMW+pkfGK
MYeylWD/8JCmO+pkvLeW3iIJ3ik8SgRpkjFrZInUcjAr2DgpVJuMDQy9/hMF
J/Nnhj7cQcYTpaIiImAxPnfrOETGtXPNqULgLzd/7kvYQ8aMknMFi8C3ZzQ2
Je0lY6ULvWP8C/H1ihZN20/GbfdrjjDAw+yp6QxdMi5ISO6igRNcj3fn6pOx
QPTUE+pC/EdLqooMydgqeZcfBbzk/OpM4iAZa1ypeswHLu+/FV1uTMZL/P62
k8HXTnfdqjpMxmY2g4cWrNKlc6bWlIxjPueMksB91i8P/TAn46oqldwFP2mh
aTRZkHG+xsZNCz5icWZV+zEyDrF1lp1/wyb4Gyqp3cch/ks+P50Dl5psHO6z
JmPeNV7qDPhKTfCPIVsy3l/AMpkCbzIYKRo/ScaD7b8fTYK7Px9K4Jwi4+Ut
Pd4T4Oi9GUHTDmQcbNmxbBx8qEzEdf4MGRtlKVgNg6m7LltSnch4n90PywFw
UWEDEnAm4/GsXLFesEJ21BLRS2TMlyXW3AJu2zLFkXAjY+z9Y/AnODzNql3a
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
b3PrwYqF+/ZobKZiUTXRRwv15zm8O1ZVlYobrhzO5ICXm6oZK2pTMWlLVKcC
1K+pjHS+uD4VMysmVy7U/7T2itOihlT8J2lx9iNwgulyEZGDVBxzSY4/Hszy
X3pe6DAV70qV/ZsLDhuhrqEco+ILz3d4dYC1GHzVpONULPNyYLQf3Ckz7/Xv
BBWrrIpbwwRvMZv6PmVHxeVh/ul8sD5ri0b8x89ScYviymA5sEfDoNqoExXf
kSsc3ABePdrfOeRMxdob7Zepgi/Idm/vv0TFWwpLchfWv9iO3/29blQsLtOh
vB9cYtb2qNudikNkKs8bgoUCG0fbvahY/5SksgU45/mP2NZrVCzk8SvzBPhE
cZ1e8w0qjn94cPIkOHX0S0LDbaiHxbJl58FH+CuNv/tQ8W4h132XwNOyn2a/
3YHnrz0PcAcn7PiQUuNPhf7tUpAX2MCcOPo1kIqj1YX1b4CV1NZXJt6l4r+Z
7Ta3FuYjcl/bJ4SKbYoLJ/4DD49OvrYOpeKksOcCd8A11TbS2mEw3n8+CX7g
9NewssIhHiF6Zf7g0EDl+bGHUC8GX04HgF0cIy99jaDiiH8VDxZssu9fV2IU
FYstIusvWEXO0dQnhoq5BRtDFp4XIdWWW8dSseqWnhML47Pa1TW046j40p9P
Jb7g78VxSWLPqPj+ozNvFuaXHUNbMR5PxfN0XZWF+T/yvHD3awIVv+N0HFj4
PnfznzOJL6n4Q0kia+H7zdV2XfBJpOJRKz71Kwv7s8irDutkKrZ+ZizsCl4+
JmSi/Rrm2//wljOYW+3+XiyNioWvjgefATe9bts6/oaKjbYkKtuDCwL3vfz6
lorvzvA5LeQrxjFNPCmTintorfgo2EruBs86l4r98oK/6i2cD6Tec9r5VLzd
dcB3D1i6w7BVrJCK7wW4dmmD22NWln4toWLDG0qPFurLTqTYV7sc8mnyeSkN
vGdMjiP2mYpnxk03zkC9ytXcdRyvoOJsU3XeOLgn0Eo/6SsVr7fcnN8KdiRN
LxH/QcXBbded34LPj2k9Hu+i4py2nkgLsFFNvGB1DxUri/h+MQJvSuX3TvpD
xXVa84I64FHHJlubv1T8StOwZBO4dh+u1x6i4lk9+c1y4LdyyTriI5Dv20Jv
JcCXOjzXVY9TsaPq1xUU8OGS35FJLCq2qky2nYL1vfWxLr8vG+Itmi42Dp4w
lxjS5kH9Sm6o7AA3qN06IT5NxbdmM8sbwTki/TXjM1Ss9S160zewR01eRtI8
FSt4Nmx/v7AfhWVrpJJpuECMZVUEtjHLKEmn0HDI7Bw7G/xd4o1OFo2Gk5Ia
GengA60plbkMGq7lOxueDC56mnioUAA89PjhC7Cy/YuGEkEa/me1X/DZwn65
Lt6qbDENu/8Q4T5e2J/+Pun8KEzDfyfemkeB76bFOFaI0LB5+kelR+B/LpHD
X0RpeE+r0NsHYDe1h2614jSsXTYwfB/cN3mfVy9Bw7oj412hYKuikJs/V9Aw
8+mTuwuu9Q6iNq+k4fSW3z0L1tnjf7dtFQ0/7xocXHg+n+q7tHMNDb9ITXuy
MP6myluRPbI0XBlkMfkQHB98Q7p/LQ1fqz7MiQSLGV9NGFxHwz89GyIX5h+4
zENxdD0N/5EzaHoKnv3pls7cQMPieeb5C99/KcZlG0eJhlewXVRTwL0nnIt4
m2mYWLb9wFuwpcw5PLuFhsNeOY/lgqt7HD7Pq9Kwf9eSze/AOMneiLKNhjWP
1PwrX8ifk+13ugYNr+9/dqZmYf9XPmG5SIuGkyvOn1nI7xOmZcfi7TQ8Z3Br
+jd4aa75aZGd8HyRy6pBMG+H8SVJTMPDh/6jkaCenOcNJ1fq0PBU65JywYX9
+4PejTX7aPjO6RSaJLhSXydQQY+Gw/Fb+lZwjIV6/DYTGk68YpB7Hrxk5VYF
rSM0/Iinvuc62KdDOW2HGQ2T/WR2BIOdHBQLdCxpOFSKXycNvP3yyjoTOxre
obhcceF8SNeQPGpmT8Mod+f4wvkgNy3WZnEafi8TMyYGXvTfkgGbszR8l6US
trCeW0LJpAuXID7rBHQW9rPrr/u3BN2m4VNFq86shX5ScavxNScfqM80zg91
cGNhXrnhHRrOufFKSw+sUuV3bEkg5Ge+f9gZ3Nu/1vfhfRre8HVEJA9stM6u
Me4pDQ/+d2OVLvS3q+KbbmSVQHw1JeQMoP/9sh5XPCylYQXZ/DlLsNfbJJEr
ZTS8dH969xnw91KPRM1yGG9PWZEf2L9drK7kKw0LK4QbvwePSh1eW9ECzzOP
NalD/01EVFW18miYpVpCkYR+XVJnPi57moZ/TaqcWwd2G93mFjxLw7vVRDK2
ghV046V2kOj4QZjdbyNwCM/j/GMGHV9UuDDnC+57mYbcBOhY4K9rfDgYHe4W
NRCk4yFXudDnYFbKwZKpJXQsI+yzrQxseVx+8bHldLxvaPFqEtwfshhWXSqS
dPyH3BS4FCyYcz+XX4qOS3WNJWXBpUIz1gWr6FhRuSZSByxfWp8usY6OfXrS
bwSAbzoxfMcU6NiwzGg2Bvxr+S6LCkU6pm5/vfoN+K5L8rzHJjoWu/BY+Sd4
XOaWSaMaHTsZ0gqU4P5jUJMjn65Oxyd2G4fogF9cHeT5adKxgV7Jt2Pgo9/N
n6vvoOMVSl/CgsAlvptYj3To+GN79+UR8HIV+8/O++hYKOwXYtyH87It6vG+
A3S8u1T/nSxYTp2yl61PxzO6tXeOgQP7mh+aHqbj1uLvej/A3eHCZ5VM6Xjn
vYGkCfAOtH8nxZyOdbnOJWJhkL+ojN4sSzp2O7dn0BJsph+gvsyOjkturosf
AMukbftVd5GOzR8MzMuHw31p9zxRd4mOo3QqkkzB09+qkuvc6LjYNVXBF9ww
YXOtzoOORZd53ewFB+wIWlV3k477LHID38J9cfRL+6lvoXR8wcr6nB3cN1tP
JBt9C6Nj3vDegmhw5aib+rdwOs4pmnCpBycs42d8i6Tj94ce8PZGQrystr6u
fUrHan7W8Zvgfvvur/94TTodT5Q4Z/HD/ff19cPNNRl0fGh52tUD4MjF0h9q
suj4SHEI3Q98STXzYU0eHXtfc0RUuE/LX23VqCmlY2nF6HmBWKg/fhXv6lo6
tqs0X64E93er9c0CX0fpuPLbg8ZPz6Ff9V6SnzxOxzqRrksXJ7CJxB97T/uz
6Ljwtes2MzDrVnrpnkl4/0+lXd3goCbfywVzdLzWYuLw3AvoB4KU218JMbCd
4n92WxIhv8O+Gbc3MvDPx3yck6/ZxE6dQmubTQw8pBo49BxsHz26aKcyA39o
ufqgC5y+75gDV5WBHx8+xbZNZRP745SlLmozsOfQuynLNOhnDjX7Htdj4AnW
2Z6d6WziR4ayhYYjA3+9+NqwOhP6L9tN4YZnGfh5vHoxIwvqc8nGGjsnBq6Z
tSzRAX84v25v8EUG/m+9+KN8cIaC9JZODwZOk/10NS4b4vNEgHE3gIG7a9f6
mOWyCT1Dhs6zIAZOYAfEBIEp01TvnGAG3qC341Ip+JoFaaLjPgOTPK3vrM9j
E+eWcTvUohl49ePfKjzwgcDevPZkBt6vxLwZVMAm+DS7mazXDJxS9KimEPzu
z+9N/G8Y+K9MSOtf8La9rQlbMxnYY6Pacf1CNrH2X31oQCEDr/NdP0EvYhMd
ad+qnhQzcHxZ3i4N8OPjNdSsdwy8ZZeJjAN4WWHltbb3DKxO9zhYBia5E46q
Xxj44M7xbxeKYf3JvXt+oJqBs3/sfBkF9qwvajtey8CTQjLMMvCoct4R/+8M
vLPOSGpZCdRbe/a92AYGTg+YX7Qd7BiSWZnRyMC7DY/FnATL7XhL+dzEwI92
StcGgtv/pu1ubWHg2MklWW/B0dGvr463wXw+Uo0awWa6yTm03wysVdJRLvUO
zrvJV2NSXQx81C/wnGApnKcvX2xU6WFgQ/Pe8CwC1rvpc4f9f+D7783ZMD6w
ib18z+Kt+uH90c+Okz9Bv5HxpNXlLwOfcdr2ILoS+hnbx8v9hmD+uSfPfKpm
E/8D0Et1aA==
          "]]}, Annotation[#, "Charting`Private`Tag$1322897#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwd2Xc81d8bAPC7r4ZC2rKjUiIjSj5PpUWlgW9lJLIllZAkkdlCUfYoEiqr
zHxSZrIlMlK5ca89Miu/p98/vN6vzx3nPOc553nO60qYnT9mQaNQKFn4599/
P+Vv730ORxJqOpp3HF51kynmHy6VakQRvD3eEetfd5MfQ7KkmHLRRP2h6ekf
aIERH++b7FjihoJ2jUEuPjcIjd9pGk+Mt45IqRR0k3pLtp2BlYnEZS0bRuXb
bvLsbe+uHbfSiBi+I9nmVd3kLuLW+aicV8TSu2I/aju7SU3LxPmig++I5Hcm
9zOZHLJSIMz/ussHQlwt4XfBWg4Z/Pq22M2BOuJCRSxLajeH7ObGfbr1p46Y
E6r48RSttubVrfv89UTKkx65TVocssu7YzJhUz1xjO/erNoeDqlwVL6u+Fw9
0eE+c05/H4es6av1nBuoJywzJLtjdTjkfIkl390GG4hYudLNlnoc0kRP9pHX
3wbi1iK38TF0pt/2w4GLGomgPx2dN/Q55MlB8/xw+UZCo/i4VIwBh0wuyA7J
dWgk0tKolz6f4JD7DAx2Tww2Ekcs2hjaxhzy5q3wJxeGmoiJp/UXD1pyyLgu
uofV3yYiP85SthldoOLwnzH/J+IycU7c1IpDjn7dNf+A3CdihRal1smaQ55R
7j8vbvWJEHuxZFu8LYfU7NDcXtv5iWixHhwSOc8hp+W76zfWNBPuO5wy77ly
SOGbh1MlO5qJEVLx5qYrOP/W3Jsr+puJGKV9yz+irb3vbGXM/0xYpwzYL7jK
IZs/q0a37flMKLekvAm+xiGzPQOsA998JiBmh1KZF4d0aJCf60lrIYz87paq
3OWQa/XgmuibFqJFiOicd49Dtn86OqtX3UL4bvh+pwt9oNVpsnighWiyeSof
GswhpbvyhyLlW4kD9t2mK0I55JeBvV266a2EW+mm9ZeiOOTeeaeLc7K+ECJD
Iydi0zjkn0BHYvD9F+KY9qrUl89xPAu93kg3fSGG4xnz373gkBICiXnB41+I
zowldv3pHPL3sr4MO5U2InXF+Sy9V7he0i4JYjltxAL7wAenizikKNzz9stv
J7bvehD7qB7zpUfwyMUP7QS/UXpmfQOHPH73gYjxl3ZCYpmI3MImDunfHv5q
y0w7YSn/rcyvmUOOuD7p6VDvINw89cLC2jhkSUaejnJeB9Ep6Nv6m8MhbaW6
l3zL6SScaRkdlbMc0tBb5Fj0qS5is+Ls2YVyP8mEWJVDBSrfifNtyaLevj/J
g7rKHQNq3UTUJNs1uucnObp18nP3yp9E4Hswq9XuIRdUd8ZZjPQQks0aCt9e
9pD+v1L/zgxziS9yb32lRHrJRdtrLBynuIT0lgMeeWt6yQeewx85c1yCT9vR
T1esl4xboBJZt4hH9Ihr91yV7CVzJIq2Jm3kEdGZpyU+reslfx6qczxqzSPk
fvzeYKzSS2oljX9/+pVH2DP1+asP9ZKU/3aU69X0ERNBJ3M63XrJpi1ZnrbN
fUT3Dkr8Yfde8umi9ds8O/uIqQIzwTfXesnDZcLPUwf7iKw7Mc2hnr1klEp/
CG1xPyH9sjdBzbeX3CocaZKu2098OMi+cji4l3Son/q1oL6fMP+l0MFL6iXb
dLKl3zcOEL1J5pJOdb3khgHdIwW1Q8S6NVd2/xLhkvftn+2S/DxE1PkkZFBF
ueTvPppKQOcQ0WrWe4tfjEvW8l6t/G9giEg5JxYpJcElt43fuXCFOUz8mr5z
4sBaLtk5MrZtqdQwkb5geIXTJi65boCsPmgyTAze9Sg128El29P691LMhgmx
c84RRppcMth+5dssi2HiW3x3pz7BJWf6LmauOjdMBN0Yr9u7k0tW89Y+7L06
TOwL2kKV2sMlL/beMr0ZPkx8ztnzp/Aglyz48d9YQdMw4fPi8RMhQy4Z5vAi
lGwZJuLNCscoRvj6aYba+/ZhQnbP2icD6HWLM90/dA8TP4i9J9+Z4Ou3LWS1
jg8TFSr2BqfMuKRj8NsVE8IjRNZOkn7IhkvKEOs1FfRHiOT5wi1GzlyS9uF6
l9LJEcJwgLlRxoVLdug1e201HiGuxWacHEQ/sPUu17QYIR5mCdpfvcIlqWEd
Rw5dxvd7d0QHuOP8+4PNbUNHCEdeduU1Ly4ZEjHj/+TTCBE4uT/8zR0u+fW5
TLZ56wjxQr99wem7XHJj8bGvkh0jGL+NvDl0eU+KSnz3CNGicGALEYTro2z4
PXpshLjJcfqaEcIlrWoLtj8UHCV61A8y7R9ySQ3GtcGAQ6PEsg8OTLM4Ltlz
bu74+dJR4lZ3bN67dC5pdFA/2aNylEha9Uv7QAaXrNuQ+vtO9Shh5GVSVIvO
7TFITPs0Suh8PHikPZNL+p95McHljBL8Ga4a49kYT33j8LOsMSLE7sSgdB6X
tNUo6Dy5b4xQqRHxzCzGfFglqGSjM0aISwut0XjHJY9NW/q56o4R5smpGaXo
ba+FFB7+N0a8puyrb3nPJRco2N5oshoj7ve7aM6Vcsk0qZXSuv5jRH/30nXa
H7jk4HwXG63KMaJz+/qsxAZc/y029VA9RuTszfgl1YjjO2WovqN+jFjgFKga
j5ZMIeapto4RFiaMjkdNXNLgAN8zWe4YESFyfOhaM5cs8gvvnT9vnJC9fmxk
7RcueZdRaFW/f5wQpkiID3VxSfm/FEuTinFiIrzSa8cgl+znH3h46vUvYr43
LeE1m0ca9egIn8mdIKKLVYzXiPNI5T6hHOnCCcJNMDPYEr1wqPVkLzlBuEBD
wEt0wYRV7PnyCSIzp+s1SPDIVaybGzyaJ4ifrUplpyV5ZIt0IUSOTxBpojab
g6R55HGzjec+KUwS/ymKVSqu55HaHQvLDjybJKLqH54YUOKRbhsc3WfSJonW
r4s89inzyFSXxi2p6ZOEdX/1h3j0QqGI2IW5k0R0x7MaAxUeWbtX9kpt2SSx
+rK7R4kqj9RL37lRv3uSeFHi3pCnziNNvJ1DTMWmiDNB6rHdBI+8sL7LxCV0
ijitebti+UH8fkJm18vQacLdrd29yZpHCnf5p9iFTxOvhDVuHLXhkR2efULr
oqcJ3juzpBq047v0H3FPpomCvD+nKmx5ZOie7T4hWdNE5OsI6zx7Htmlc6Ti
cv00MfH8qH6II490PuF2WIN/hijjrLxHceWRMN3+ekpghlg+/9WKS+h5EYTY
K+EZwoGXJ89BR7UxhjeJzBBRHwwWVlzhkcUm94LF5GaIvJr/5vldxflbPGmi
HZghtldEbvjiwSPjL9Scqrw5Q5wd1Fcav8kjQzpO9X/ynyFOcw/LnfDhkV4H
eq59vz1DpBRaBRSgzSQo8bMPZojIdexgT18eKVmv2LMpcYbo7m52Y/jzyMcK
oZdCSvH7nBfvng7kkYlDhrcNWbNESwS/Tl4Qjwwz7F1jPX+WGGgOTBAK5pG+
5U4vnRbNEjsU7SLs0JaxdxruLJsl6k0TboiE8EgZXXLFW5lZ4t7I56du93nk
0xeSidL7ZgkieLJCPIxHPlr1UlVRZ5bYbphvcQHt77u9YofuLNFT+GdRMdra
RK/P4L9ZYtv2rfHGD3nkukW+igFWs8Sa0Tbn24945LNz3DcDfrNEW8HzlSUR
PHJUUsi859YscUM8QZ4VySM1Wrbxfbs3S3i/VfPah67ZdftY08NZosbGdKIc
Pbp8c0/+01kitCHZ6W0Uj9z2zknAv3yWWOBGVw2J4ZHeLtGvblTNEg8Wj7tW
oj9uLDt1tXaWeFlAF6bEYn49XJ7o8HmW+NV10MgO7WWfr67fM0todHlc2RbH
Iz8so5hLsn8TFUSKzZt4HtlHLuP7z/c3cdWOJZL6FPNbPskv4dIf4oR8aJFX
No8UsUo+OuX0l7h5/8W7t+8x36YSFfNc/xLBN2LN5tAlAY8F3dzx+WWBmR0l
PNIuLaZ+1vsvURvhxV+Azh95cHQu5C/BNowuyC7lkSfcbxxlZfwlFo8+LE0s
55EPgk8dFR74S/yhR1nZV/HIBYULjypYzBHv8x4tO9/AI3PDkrQ6reeI0Lv7
PRLQZy+A2m37OWJhbUHaJ3SRjJNY76U5oo2/22R7I44vuG0g1muOcDh3yZDR
xCObLVMCF8fNEb+sX7fe+cQj4wT3lwx+mSOEzrhd9W7hkQf7v+VEdeLrtZ2s
MtHTZVdTtb/PEfIrjA98Qx9zfxmSxJ0jdLQfcjVbeSSzZ9kZk6k5QjhH0H0a
rdI5+vfnfAostuBbc66NR0ZkFUcarKOA+v13lcc6eeRNX6kU/Q0U0Lnl0uSN
djjpk6u3kQLlZbR72eidc/s/HVOgwOmrBVJLv/LIXu26RbpqFIh7GrClEa3y
vfPGvv0U8BUoZGp945GiryBorzYF5oYKa86j+fwTYvYcpICwBrU2At2+ybJg
9xEKvJHxiRpEe10ZGCdOUMB7+obu3e880v6gLp04RQG+y7T32WgDsQxBTSMK
yOnwPf+CXl/qJK9hSoFXAfJ/pH/wyDqB31Zq1hQ4duRkahY6/4ex81ZbCkjb
hTt8Qj95Td5UtafA0a5zYhNoFyPveGVHCqws2X1JuZtHmm7mvFS6SIHJOvaG
Y2ht2r6iLU4UGEx68csBLZo8v03BlQJ7FmkMJKL5rtpzN7tRIM2xb/1b9Oih
mkl5dwqs0LWLakWXjgULb/KkQPRI0Y75HB75omxMcqMXxqe394oE+lG4vqLc
TRyPkh5LDW1PrDy83p8CrG1VsuZoA6GrRusCKWA9ZeDhggZOu63sbQo8ZPse
DURvyNW8InOXArzXotmR6CW34vzWBlHgwsJLOano38a0MOkQCoT77LHPR/9U
OPtE6gEFdCUdf5Sj6+hlmZJhFNBIXSjXhM5vli2WeEQBtSGHo1/RT54F1IpH
UODLPk0LLvqOe1+HWBQFjrdbXBxFO+se6heNoUCOo43PDNpU8uXMmjgKOBm1
plB/Yvx+Ccxbk0ABQ7K3n41Wrri4XOQJBVK/Bhnwo0Ujm9auTqKARHTwsCCa
7aCqvCqZAq3PVCqWojcw6ezJZxQI+zGSvQJ9MKq2tTGVAsDXULcKfV4pKi39
OQWUfrHPrkaHfLC+fuclBV7ebbD/9zz7jMox2wwKnNuoPLcc/XmKunZfFgWa
RPXlhdEz92ompV5RILb0zMLFaBHZyA+UHArsL93xjA9NFFlFd+Ti/DXnlv6b
j5m+smN+PgUiWjLOTOF8b/ZTdj8spMC7JZERg+in3tVLnYooIOYWWfsD/WFV
RO+RtxQQ5Kjzt6D7MywLNr2jQOB1R9Mq9JauOdOeUgq4dW92e4nWd/moVFKO
69mxxyAO7boonBVfSYFMBa5TEDoi0aL1WhWun/pQ53X0G40taaeqcT/4f/Rz
QHc1/vXYWoufL1o03whNs6s6KlxPAbPIWuX96P3hZyermyhgsNojRwRtq6D4
IaWZAm/1bVSY/9a3/E+UXwsFqneIR/Zj/jb8Ctu1s50CwSlBhrlo42OVd7J/
UOA9ZYfYHrQnN9Q0mEMBjqzaKRl0gqeZkkMPBXZSC76z0L0vZltk+yjgcEeO
Vob77eICeenIUQqo+FQaaqBDE2YmXMZxPd6EhC9H56qXV+pN4H6/vuLnCO7v
P1am5xfN4OdJr+h+jPYvCcm/QaWCd7FG3188L1INT98xoVMhwmPr0iZ0zaic
6XYmFb5GP8lMRi+RKGX+4qOCuPpehyPomGuTR6wFqLC9ccf3iC4emaVq1HNY
jAqyK+Kr/+L5Zpv1pua4BBUuSAxlvEWLK4i9PiFFBZfWJN0b6Nvrv980k6VC
5fXLE3878HwXsZZ03kwFOV/GzYF27H9oTsbRBBUmF3kHh37B9ff4pJWwkwo+
5u2UPWjPWdWNT3dTISA+8fQYnsf949Mz6fuoML65XfwQuqTn+qMSXSrUqA2u
mPjMIy9X32rsO02FdT0tB2SxHmzUHsgfPkMFdQ/+jVVYL76XHU74ZU4FmH6Y
6oA+/FbwwpwVFT4+7XqcjfVFJuvhoiWOVOgoL1PbgfWn+dHjA9s8qbDHf1ZJ
q5ZHbj1bQPrHUUHn4uMCjUp8faKfnV0CFe5/2rz6RwWPXPbz+PLDT6hQeqE9
OgA9btXvsCSZCqEZYqs/Yz1Mt1sjGvOSCpTTToedyrC/uHTdPauICrSN83Ly
sN6u8Nqt3tlOhTNNoSkWRbi/3y/mvO2kghl7TEMQPUFvD3rcRYXa27qab97w
yCYfp17rbip0bylJWIYOCkh8ONZHhWtyoltqCrDfC2ZP8M1SIXBKw1QnD/dv
bFWm0koaZKm9enIX638Y07J34WoazAitMNyPVrSjiP4UocHqb5PnaGhrVZWA
R+I0sNpiHuqShfH4GHP6jywN/jg7h9hmYn5uUQ9tXk+DFR0uJzag+R81fngp
R4PTPSMH+jJ4pJY5n6rZZhoor/EMdERnTl9YWK5KA+MV9zP80jH+pxfuilOj
wa2l88d00dySJJcr22iQGlwmtRItHtT2XU6TBpYV/GovXvLIuzJ78oL20KDJ
+nb+9xd43t3+OmizjwaHssSdMtGlI1ekdx+ggbaYppM3+nfhi3u/DtKAuk9H
fD3a9vgKy1N6OL9t7opez3kkKy8zUskAx9f2WcIQHS96qH7hCRpUJ2gLq6Bb
uDc0SEMa8EJEOX1pPHIv9ufS5jQQT9/rexb9neOz/89ZGtzRbm/UQl/TEfdo
tqTBGTfdkbXo7GX6XH9bGiyuq9rLS8X+93kROXCBBvdNNMANXSR08lfZJRrm
X0zYafRJ17ENcZdpkD911GYPOmj3urBjV2jQ3ktaC6H/tgbb53jieK7dUs5I
4ZFfWBYrb9yjwYMT+U6/n+F6H3tg7hVMg8GJKZtutFr0++fe93E9bE/qfUSH
KUnu8n1IAyHJod5I9FHTr7a3YmnQfItqpY6uyDtZGPoSXTr9xTaZR04yAlgP
M2gQ91F+3VG0zJHcI4+yaJCx1D5+K/rmz2WciBwaGMQdGGKgiSVN/HEkDTLj
LtPjsN98bX/4dEotDaL/83nckMQjOTnXnqXW00AtruB1HlqY/nwsrRHj415+
Nh59MXyB/8vPNBgWiTG5iN5UVpGe/ZUGUe1liSvRRoJTM6++0eCG6WcTBjrQ
SHZPzg8a6G3aaDGUiOfnqE9rXg/GV89evQy9XPOVVAGXBjlVmVMZ6L0B3ecK
+2gQ7NjfG41+IrabRg7RILw/38wZ3Wh78eDbERp8K+1mnEXTXseHFY/R4OAz
a5HjaEVqfde7XzS4aysWvhttepAiVzJJA+lVojYq6HsPN18unaZBAH+h2zp0
0XcTsmyWBgr+NsUi6IFNd+dV/KFBUMWPzUJokStvjlfO0UDmUmQOH1qnpD/6
A5UOj6m6OhS022KR3io6HbTulXVNPcH7xymdLdVMOtws+mI3im5JdHOvYdOB
vHOyqx/NHnlWVjuPDtmUAuVetKpGq0D9AjoIVl863Y0+68dn2MBPB/1Tqwy+
oe83bE1sXEyHR0MGQl/RM9/qszIF6XCggvGkA202YvcueAkdmkf9Df75A4VV
77iUDlL6LUQneotA3Ffd5XSwm9uq24WOENs2KL+SDn7nBp1/oGmbm37zr6bD
8EHjxB60rabDggEROqT/d7vi33gbDvGt+ihKhx0+tvX/5rPNOGFdqjgdRgRe
vJpGJ9hrbA2UpINZQ7AVFeMx3715j400HTobTVrnoS/ectTbL0OHxaxnlCXo
LxHzzWXX0eETPa7hX7x3pTy5wNpAh9iD93fLogUrW+6WbKLDNY321h1o15aL
0Y830+HZBuGBA+iunoVpXop0OOl15ooBOp21sxJU6EBbLMR/AX1E6xn9jQYd
4ne2+T5H5x7fLRSlSYc/XJWuN2hx8w7xq0CHY0W8sBr08A1BTXUtOhgLJIwO
/8sP8orrKx06REW1C6lh/k7ULPF7cIgOH58VrtFGm3Q+D72kSwe9Q1RFI7T8
n2+ZisfpYCQzfMgTXbNNe+D5KTrwGV6crESranfP3jaig0S66ukOdMxJj/n2
JnTYeFlPYgTt4Jopu8GMDg2J1t4rcT/yv15llmRDh3CzvHR7tFNptqOPHR1a
y15U3UC3Nx2+fvYcHUSUv0yGodPGvKIkL9Bhp4qDRfHTf/t1TSr1Eh2CePYR
zWh3oZy8Lic6FL9wLetDH1Tsa45xpYPi6Lj2MjwPssGHc82NDg9sy3ZtQosc
ERs3cqdD48v2b3vQ/Q7HBVd70kFpjW7tVbSex4DYzA3MN+m9fx6hC+/4ybd6
Yz5pvwrKQd9KK9B56EeHPXXSL6bQvvE8h5gAOvz97LlAFM8vr7CVIYm36OD4
y7hKC+3q6dKSdY8OQxfiVMLQTpeTZvOD6fBOLrH4Lfq87SfRd/fp0PNf7eV+
tKWekkXdQzqE2X2U2Yfn65kDZv6fwzH+EQ4CzmgjzeDUzkg6dMm+T0xCH183
NNIfS4fTSxRH+PF8ht8pHvOS6bB8WSrfGHr7SGu8QAodvOYzYhSwHqj+5Ctd
nkYHyUGh2vPoTXWWC2TS6dByRKVqFL3qieSjXbm4v8rLKuZhvRrXici4WoH5
fDJmtRXWwyGobPL6QAdty1tyr9A8lanJgI+4Xx/sfEbH+vpNzEDzUR0d5Pcv
bY1H14wJVmW30CE/udP3O9bnyl4YLPhCh1XuyzyUsJ6XdJwXfN9Ohzk7KnkT
XVBe/V99Fx3otuMsGaz/yZEB3QO9uL8riqwMXvHIx0G57F88/P64jx9j0DE+
PRt+92O8vxVXcNCh5/dcmD9Ch/UJBk/Pv8b12E39KzNNB9UzB5ou5WB9VFOQ
kJ+lwzzKwqoMtOum01oqf+jgPKd3fxB9fvmbwN1UBuyzrPQ4m4vx7nNdbjqP
AfzRHA117F8YTOcS4wUMsFo+dd8anSZ66YIhPwMGrzkKhqFnj56rMhBkwE0Z
wcd96AQ7W1e9JQzQys8vX5KP9ysfq7XHljJAYluJ0jZ0RO6Z64dWMsDRW4ni
hd7VYLJRZzUDjFU8zz9G8/oMW/evYUDR3P7d79HqYgZKWhIMmI6qUPyL7lI7
3rVTigGxE0nnVmK/5X/syB1iLQNkZQTTlNAtPto929YzgJrZcMQC7Rm774Ga
HAOCzkTnuqPX5WntVN3EgNzbHZvvo136NSMVFRnwpuX5kTdoUZbG/s1KDMi/
v+t3HbpMTP3XRhUGSPtZFvxALzuupLtOHb+v1NeVVYj1xl7h99rtDBCaeee6
DG3hu+mZ1A4GGO1aH7wWnZ0nSxfbyQCLtZ8W7UQbNUqni+xmgBKb5XwIzRiQ
MF61hwGvvbIETqKPi4vkLD3AgANGQHFEz6ivPLtEhwHy9+IuX0UnHF8mKHiI
AWZM7g9f9KivgN3CowxQppdHRqODBhhi9JMMoCy4IP0BXZM/4DtszQDXObbT
GuxXnZt4SoO2DBDbEXNSFi062NPVZ88A5+3JcorocxLft/U4MmCV0WJfLfRC
/+bBDlcGfF/jlWqDzo5vjGxzY8DWCY97F9FGBXX7W90Z0OH7ResqOnXwQ0KT
JwP8xTaL3EZr65MGVf4M+Gtesj0VLackW5EUyICNxE1q5r/PF7yn7nWbAaZt
V2Ny0dUfTUTUgxiQnPhYuxT9IqXsjnAIA1TDoo5Uoe/6y88N3WdA8Zzj6vo3
/+rD329JDxngLew33IZWkLQ87hXOAA0Pq7EutCClpsQ4Esc7XpHGQY92qKiq
RzMgKzxgJQ/dUBD9VDgW18fiseogOiucuXI4Dp87X6KOoh+4nAusSmDAwD5b
l19oJ/1Ps0lPGLB6FTNsCq2vtOOcVxIDEg2WGs6iVQUTO42TGRA341/yB71s
aOER9RQGjEgoV8+hJz86FQunMYC3X/EnFe8XLSntW4afM2BpxqE/DHSuv9aT
qpcMiJz3VmAeOtwybenTDAbINA4JLEK7aQn7eWUx4JKc++AS9ClJ9ynjVwwI
M/wavQq9ndJto56D45/0EpJEi3TqtAnnMWC2OpLYgO4IX11UVciAIZfV4Rro
IhfvzU+LGMAyNnm5Fx2j3xfn9ZYB4d9i9Y6iTQULvNVLGNC//Mxaa/TOIclf
wmUM0E731HRCS1YHWg6XM4B9WPq9J/qH/6kDT6sYMO6hORKBLrF8l+9VzQDG
0rq4ZPQTrQ0bTWoZIFK9/VoO2pIys2hpIwN6l7QptaL3dp7xHG5iQIrAqok+
tGxh5UhVMwPaWoMH5tC9LuFNXl8YYOA8qS9H4vmqT91r0o77U3oicxc6Rckm
R70T493sImqIthtSixj+xoAmvwXUe+iD1XELPv5ggDorwjIFvTGV79pTDgP0
G4Lzy9CDli2nTbgMCDnKW0x7yyMdO13WfhxmQKj3jSIv9NHCr2FPRxnwuHXJ
7BP0loh9fN7jmM967osr0GP6y/vUpxhgfy3jtUAx7rfq1+lP5xiw7K5USSqa
F5Slmkplwsjs5t+f0SZ66YUv6Ey4cslGlPkO59/2rOIVmwmH1votN0Mv40Z1
vV/MBHcngWgZvK/mMLwFusSYoDW65837Eh45tV3XcQUwQdH8dYo03n+vpvRs
DvBkQqZeZ0VkDZ53W3TdbL2YkLirpLsK3Zz3ukTnJhOaLruv+41WqPQ5ucif
CfH6VYQx3re7e6S8799jAl3guLhkHcZrrWlzdAwT7p6vMM+p55HTaeXi1+OY
EBk2+5qLTlLebGeawASL4th3q/H+TtH6OyeZxASuiZ/IdXS2WdT65Ofo+rPu
u/G+vyauxT2zkAkV86cyypqwv5WF8vtFTChb8rDqF9r15VPBy2+ZcJ7VUSz1
CfdnkXPS1hImvLdcZemO9u0QriusYsIO9WZTiWYeqWThviqmmgkuhZ7q+9Fd
/T/OXq9lgofUqfUO6G2/M6d3NjJBQIFpmYMeXHVUqvwLE5RW5g4Tn3lkZELu
ueR2JtwxvC5qit6/QTw3oJMJ6gulfK6jE9SHDh78zoSeY+l6BWjdYoOHm7qZ
sEb47PPP6N/7i74t+smEpWA+N4o2OHHHuZ6L8bh+KUKmhUfSu8bfZvYx4fCX
qV5NdLqV0YIHA0z4TyB3uwF6votcnMEIE1pjzKduoHP+hvC2jjHBJm2/VRj6
rO+M8spfTOjO8up+hiZDKyvbpphAtXNcXINesWsuOmuGCVZXZJ060RcHlS/e
+s2El0qMmQG0zL64VdspLHA9Xeo0vxXr4dinQSEaC2SMb8QsR7fGLnjPo7OA
VGs6II2+PeVsF8FmQbYe/xYN9M8nacTFeSz4ZZLkvA9NHP2+RHsBC56lXtU5
hh59dqhwehELFp7nZlqiTxhK859cxoLzdxc3BKIz2ae+KazA91f3D4egF2Tf
e8W3igUCUUM5EeiihbPGuWtYMPfx275n6BV5CluCxFgwL1RPOB19wcKSZS3B
gmVN+fdfo6WL6l8sX8uC1yyb6+/RHrZs7yEZFlQyuq98QH9etuO/8nUsuCZS
VFePDjyfPOe8kQXj6X5h39DdqzsbD8uzQNVHkM1D76hYkiyjwIITydXNo+hh
8etHmpVYICt3NJT5BetXdbb0CxUW2CfI+ixGP77Cm/LZyoL/FpGfVqINGvTj
VbazQHt+XfhmdKH3xtEHu1gQ+lsz8zTa/2fr/eNHWaD8oSulDP09ZLG13HEW
FIWdP9iI3k7s0aDrs2C7eFf3V/Tgw/TuzBMsONfLpkyj9Q74qQiZsmDF7ARD
rg3r4a/CebwzLGCm8ntvRbMTRjuKzVng9miIqoU2PbwuM9yCBTHKiV5H0Pkz
xr4XrDDe43JNRmjhp/dPHbBhwc3RV0LW6HPHK+Ul7FjQoK2y9iK6bO4vbdqe
BfFpEQJX0eJpyp/rHPD91vmtXmh+zTmyzhHjFevDF4ieqa1MrrvIgtGd7X33
0D1nHgTXObEgr1ks4AG6aczErc6ZBX+vbuI8RBf7rDevc8V8k5VlRvybz/Jx
nTo3FtxKbhz454hnRcp17iy4Qil+/M9+2wPW1HmwYHHjc7lwtFP1cVadJ67P
wOrAsH/zPS06VOvFAsspifch6EMjvZ9rb7Jg97uqL3fQ27yz3tb6skBlxdpP
fmjZpR7Pav1ZoOV4JsPz//HYH1IbyIKClj07XNFU9SVXa2+zYAufmr4DevBD
h3ntXRZIVfX8NUO3GSUfrA1iwV7nMsIAXTF4UaU2hAU2BRJr9qNfee4QrX2A
+VstEaWGThDiY9eGseCj9bdiWfS9Jw1DNY9YELhy8/2laHfV6JaaCBaMdGUJ
09AGp7ak1MSwQLOJtf0zrv/u/t8hNXEs6Dr8o5dEK3iUX61JYEHZTPmJp+j5
CUaHapJwf239fesi+g3Xd7j6BQtuXLZKncV8Trl6tLU6nQXtlXdH2tBh/CLv
qjNZkHv/hW8B2lEx4371axbc04h67vpvf11pU60uYoHauP7RPjw/bvMpXPtY
g/mgHjSUjefbKdnWeVWDLOgOFTomh+ex57VFOcnDLPDcYFXHRCc17j7rO8qC
O0keAV14no9ef1G0c4IFvp/WRYehA1q8L+X+wXg7lEz9+z0xN0C+I3EhG6xd
trn2Yr3o/Goe6L2IDaUL7p8tRTNUw7eeEWBDy+XFVv9+rzzynR4iIswGO8N6
ayN0z7bWvfdXs+EOTy+0BuvRsn7vdM8N+Hksc/8krF8au/KMTTay4V2EJdMT
bfZocL6GPBsoKpniJ9EvtE5aTCqyYZpxWHo+ek+0/CoHdTb8vLLLxwrrodPh
Vm/D/WyYpJ5mLcJ62Zgu/5+qJRteGGTQ51VhP3p6Y4iONRseHFl0oP4DnheL
NlSb2rLBL3HwfDj6nd3a3bcc2LB6ZY3FenS6jMjmLmc2XFXQm7+/EuMbNY8d
6McGff55nb7lWH902LtiA9iwbvHaJF00fYZxLfsWG8ovZeWvQLv9RxnrvMcG
hW3PvqeW8UgboclOpUdsOBQ+r6C5FPsH/+7XHck4ntyPz7SwP6Bt/T4ymsIG
qxqFfUvRbzhfN/I9Z8Pl27qRP7GfUN7dlrAlgw2pJXwut9BSf+vv+uWxAXtS
u07sPzrTaiujCtjAlrVa+wodYVjNyHyDVv9x8zZaKK/Crb0Y42laHqeBpjiR
loof2DDkPvkpAfubQsk38Xs/suHNrGbhNbRLfX67YQ0bXsrMUz6JHpR/fcy3
gQ02MQt/CKJTOrLuRDaxIf2Qu/gQ9lOWtzMq0pvZENK2bOYjWnL7S3pZCxv+
qGlfTEV3cNM0276woeua761A9KNHKVeG29kgHXdsny1ab19yNvMrG54sd+BT
RwtMJA6t+sYG9WMqaY+x3/v45PEGhR/4fMWSY0+wv/Q/Hm+xh8OGK9/+aAP2
67tpsXGnethgFHAs8t/98W96VNt5LhvMqONjxnjfzT8dscynjw2uq4XLe/H+
/T/unqtO
          "]]}, Annotation[#, "Charting`Private`Tag$1322897#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
QvssJNgcq5abpsC/RpmHst2z0ChbruWGzp8XaZfqmQWDwtrCerTe+Y1xB0Zm
QSrBV9d0hgIiDxe49k3MgqX70Zff0FPh4/ZC07N4Tv4ZO45+NdygunN+Ftho
s6WWsxQo9Hw7zLaJCun35bqvUingk+KjuYGDCnr/HLpeo/X/OuWs46aCtTzx
RQl6RtTUa2kHFVjcjSoFaRQo0tCZYvBTYXfa9YdqaF/bs/o0ISocAqHaJ2jR
cgmxSTEq3K3+EF+Mnp3gDxiVpIJAbNbhPnQx7xbGoDQVrk8uO62jU8DvONON
PjkqeP8U89uLNjCbrSArUqGbPHbrOPqA38B/XcpUkGrbsukKmprx900bkQpG
/5k4WaJLuqpWm0/j/a8sl7uhX7Pk32lUpUKbuk3oG7ShZHJ9rToVDgiUnY9H
i+lEHanWpEJPVA4lD017FhRZrkOFW4o1ejXon5/dN5TqU8Hd2zCuE+3/29aq
6BoV3pxTbB1BX5u9+zfvBhU4FJo76Gjx3YaQc4sKWaVemcxzeL5Uufg14y4V
zkVE3uJAl5rDlrT7VCBPXR3kQwcEydglWVPh8f6fRwXRRrki5LgnVIg9G2Ek
ipbo5T0Xa0+FB5rfNSXRc5s2pkQ7UkHDwW6rDLpMZoEv0oUKUevCo+XQgVfH
nSPcqeCpWkI4gjZ+QRp840WFEwZXJRTRB+MaNEJ8qVCgxJ29ZkbDz6yAACqo
h4aLH0X/YmQI+IVQIfq7q8Oag4S+eniH4/zt4vm45uuqbydfvqfChnnHgDVL
WvvouUZhfFx3OL/m+TdOhc4xVKBsffBz7fPLi6xEn32jAiFcl7b2PMFDJq/t
EqmwkDvbqYC+sUWH/jiVCsqewg/l0YeOnDW2zsDxuJinHEYvGCuW38+hgmJg
WODaeCs8JKTu5VNhZdBi23/okGT+MLNifL7HHdJr82PSyrliUkYF+wjHATG0
1ArhtnElFSYfJh/aj36QXKnHV0OFVMsnunvRicYB5+rqqeAh5q67Z22+iwTF
T/ylgmMZax0vWtTlxPieQSrMl7r4b0SbSa/vbhnB+Tt+6SkrOoZSW+s3QQVn
x6SHa+stfNIoZZlKBUaX9qMljAcBZsdH3etoUMDvAVNoo++nboZuoAF131+u
CfR70806FzfT4PGVkNq1eOrc2nSadQsNeo8deDSI3lX6Tr5gKw2cNieQe9FX
H5uK2vDRoLTjqR4JHS4isf3QLhooSvYntqH/Nk1vGNhDA/KfX72NaD73H4z3
e2lYp6fnqtC6ci9GdPbTYPg/qfFidEi/age7OA2W9D8VZaGbQrh+l0nS4HtI
/KME9NYzbXmO0jTYZ/uANRKtRYtMlJOjwcQjaftAdMCXOx/Gj9AgMiLhtyua
Y/2c8zVA/87hM0WrZxVa8ZxCr3zaool+ddvjRs1ZHL8deUwZvbGCV0VZgwYf
XpDVt6HP2XXLUrVoYO7O0baE+cHjwBeRRF0aWBQ2nxlAs3jJsfIb0QA+S19N
RZ9SXKI13aDB6WfTHkFo1+HSQZ9bNHjLLfX8EZpw/nLlogUNer7t7z+Ihvld
P9KtaKDMZmPIinaO642zeEwD1zLD712Y35Y2PfLpfEqDGpY+7pdopdyjjsHO
NIi4cWGfHvqpOdMDNVcaLNpXie9HM6oDNPK8aUC3CNtbgPn0yDN9eOxHg3Rq
Db8H2vagkPTBQBpsUsnacxFN9UnhjginwasjFqdaMB8fVrZjvvyeBqk/v98K
Qz8aPzHLFoXX/3x7qruWv9Xrmp9+pUFsd4BvLeb7cY6JNwZZNNB9HFz1BeuF
tjcpzTSXBl91405oonNYGn6bF9JgWgArFNYbt8Xvq0/LabBt96qsCnrXiP2d
iFYalD/5/iEP65VqGcuRLjoNVpnnVc2x/iUDXbN/gQb+vUk7VrA+8uQNmY+v
0ICrl+YTiCanVX9cWk+HP2b7bmQP4/giA9bv2U6HaI7a1pVBrL+7XIX276bD
4Ve32v3RKmGPjx0SpEMeX9FLITSHn57l8QN0eN8jRTqF9TrmKX+r0RE6OCR/
+5nah+d/OseUmRIdGlXUxXXQ1g9XN1kCHUykA8oWsB9Qutt73PkcHYJCD9pp
oaP6mq54qOHne51xZkKvv/7r4etLdFDk2vQ2A/uJP7rfvny8QofUtuAREbRi
49uiWEM6TLRXbqFg//FR3ac9+TodOA5ayUWiWSodZ7Nu4vP9Kjhtgr53ypKj
6A4dArerBIqi6wqvH6iwoMO5uhuf/5HxfHhM62S9FR08XwxqFaDfZaoY/n2M
vqfp6I8myMjZkO3oUGEvy30bfTtxv//QMzrwhGSznkTXHNge9+85Ha4UvtUQ
Qst+3lg650aHx4EplHXoNwILXauedFgpIKeOkTA+347RN/jSwVr0bMZftClv
NxdXAB1kCBspFejKgDqJHSF0uPTJQTwfLcVefFoonA7uzUsvM9AhnmnGYu/p
8EwhZCwVvcD82V46ig6RFoU30tA3nEOCFGPo8OP8upxM9K/5l4nEb3QIUJtn
FKAlbOzKVRPp4NKxZ7kKHTB1l6KZSodPuhO1bWi6hcGCfgYddh1RFRtFXxtS
4zHJoYPN8bfrV9ByY1uz9+XTgVEy8mcrjo/9X/vV4SI6LHkc/iWO7p+JWkoo
pcPo46G/Kug8+p1Iqwo65Mb9ZDVGBy1IqRz+TYf2pC8XnqHNV2j99Do6jBvk
fHqH3rXeXcK5lQ6Ltp8ekdEzm9RqT3bQQYTnVy8Lrl81x1ZrVhIdcgKZtSXR
DrxRmb4DdGi5MbbrBbptXz4xgkqHwj4bZcB4SRVz6zNm0GGdLEe8FdpL8oKH
8BIdrs4Kl0Sij8i1/Y5bNwcZEDu7gg47RdXL2ToHac3TH39gPFqey5t/xjcH
UlzH/YbQZ9Rc38OuOWiZfHiYF+Obqs3VW753DlpvRSVZoS+bSj5okZ6DuRir
F3ux35W4PbvlrdwcqLJzKl1EM5vnfr+mOAcvr52wtkN/f6jK6IM54Bt/YFGO
fmWzJeLrqTlY3i95bAxt4tB63OLcHKw4vD7DifuN68UttxmNOZjim9x/CT3s
flA0S3sOBP+ornuALvaaqXTQmwNhiz3/eaPDfX9YHDeYA4G29qTPaKsAF04m
4zkI/Jjklo8+G3IurcxkDlgS32c0oQXCOXW8zOZgl0rn6RE0PaKFrnZvDj6v
fFBcRtdFvn+75cEciCnphmzBfBD7+aZyk/UcJPxxubaWH5y/SpDDnsxhHn8R
+h9aL2H6hYH9HFgRLU8fRx9Kydkn4DgHjfE/a8+jWdKfV/Q8n4Ow1Vkz3bX8
k3XW/IvbHLw64Lb5Bjojl4PjnuccbN9CKbqH9i1sTpH0mYPDMc/cH6Fv/YzQ
nno9B7NhDQZP0crlprT0IHx+X4PTL9A81eLhdmE4/u0RKp7osdqpY0rvcL2q
uK74on82ZnevfJiDnI8qbgHody3OLj8/zUHpZEFlMPpR+xkRjy9zwMXLJR6G
vtDNXn4+DuPlfvmXN+inEtaOC4lzoMX1DsLRCXZNsgmpc0Aar2Fec1eZwohh
xhx8tG6aXns/+9Z3kew5c/DUv5ozFH38+rJuQd4cGB6vNwxCWybeYLcswnix
WORay78f50t/CpTOwc2D9U990PVnDzjUl89B84Tjm7XxEEJe/edSPQe/LyuZ
uaGleyYGpOvmwED+cq8z2kRK631P4xwoyBziWJufoGcZ2kEtc9Ar+6z/ydr4
K7dvOtU+B3/rZ25boWd5nxXNds2B/4fzwWvzrZN6UlK3fw6cBl/2X0O7L8f0
sg7PAf+5hxv00JkXNr7NGpsDr0HZBg0030Ad647ZOXhGyb0E6HOysvmV9Dk4
qGnGcgRt/zz0kcPCHOgybzaSQn+rYYhJrMzB2yu29/ej23deI3cwMUDVxiaK
H812pyjUh5UBv89INPCgj2UIqytvYsCp3XFDnGgLJg/mCXYG7K6wSGNDv9cY
yfnAxYA3RzvFNqJrItStNHgY4MziqLoBvTycsn91OwM2CVLY1q5LKWzrStnN
gKub48zX3m/sZht0Q5AB3KwfTdc+/3VDuyq3CAMa2z9ObEMX7Tm+WiLKgOBP
Set3o6fMozIfSTBgyL7rmwhaKGfdfREpBpx3uVl/CK3Feke4WYYBL4VcbI6i
XbWr29zlGdB/2yvsLPp75CF/+aMMWBewRWot/vvGA84MKjNA8nPyEbO1+D1G
XQwjMiD+60qyLfq055Xv504zoCSrM8wbbdOce5dxjgFHXM8JfFzbj3sFBOPU
GDBTpeydgW61fNFy9RIDhBfXNdegN+T3+7BdZsCBU/cXBtF39RIYFgYM2G4r
XiWE5+3wz5wp/MYMsN5z+R4RXTX10KzWBO+fsLPFBC3ho/hH6h4D2szyV+PQ
Bm0RXuT7OL/aeVkNaJ/9qycCrBnQuatZfB49XvQrYdqOAXWPReUvYb/BzyFu
Gv2MASrp2b8c0RcNfHdcfs6A/25nMiWik6naLzM88PWpbZZbsF95KE4xtgtl
QNq5XxaD6MqTD07Yv2VA0B77WJHRtd/rFvY4fGBApVXbblN03Sue7qdfGCBr
3ZHai5YcVzV0zmRA+WYug5kxjF+W1mPPfzBA++RW4tFx7Nf5b+5yKWDAdWUp
nRfoVxed2l/8YsB4PpmFF/ur4eS0Ky9bGMBTulx2apICxIoTRzzaGRDVH/vO
F/2G/JvPs5sB2aOpfU3os1yDLV4DDKi6oz5khP3a54e7dHxp+Py12hdvYH+3
4P31sN88A6zCsvQ/rPV/0XLbXi8z4GzNb6Z2NKFJ448/6zwoCT8jqmO/qD/W
mRawaR4KBSZJa98fpKy7FxjIMQ8Kc5aHctHGcm6awbzz8IJpc+Ze7Dez1Lmk
Q3bOw9026wNaaA6zD1tC98xD1rD0Syf0LSeJf6F752G4jfA3Fp0fml0Xtn8e
dlu83l+L3pZ8OvmN+DykPrRwmEKblzf6hR+ah8FvjA4u7H9/kowfvJWZh5Xa
KG0p9M65MfV38vPwe8fjYVW09RYHyYij87D8QDXmBrrywHr298fnISph3s8G
LUgMHnt/ch5+plxP8lzrr/WFfn84Mw9jhmpsb9B11knxH8/PA6cTf+Jn9H7v
Y68iL86DT7rEuyS046eKe1Fa89Cs0t2ZgW7+oXP+k+48HAa6zQ+05J8eseir
8/A4UvZpHtpt1HLjZ6N5uKnyZyYX3cG8NPTZZB4O3ZwbyEbL7vauiDGbh4Yt
5gbf0d6H+b5+uYfzlzOjF4+mqH32iH0wD+Mlu3sj0Yq3pG9/fTgPXE7nmYPR
/o4FZ77ZzMPLY5QCN/RgyIX9cQ44/gundz9Cn0j6yxLvNA+W7B1CxujQX7f6
41/MA382rfkcerx7ujThJa6PRMDx/9Cn6c6fE73noYDT6wYPOoKT3S3Jbx7S
2PJPzeF6XABRlZTQeaCoZl3PQvNQvOIt3s6DTc5J7lB0t8vYVrEP83DUxMn0
Edoau/KomHmIKKuykkCHnlF6GZQ+D/9skgMDptfGp1lp0zgPCzdcJI5g/MWP
f5eWbZmHjNmY6I3ox368byfbcP7fsJu2Yzyvr++4d4eC473SPW6PPqhttvnq
v3n49cfqe+bk2no+1VDmWIAqXZHjkrh/iPNdWQyuBbBbpo8u4P7a9A4EM3kW
4GU3d1gV+n0ny9Qh/gXgbSaO3kaXGPsHCh5cgLQbYSOfcL+ym8U0M59fAFnb
VvIe3M+fHtYZVLkvwMlS1wJRzC9B3QbjLV4L0KK86/j0Wn49P+TU67sA8IFw
Mw9tupfwaTFkAUwEipPW6pNwo8zQoS8LYJ9ZFfgQ+5nP0qGPg34twNLBd+9j
sX8Leb+XNbJqASwVXc0s0O4bk8MSahdA7WtM9X/oW5TyH2UtC5DZu+VhNvaD
+wIYq/SBBaDO1Rv8xP6RZ8k9cN3oAsx1bpdzR7Pc5RbhmlyAuB0RmWfQ/SBx
Vpy+AAs+8y+qsV/98s/Q13D9InzcRnjXj/1umOHwnrtsi7DRfMI+Ge1R8STl
Ceci6I2xxTqsnT8i/f748S2CX6FK+za03uZdt97tWgRZwsm/vdifn7WLpcUK
LIJLS+fWdLTopaIdxaKLECC/We4Kmi9PLb5GYhHEsn7vOIhef6BNqV1qEVqi
QJ6w1v8H3aodkF2ESWUZr9ZujOeVKeMZhUX4Ubm9Kxndau40tXJsER7ICtu8
Qpe3bnLdDIsgKBCmew+dpRK2bcepReDKPmGjhv6aLPxl37lF2FQ89VsaHb4r
RUFGbREc2P21dqK9PJQqj19ahKs35VZY0PYzFVcvXF6Eve5M1bNdWJ+Mdcb0
rizCeantSQNo/WqK403DRbiwNyyyA62q8IDT+voirBNJfPsHrRg9H+l4cxEU
xBqDa9FinB4y3ncWYd/9MI/f6B1Pt5aGWiyCsKSfeQ164+BHnWirRfD4clax
Ac3QOjiY/HgRUpXUaa3o4YJsuzy7RThhfP4FBd0mfnpT5TO8v7GQ4AS6MrTh
XfPzRSjjdaQvoXOYjCR73BZh4BrL6hYcT9yDkYIJz0XYplwjLYqeEd56c8hn
EfQF81gArdx2bGOP/yIc9uX9Y4B+6XczqSN4EfLShv0d0HUqvtrNbxbh3uj5
IxHo7YyMudqIRdAsfVJchL6R1P2+InIRFmauigytff72/4Zyvy6CG/+5Kydw
PZVqr/hmJCwC64D/Tku0u6uLTHLKInS/hzdRa/Ew0fjsUzau75Uz0RwYT8d+
PuHyqlgE65tydcwYn252HzJf/F6EcUkXwdPoGslyg2f1i2D3+APNA238ZvsX
y78YX2FnBbkxvl3v5x7VHVqEFzG10wq4P6r5CDeFNyzBJ4/jEcV4ntlWI7aR
f/MSHKpMXODG/XfthVYS75Yl+FkuM2iCnhyLntu4fQl607+ar503tpac8f0n
ugRJemr3RHC/G9payoxILEGscNe9e+iYg29ae6WWYG/noU3JaIWwYaFWhSVY
/7T70GHsJwwsfDLzzy7BIncPXRL7h89CGQZZF5bAbrfLxdvo8Zau1RSNJRDb
3hz3Hi3vw/olTnsJ9JL/cDegnYlSFz7rLYGhv4svAfNPBU3v33uDJSjI7xGS
QnMlPA8JM16CxovFLfroaN5GkvdtvH7oTs4X9Fj1vJub+RKMmLbNVKDlXITF
nSyXgHbK5fYQ2klerc72Eb4+3GUnC+a78tHHj61tl8D6Pt9WAfSWqPc7zJ8u
wbNH7nryaH3dXwU3nZfg1haWifPoaLZJUyPXJei787bTED1WxLfxiscSaGbr
i1mgY5d5FNhfLQE0hLDZoU2Utt0q8VsC3jM/77qg+R24g2wDl6D/x6q0J/pv
1pbig6FLcFWVes8HHUTlmKSEL4Gj5J4dfmu/p8iy84e9X4Kosk7wRW+0Zrug
FrUEA3t8B7zQpUkb7QkxSxA/7c3hhnYeWx+b+XUJviSeyH+KPirO2myesATP
w/fTrdDU2+uYhVKWQHUkvsgUnRLDJN3yfQlYg47tuYw27101epW1BA83qW07
id4vtOIDuRgfdfqxkmiK0dIPasESbGdv7+BFR0QsDMWVLEHDFDFzCedXr53B
e/3XEmTGbzjWM7r293hzp3iqluDg9i8PStGeQbORzg1LsOHx1YoX6Mfe41cu
k5cgh/x1nobrr2ZHqlhaWoJw1uUDpRhP6zO7aGmEZcjMdlJ5hy6Z6RC5w7IM
F6fkaq3RRyz/Pm/cvAybZBvl+NEzCS1JHluWYdEkc+s0xmfSSFOn0rZlmBod
q/6FFjFrOBK7axl0rFoiHqFJ0XVmhgLLQK7ZOXkB/ZZSE8wlvAx5K1Yu+9Bb
rlX9eyq+DCltIbqdWM8WtX9+vaS4DPRng1evoLMCiltYlJfhfkm98tp542Fd
4bpcWIbAbZWwdp4aOp93fd+5ZbBVvxA+gPsr2vOHX/uFZXj94Obgb7TRr+y8
1xrLoNxRdDod3UTM2D6vuwxN+ZayL9Gvnb+fSb66DA7q17Wt0efzUx/fNFqG
K+1NN4zQLAvJn3aYLMN/Sx066uiiI0n1tbfweU1aRI+jn9okLLveXYbPyjb1
/6Hl0+MOKt5fBpEdHKr70FNTX69OWC3DmJGf9y50glSsZ/TjZXB0EPXbivY9
Ukf6arcMsm6p7ZvRlkS6fNKztfndKrYBrXlewO/782Ww0DWwZkHLap/tz3Zb
Bl/Oownr0DyGlkoFnvj+d0sNa9fpN8OCfvosw36ZmNa197fdLxyp8F+Gr5tO
J7Ojc20GibXBy1AR7aq2Df3emTP8zxucz2fro3ejnT0V/v2NWIZbG32/7Eff
CDA+2x25DF6WZ9bJoE++9fjQ+3kZ+Hawmq+NXzg6mTr0dRnsW3VaL6zNV0Kr
2kTCMnToeKhcRVfmiy7MpS+DQM13Fgd0/C8NreVsnI8r2zRfrY2/zvYbc/4y
3Bi19XiPvkQp1+MoW4YerfBPpejWdXfShZuXYbLr6Na19c5h92cTa1sGUYGd
inJr32/wZpsc6loGnsoCsYtoowMbuBT7l8HJ9u7m5+gT0v/dOT68DIW/x+3X
vq8QOnqlUGV8GbrSKH8T0f0Xvt6/SF2GyJclVq3o8sv1pdqMZYjLjUoYWTvP
X5vbpb+0DGnfKkiL6Fdmgo+MCCsQ8iOZjQPj18LyXJUpywrcJ3VK70Gr21kJ
3d24AtZaq9qSaCmXN3YP2FeA+2Dqo2PomcCh/fY8K3BxeHfaZXTzuy1OTjtW
wCJLtskYnfX5SLMr/wrUXLGcv7t2fk28ftBLaAWafvSLrO0nh0xPV799K9Ct
xCrydO28WpjSHiS2AsMKnpdc0MoVf6XDJVdgVDU12B0t0LDq+UF6BaZ7iTQP
NKH9ADlabgXW6Vo4eKJ7ey4pfFNcgapXnvvXrpeN2vklKa/AW4vcFVd07Gxk
/3fiCpwMkWBzRnsuVSjlnF6BBd8udTv0XdapoALVFTA7W/zbEn2Bc8foT/UV
CLRp9bmFltxOPFmpuQL/nvYG6qM5he6G1+qswDYth961fDAlFvDvj/4KzAT/
56qE/iOTc7bt2gq4kN/aSKAzjlE+dN9YgfR69ZLt6NBTG2m9t1bAM4ByfR3a
Vl1affjuCsQf6Hg6MbhWT/Q/T9xfAbdbQ+pr68l/55sW48kKHFrecjQGbc34
IvPDfgWI3EFSa98/lXl/5n7quAKGkhY7H659/5L4sXHRbQXoG7Z2reWb3OkQ
rdWgFfiQanSnCOOR0y1IpjhsBbbUf7j2EW3KE8D94t0KGOweM3ZEbzri08gc
vQK1vUxh8mh9xxda69NWwMqZ2fgj9guJHM9lKjJW4CZroYA9mhDpyO2VswIt
gsnTWuivJXaNm4pXQI29r5YVTV9vqcVRvwJ7DeqMLNf6+UADLZ6JFagLjGlQ
wX5kWFhfpmUKnz9sH2kPWjlDlzuMugKpot/857F/6WvVbNy+tAIRnzu+p6Nl
+c9p7d68CpT4vZdk0R5Jp2W6OFdhjsNtGw+644QK94etq8B/fCCRjv3QC5Pj
jQK7ViGtMv5KIboh9rCWsPgqFFu5XruC3qcoI9MnuQq+UYfCAW1fJcUdI70K
8ewr78TQguPijfsVV6FjltixhP3YI6cDaYNKq7DzVAxtCF3OuT/wK6wC63Rl
ZhPaUkZIS/zcKkyGuQokoX/+3CMzemEVohMky9a+T+fV2c2doLEKLOOVG73R
+bZ8jZJ6q7AUL3DvDnpzPruWtNkqVG4jXj+IzgmLPU26uwoLjWw7BNC3HhIV
fe+vwp+lBWNudKHoE8Hhxzgfz88FzWP/aM7EuS3MbhWM6BTHSfT2rq/rTz9b
BVXPlLo+0trfS3VORLquQs3ouHY9es99m56LHqtAa+b3+IWuPrulZdF7FYoI
wqxrv3eILKnkXwlcBaUHCUNx6Nbb8a+2RK1CTwrhlDfa9eRp54LPq1DYNdX+
Av0fP+mhxVecb2pxwVO0VyP31YrkVeCVzLV4gJZPTFC3+b4KsZNF8nfQvR5n
iCJZq/CjaoeGyVp/rOxw4HnBKmi2V17QQw/zbdt9qGQVNm1t4dFa+71lOpGz
swznhyOOoYaejKXQFGpwfqJl506io7hVyyY7VkFFBtj+Q6uP92S/J63Cp3g9
bwn0fPmzhAu9q/BValhQFK3tmBIUO7IKeXJ5wXvQrEN8JsYMXK/w4DAO9PeS
VB32pVWQO3vqzya08fsLqrmrq/BQO15kPdpDaWZPBhOB+Oh5uAEzukusaLvP
OgLx3mKZ/Ar2/7J8vtymrASiwAbtzPm189W6q5uPbiAQI3UrO6hoedLMyiAb
gbjD8u+eUbTv7yJGATuByJIjAP3o3hzfmRBOAnGlU4eDhH4dLDqospVAfGxx
JLMB3e8yS97JQyD+feYfWIVWsixun+LF+3fzC/1ED6sa1H7cSSDKP27W/44+
oXCgwmY3gVgkIccajw4RoRar7yEQJV2D735Cn1zxy1gQIhDpG+hX/NfOh2MG
yY3CBCI5Jbb7JXqy7cC3b/sIxPyZ6eZn6HfpJRF6YgSi2/PGPjO0u4dIvK4E
gbiUT57TR1tefZmjI0kgls1EXF07f55cVW3RliYQeaLJPFJoiT/xfVqyBCK7
fIKNAJrnC/uMphyB+NXktCzn2vNfaOC8pEggUjSP/R7D89yfPbJ7NI7h609W
JrWj86aCD15UJhA1JbUZ5ejXYVdU1YgEYo3rhoZItHwv6cU5VQIxlWU8Rw0t
kEkMOHuBQDylM6+isHbe9Ir+eEYdrwsa5wmhuw7dzjulSSCa1zO50Doxvh0m
qKBPIJ5//ufVR3QD19IdxbsEYskYzWbt77Fy+4xsj5gTiMJDB953omOyitwV
7hOIfYHGjyvQdtfcPslZE4j13wyPfULf+G8g5fAjXN9pT0l/9AXmc4WyTwhE
K0ObZie0wDe2Tml7ApFxV03VCL3x2f2R/54SiE99/Xk10DMX6+akHHE+Yvki
AP1rNpDnkAuBqPTXqH4fOrl8VljSlUBssVN33oEOf6src9CdQJzXqBtgR9+H
nRriXgTib7s00lw79uNbn10Te0UgOslEXphEEwe6zA/4EoiX7mvO96O3+UR5
7g8gEBeN34g1oZeMmMP2BRGI/b8dkqrRg9K3YkRCCMSgDaNOP9G5rQdK9oZj
fB3y2JCOjonzrhd6RyB2j3WVJqD9HMe6Bd8TiOeY3Btj0DeEUxb2RBGIC9Ih
A2/QF2hcm/ZEE4jlivSJQLRc5aPt/DEEYuPbAjVf9AZLBbld3whEvt0fNrui
JVjXbZiLIxADl7VzndDq7+vbmxIIxK1JcRYOaKvD7xNTkwhE+7eFXE/QQdV3
n/ul4Py25wQ+QGeYyGubpxGIpq7X6Wbovwym/efS8Xk7OM8YoRf86+ZEMgnE
uq09bpfR/AciqgnZuL4rejmqaCi886E7h0Cc/nNyWBltqitnnZtLIAakDO+Q
RruPE069yScQ2w2MLwmjv7rV8j4pJBAvW5ICtqGrd70b1izG9ZNm6V2HHk+7
nXfoJ47vk/e52TbMH5TVG0O/CMT1bEqm9Whdu5rDZRUE4gvNBMF8tD3n2/Wf
qghEh2Y35m/od1/M2p1+E4iz4UwcwegCZdlEg1pcL6cEcSc0pWnF+Ug9gXhX
8Ui3GZrZ4rcWTyOB+K8jtUcdrfr21lxtM8ZH/fURXrS5tEx1fCuBqJ27tDL3
F9evYvm9ZxuB2FP61LkN/YcWpnKyC+Nbe1NLCNpIu8ovo49AfM876r7YSgGX
kdAbgQME4q1VhaBGdLSL6WHLIQLxhvmrI7Gta9/nL7YdGMN4EPxtpIZmO1uZ
wDJBICooFvfvRh/qDnHumcT4sprnGmvB+rtZal/EDIHI9jo73R0dGr1At6MS
iBf9/pA00DlHK6p06ARieqKt5nb08p0bVpwLBGJhTtWuz82Yf8uCcl8wMRHF
CSyNsU14njG87me8jokoKGqTeRNdN3PwhhIrE3HOw59VEL1t7y9W2kYmYnir
+3zAHwp8dJrTvMvFRORk+xlj2kiBdIVrQxqCTMShd06i1XU4X+kFdZf3MhEt
fo92mqOFpAWz9EWYiGJ7zhuwoX3Fe91NDzAR9YNtC87UYj3nvyts+x8TMcWT
+0Hyb8x/zE+MPgAT8YxHqv3JSowP55bT0SeZiCVX/IRrK3A+FxUkv55iInL/
2q9zBT1OnV9IPcdEvFU4bninfO3/zz0PL7vERFwKyDWwLaOATa1P09h1JuKl
U5t7LxdjP3thInfKhIkYaUXqrSrC+lKuEU27yUSkSrtGn0BrFHM/XL3DREy/
+tB4XyEFRNPfcG6zZiLKSLL8peRh/Q//fP6YCxPxR1JLj0w2nq9v5RV5RTER
JfcnuRCT8fVfPC0sopmIZx1GSSVJFOAbvLxdI4aJmJnmqX8aTb0zbrntGxNR
+bijq3oiBVIt9gh8TGEixrUeX70bT4HIxJEqlzQmYsYqr/tMHObziUybm+lM
xPqbtrOO6PtWGrVi2UzE4J1P3EO+UUDs8XPH9EImItPTj7P1sdjvZKiJhRUz
Ed3zpF1votfTtjfb/2QitpIf3Jj/gvXS9v8K7jucyjYMAHjOeYckRTIipGFG
ERnp3JllVBKVKFEIqShJhSjRMrMaVoQkSZGkT8nepMg4lGRkKyS+uz9/F+f1
Ps89nvu5LtfJkttawgHBSp19cuh4r67WsmoOWL1fyuRxEpsV/PpJwONaDtDq
1zizG+09e17pdj0HyF4Lf/w7kc2y8ua7bvaRA1JcchWN0UJ+OuodbRyw9Riz
njsB+9P7JT3/dXDAOwPR10XxOP8y20KS2BzAvU7AxhPddPXMD8dvHPD+wWRu
fxybFRKUHDU+wAEuM/SCrw/YLJ+K0zrNPzmgRMyETka7Lto6nDfMAYM/dsc4
oo1vNet7j3OAg7SM4cR9nNdD6V+cfzjA/bvr/pXoqfrGhIFZDrjtWKA4cA/r
iy/epGaOA5aXz7vmo0si1JLDGQzQz73//SDaL/r4XjEuBuRMvO2Pv4v9Lq4y
W1mYAXNd5m6KsWxWJGn/g1uEAQpreNwY6I3OC8S+izLgtbT1xY8xeH9SVQmK
lmDAwmj7xxfQxL3awtOSDJjXuv92JzqOw2nCcA0D2PpJZyXQzVUPDv+VYoCd
/iK/N9FYz0rqd5plGEA0enQFohdHN1Y8lcPPh3mt34PWteNUtVVkwPWo/+53
ROE8Nn2au1SVAfkTI+adkZivh7m149UYoGacHBGL7itOOXdegwGcSz26zdAS
IV+65bYygOOUacF/dzCf1um9CtFjwB9Bj0j/CDw/bnYOHTdgQOiJd1UK6A+j
59fo7MD1Xg04/ikcz7uCzOBJYwY4W2oPS6CdzITsLfcywHFfQO2dUMyvV9l3
lS0YIOKvypZHJ4iZ1HPvZ4DkY4GAohA263Pf5S1vDzLA2nrFo6/BbJa+7wDf
GjsGLH6hXrHoNpsl+aTw7c/TDODNWnt7Lgjneb4DkyXuDPh7vHe7B/qA57hs
/FkGtGX6xg8GYr7oSEfuOc+AsfHrKh+vsVlzLaEuub4M+P4EDkZexfsPdUz4
cjADYpRczLp8MT/2RNj5heLnyZgBDbTa/fdP/MMZ4DZ9a3GED8ZXWVI7IIoB
RR+qJnS92SxTm06nG3EM+DY97ZFwgc0qe3Wg4M5TjO+FuoMGHni/d9l5OL2W
AZVSX5eedWazwhs2JzcuYYJ5wmaLcHM260bGa6Ooa0xQfX/MKEQJ5+OEftcH
QUwgf+t8ndmI+RYpHJZ8gwlqCqaddmhP33OfnwczIW9pD9fGDWyW/V7lY3VR
TOhwVjyatx7nkdl074WpTBBXlNdyl8b+YRT77EIZEwa4dyani7JZw1De5FfB
hLFQOdMfImxWv8rU76AqJri8NO5fi+4St9gaXceEC2mn++OFsb+P81bmfGbC
jFfQ9kgBNiv1btC3nz+YsHC5lcG9pWxWUkgePdnPhJHTJd++LcF+f7VXdnaQ
CT3ld90U0XdO6p3mGmVC7biVbcViXI8Ox9y6aXxedEOo4CI265LahlUKf5hg
FZTz8iQXrm/9YV2Vv0x4Pi5fUb4Q5xHBN9d1OAh4ma3Pc4UT+8mAp6DNQgKE
ZYaMJCisH9Kj2HoRAXkyg/VhJN63xdxPH1xMwC9WcwEn+o/piUoLXgJMLPhz
5ph4njo7ee5dRkBU/0yeN9rwqsPaPcsJUP/TuoyBjs074mMiTEB3ZnE+H4PN
0m44JG8kQkD4+1NzcRy4XwMHW7avJKBWvy1gA1pd3EJZdxUBI9d1zQ8uwPy9
atirIUNAQl3U1Iu/nSzfOIMINTkC3lQ6HeBES7/S3aa6noCPwz1LbWc7WecG
t97duJGAqc2L9OX+dLLEqC3bFZUJELC7khI708kqEVeflFchQEJobA0vWsBM
eZe0Ov69OC69ZdOdrEKXDbNrNQlYGqdZ+WCqk3UsYH3aai0Cnm62VNuI5o6X
tVjFImDc+K53xe9OVs4rKab4NgLKVwuHO6GtGtdkieoQwJ3rcZwXTfxcZb1C
j4DAC/7thb86WRmUOJeQAQGrjoyEuqHNJERzl+8goGri5FF59Iy68NFlRgTY
OF7SH5zsZCWaCfDymhDwk8tBOhtteGJZIc8uAuZ+BM9cQo8FLHXmNiXA7Sbr
6S50bPxiIS4zAkrPRapJobflc32gzQmYPSwbSKB/NNJu5D4CPsXVBPdOdLJC
fhLizAMEjH2itevQajSjasFBAnr2jYUUotkS855zVgTEHUhyzUYHasyunT1E
wMYP9dWP0Yp7pxumbQgIzTJMSEc3n/jl89uWgDOxMV8y0d7XxuUnj2L8k6cD
89DrEkZaxuwJeBstfrUUXZP/M2DEkQA689H5NrRHU7/ykBMBmnxqz36jxYZ6
2QMuBExy3ZEUxvcvoXtu9bkSELCxvRjQJ1Z1a/Sewvff5+rniubX7Oz95kZA
jXS9cSK6YG9bRPcZAhQlny5vQx91bdnG9sD4ryRrRXC/uQObh9o9CeCk7jgd
QeckNN794kWAtL5Iawba6nXd9paLBPR9u7xkDv14qCKxyZcAa+/EyGcY3z2c
Zbsa/AhIsxquWob5MbPqw2ztFcyX4dDQC2hD87cWlYEENG1xjDiI+SWnLFWW
cp0AS+YdrWo0N2+wut9NjL+yqp4+5mN11SFR9RACzF7Hrt6J+ZuZXnKLP4yA
6pvFTW3o24EK88PhBCQKm8S4Yb7v1p3rSokiwMq/hf851sMGSXszvxgCfHaa
plrPdbJ4F9QUW98lwKvbn3PJfCer4fX9R/xx+Pvjhya1sb7MlbVO+KVgPjOt
lbuw/lR5kzusUwkQ1Bot2Y31KjDMvVs9HfdzpjnmPfpzepvSyBOMxxj5JAvr
21Ly4pT1CwLE42tOJWJ/sOF97a9ejPlOzmV1YL/ZNiw5yV+C6+NWFHHFfiRZ
fd1+pJSA4l7LTfPor4GWOx5VEhBTyWuzjhv774IZnuWNBBiazhed5cHzquOI
70gTARWMntck9j+pgvLRymYCHlvvFItA/zgX0+TXSsDqOZW1Gdg/nYfVYke6
CHCNHPco58N5pTp+UdVXAhpjDEaNl+H8+Zjz0qMejK9MR08Nesj+8+FDfQS0
v7U2qOHH/qwL9eoDmF+9K3OMlrNZTyVTtZf/JOD+s4a0UvSpjnNrq0YIsPVx
/fYK+7dpQWfkozGsl/yugvWCeF+KNeD0nyDgL39a1n30uLnggPoUAdpbCR43
ITbLo/pl1qN5rGc/ies/8TzoD3mu+piDhDPLi9UMV7BZh/ZmFWQySTByT0hM
ROt/SSt7QZNQUNxfp4/nSf6DlJ2vFpJgUGSRFoZWsE1qKlhEgn0Wad2KFui7
x36/hIRX+yYTrPF8up4RY1/KS8I3gwnFGPTcycjBimUkcITGttei3ZTD3WqW
k5AS5XKOYyXep38FT9ULkhBq2MGlgLbMv+n9UZgEF/PGZHN0zaUgokWEBM4C
hrknWntbwPW2lSSo2IatiUTnEv5L2eIk3PPUW/UULV/mE/l1FQnBp87se4+O
v3FRtHc1Cf271zY2oPl3nU/sX0tC+mByfDs6kM9DekiKBJv9Pyu/omc/umWO
ypDwcGWITQ/6VMzJTZNyJHhddXHqRn+zcsmfWk/CbvbTnlb0fonjMKtIwoOY
O7M16Kqvx0rmN5LQ5a6VXYiGR7bGzE0kaMxfMUhH5zgdbqBU8X1zbM6HoaUV
rPZzqZEwvvPTi3Poe6P7OxZrkGBXNEJYrvz3fRTmR3m3kLDl9VVXdfSU5q5T
QkBCjIxJ1jDup8u80S8RbRIqL09ElaDZ77ZfFNcl4fPAy7xYdNkO7cB120nY
6/vtnQZ6y2IWj6whCcqKP/IpdFadZsR6YxLKhiY56zCeMftU4jftJuH4y/tv
LNE8Ikrr1PaQgA/bJIr261DI0NxLglWPrfgXzBenY9J52vtJ+DXz5a0pWsNd
pG63DQkDA5TBWsy3TFUhi722JHClFo03YT5KzvC37TtKQtjgxB0/NNdlnh+H
HEl4vMG97hPmb+ttjgUnTpEgUyz4xAnz/UJ6r2KQLwnZR/TF1bF+pJV2eTn5
kaCr/VKuEeut+dXLYqMrJKSpXhl2Rm8ov3qAJ5CEDN+HaTG8GK/e1f7hwSQ4
yCkrf8f6NV5r03z/AQme2y6KmmD9T2eUSvjEk+CctkSmFeeZlE2KzjaJJNS7
nOd0RC/QnZuXTCHB8FO3egD2jxzbezKpT0h45m+mVYXzzMr4zxezC0hI2k+s
9MZ+VCEFpeGFJBwKIFyF0Z5PH/Ge/Y+EY1VNW3IJNquh0CNlczEJhPR73Rns
Zz76HSNCJSR8+SPgEYeWr9HTnCklYduH/OUG6IB2/rqCShJaP8mG3Md+qHzs
4ooH1SQEilF2xmj24NejPrUkdGsoRPzFfqoxmz29rZGE0k/sBQ7ooRWmq0tb
8fezhO6ZY/+9m5h3IrWNBN++01MC6O2yEnlBHSScamxyf4H9evLZNYYzG/e3
j7dTB52oPmxs3I37t15zuAX7+64ii6j130i4ZEIlnEPPbi/s4vlOQq++WK8o
Oq1urfxILwneq5bklOP5YLH/lkd9HwnMc3ozl9BM9sR/2QNYH0EyGeroLAer
RRE/SdisI1Iwi+eL9fB787PDJKyKviZaiuY6JxdvMUrC5HDh22h07lxY/+Zx
EgQZC6NPo48GzGwSniTh59UnUaZoPh5bn5lfJLQpTWSpod/eKS//MkXCOf3Y
3+vQQtrz95/PkKB6O19bFO02tMntxiwJo8ZnNwuhq2Kd9O3msD9Jt1asQK8z
iF+huYCCKrHXZavRvuMfh/gYFLgwKcON6Ja4Re/7mRRo/+l6sQ2tZLwt6h1J
QfbC/ULm6JtTHs6xNAVjqatPOaO/P8xguS2kYFmySsEVNMu0e5nhIgr64q79
iUdH/xX8sWoxBXLpivL/ocfSTAqmeSio5Jw16kYbW/iH1C+loHhQ7gCN+5fM
eHU0jY+CdJdiU0X0/oNrFh8QoMD4WO30NXQ2bdm1QQh/Tlg/zEMvygl+wbmC
Ase39oqD6ELuP9Z5KynwsbdqPYjxW1NYnym4lgKZ0o9n92H8vZ1o/+F1uP4X
zVp30J8EtPaVSlPQzue1rx59/WTqvIc8Bb4qOnskMZ9GJHx2NytTUBQ4vOsm
2rA6Z02mCgX6IpG/HqKTzvdPXd1MgYhsbm8B2qLBPEFFk4Lx82Mv+9FZ3jfO
LtaioNll770FmL8L5Yp29GzF5yXltSxHF/jLj0Vo4/4tSHPcihbYYFviokvB
n98n35iiT7ZFxerqU1Dm8WjTUXRZYLWr6HYKDu+rSDqLllRh6kzswP2ZhyUB
6ItdaoJVRvj3j9+4eAf98ZbrQJIJBb8LJEaT0IHfW8LNTCnoONtAFKK7w5Y4
yplRcFez/0k5WpOlt4VpTsFxUzu3JnTEgNfSLxYUXP6RYtHxr/6isr5l76eg
4f70oV70dt3vedctKTDiiQ8eRieMiNyytcLnN3cM/kLP3DM9onGIAvfpUa9/
9bx3xzUVPhsKLqx8osXEes+cLFjYf4QCfDs1TjSdONZeZEfBIYfjJ7nRNjul
s2OOUcDI7utegs6fsQ447UBByp8Lff/uQ/yPwi13HKcgrHDzoAD6hFm5wirn
f/nyWlgUXTI/x5h2oWDutZm7JFoiY9OnOlcKEpOVZmTQi7fOv607RUGoOb+X
Mnqmtjy1zg33q2r1oa3o3iMRoXVnKEiSknpkiG4aP+RV50GB9ayO+X500VUZ
uzpPCpYcGHd0+LcewQmjOi8K3mnqdZ9DX9MMWlnnTUFckjb5r9+dqTaj6nwp
+HimIPPZv/UdFhuu9aPgW/q7glK0yeiPT7VXKFj/OUKhE63h//y/2gDMj2A3
5hRaarl3Wm0gBbI8WXp8zH/r3x5We52CrUJOQopoDvVlF2pvontKVHahhyra
7WpvU+BpfS7WDf3FKtW4NoQCDX1unRh02ZCbSm0YBZ/WfJF7j37hqyVWG0HB
39glpiP/7qd8nHRtJObD97JMCez3wQ8bhmuiKdgi0QR70RdV73+uiaVgprWB
cQNtYamUXvOAgsnVqiQDzwudwdmwmngKzrx6tkUbvcG79EJNIgWt3uOhV9Fc
iVYmNSkUxAj/DlqO9+c3fQEj1ZkUfJCI0ttHs1npF0xbqrPw59nfszPQkYtF
31VnU7Co6dB3Jp5XpzY+C69+if3lR8WjXPSa819UqwspeDKRmLMJz7ebnBsu
VdVQYBpo7H4F7/uWUi0LK4coGN0SGvIJ51XfSzy5qSMUXBxXumyI82lKo87R
gDEKAvj/WBWix3wyC7f9wn4zn16diud30Gd/97y/FDi3ODgE4nmfF6TQnsxN
w+eOXN3TOH90dNpd9+eh4Xl3ptwYmlCN2XxkKQ1wfNF3d5x3dnczw0T5abAt
Ot19QQzzS6NFP1yEBnWpI6mPJLD+B/2zfGVpyM2VFndai/ON9ivrQ/I0WBR5
U9zr2Czb6CGuLQo0WPI3/32KztQ9cOz3RhqqbH155qTYLL37Citc1WloDGjQ
fSaL+bazxf/gdhpUeEc+uWxgsxqzFPap2tPQNEeVP9nCZt0+LB9m5EjDj5gm
dT+tf/8/IVtt40SDcEqpuvlWNuud81qdG640zmu7+3+xsJ+tE1Vke9DQNxgk
LqOD89pHYadJTxr46vuVR9FSVwSTuS7QwPHX3S1Hl8160MUnouJDw7vo/GXy
+hiPewvp69doCNKUKmRvx/5hRGvHBdGQ1pfRdXkHm8WcIS7l3KDB3V5OX8yQ
zfLat2C8I5iGkEnb8e1GeL+i5tZPhNIg/tXb5NO/7+PL+eO4MIIGCZ8qriPG
bNZxvt8dytE0WDcZf7A3wXwomhDeEYvrLfEs60azT47tPXSPhm07NVYf2Inz
qdhIsPsDGk5cVvUqR++v/lkRGI/7/7moVXkX1tfFAfJBIg0Hn8bujEbXyvbB
84c03DZx7fyF1g/89rI9FfdDq8s3cTebxdjcPTqWTsPVFpmUYfSbnk55zic0
xG+L49387/uAItodVj6lYSe/XI0nepPOl0SlZzSsLXf4noMeGf3cbvCchpIo
4tgAOiO+Wcj6BQ1zIULmonvYLMddTWZuuTT4598oMkCvnqu/fe0VDdeTLiSf
QHdk1Jbfe00D66vW+tvo2IPVRPYbGj5ZKumloy24Klmlb2ko1AkXe4/me1Xm
1VZEA9N059vP6BqHkhej72mITQiUHUAHCRSPUCU0PDtjbzeD1v1QJCdaRsNU
7sUTlBnOk2fe2m+swHg7hBkvQRdIvknQr6Kh3UaZWI4+V5/fdrCGhsdfd0cL
opV88wRP19EgyDqz+J+HFF7uCWjA90socFiGTm9/futuE+bTw9OPudH2N5+V
ZTXT0K/n2s5AS2o+ZZZ8piHJR4fxC9+nvS9j65dWfF6Pr9h3dHR0+vmRNozX
MaXNjei9Bqk5ZCcNjoUR1BP00l/Jwyu6aIgRjQhZh656mCS74SsNNzcb5qjj
fgeaJRzT66HBN33Li36Mrw4jLt6yl4bK1s57Wpgfc1n3vpzso8EueKeKKuZb
/uFYgasDNMj3NQh9xvz9H13LpnY=
          "]]}, Annotation[#, "Charting`Private`Tag$1322897#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
J9bR0C3dyysadrOALXbHsF2Jhj5z2r6X1GGBbkPhlufKNOQv9/VyF/aT639m
/FRpqPYJ2hJ6iAVmLcdSlHfTUGlQZ8LUYRaU+8iNR+6joWesnJefjrDA/2fn
QxMjGlrsP9ZmYMwCVsTqs7ImNNSulMSxiL0bDmpSj9HQiarTLpkmLBiJyf/x
8jgNrRHpmls2ZYHp4fvKa2xoKGRB4G+aOQvEcnZ9a3aloZOWkrHlVixYpbVc
0XyRhrLMP66xPcmCuaaajGY3Goq1uZxJWLOgbcL6RvNVGqpP6r6x9xQL7u8O
2NR8m4bydNSzEk6zwL3BhNbsRUNWSWLccrYssDklMtrkTUOjEWfXvsbW8Cl4
13SPhjxtDx5rOoPXV9t7pimUhgS27HRttWdBt1XGkaYwGnLk2Zd82IEF1SNu
yk0ReD9L71+XYaeuWUFviqahqYEbupGOLHiQ1jLaGEtDJL5ornlsT5XEjsZ4
GirvidOzPovjaaGY1fgYf/5JSbPQORbsH1qIaEymIer0LzN3bPnbVTcbU2mo
a0m9qxabM9VKv/EZDRk0SO+54MSCaSUplcYMGmo8vfvEG+wfn8ZEGrNoSDMy
tWWFMwuazcvpjTk0dP5ub6YB9pvf99gNz2mIQ2PJKQw766ZRZ0M+DcXx/j5d
hx29Sriy4SUNdVLF20kuLPBJ+pnVUEhD4s8erVbAvqjw4mFDEQ1pOETqWWGf
/HDTs6EEr+9ab5U3tu4xbfuG1zSkIzJYmYatOsB7tKGchl4ULFyoxN5yvVul
4S0NVVa85ejB5uN6JtrwjoY+3lguGcNeenRxRUMlDfWSO15Rz7NgcMfusfqP
OF7vkuTWYHe84+iq/0xDlLRQ3U3Yn4ybK+uraWh15THFrdgvf8Rn19fS0JNa
Bw4Z7KSr9pH19TQ0oqL8nyx28Ar5W/WNNPT7daLwv+fX4+fs65txPdc4f92M
7SD36Wh9C/4+1u9Dgtgmbx+o1rfh88Qf+4oTGxlaiNW305DLvKX5DF7vdtaW
lfUdNJRGdXBkYQu5j47VddGQJLITrMGm0V531fXQUFL41eQc7IkY3w91fTQ0
5ly+MwSbsc0gp46B43OT968Tdn2ZYFQdi4Yy0nWFtbGf9T93qPtJQ3xzJTJT
OD8PL103qPtFQ+u/u9vWYHtRD6jV/aEhj+30yARsC6nOlXUjNMS0E3LU+Pf8
Fk9xBpuGctmL9zmxn7Xut7s3TkPfuL8UduB6Gb/z/O3evzh/f8oe/aungA6f
yyWLNFR0Em0PxPX2fEepWPQyDf310j6sj93mO9JwmUxHShNksdXYYgonpHdy
0NGxgD37H+B6LgnY0fuUm47WLrus9cH13td/JtCHh47I1LAPe7AJlTjV07x0
FPN3fco0Pi+GLGqEsAAdzR35O+WAPaDRqf1wIx2FLaeoyeLzxh3OM3lxEx1R
uGSEv9mxQHFgf8pRUToKJF3nvIt9++Hz+ZWb6chWyw39O6/rhnzyvWToaLVn
0iUzfJ4195WetJajoyieEYFJfP5tY0c4NXfQUZdB3uYw7OcHTthPK9BRgZ9Y
ygcbFhxM3CHkqk5HKhU7qvhw/3A/2uljeQh/nhpprGLJgvg0HgV1XbxeOc73
+RYseDe3v2/dETp6p+IotA2bO/25WosBHW3cJPiW/wQL0pZ9hg+Z01GhZfim
VjMWtObvMFdxoKMkPX9fHdwPQ0/JReidpaPXt6Z1nxrh88Mj02DjhPfPrTZH
wa503ro/yJWOpNqqx98YsCBfUngn4yodtef/dVbQx/X8aCU98D4dKe/2NT+B
+/MhPfq+pAA6klX6blyF+zd1jrhVGERHre+WJlWwb5iTJvoe0JF001KNkDYL
zq2Z7lOKpaOb+hHu4/tZoO3/o6g3g47EZPNfEogFFFXW2HgWHYXWaI2HA+4f
//XLrcilowXf4r3i2Lv2d6cqvqAjvmBmwUEtFmxe+hJ6v5SOirjDrJ9o4vzn
NNU8KqOjYvauNC3seMsG4uUbOuphC9J68PxZU1p9o+c9HY3wtJ0SxSa5Vzgo
1NKRaMhls0/qeL5IvEnRrqejWjHtCndsjy+veywb6Sg9e9lMEntkR5HxvRY6
UuO/8vGBGu5nvQUhCW10VO3FvqCD7RD8ojq/nY7KAwoXSNgSu/OonzvoiFv/
8PFyVRb0/s7R6u6iow3VOy5ex46NzbrO7qEj31s3lNWwTXUyCjn66Yi3J9Oo
QoUFvH+fjgoxcTzyjdRIeJ7Wpz2Rkf+O4x/9ZOMAnr/+Jin2B/+jI13qryu+
23E/pyQlWwzQkdGBuJIBKdzf8h91X/hNR3v1uFVExVnw+lT8Or9BfF7SrV3V
BFnwPwz0Ekc=
          "]]}, Annotation[#, "Charting`Private`Tag$1322897#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
tOXvpeny2+hEXk0mRxdN71xsNX87ndg7qEQboc0U5T/IGtGJ0X7dP3boMZ15
J6WN6cTCK0b+KjrebI6U1G46CfDd7XQb3Rcwy158L53kpe3dmPVvvWJnyomZ
0Yn3RFDyv/XbkiX2g7mfTo50NC1sQd/upCvQDtHJkx2/x+bh+mszqSVCR+hk
NOWBtTqaozjtPmVJJxEHb743Ra81H60cPYbxm6erGYwuy+oM6DlDJwvnlAcz
MR8vVbVt6LLD9T0xJb4KvairmdPuQCfLImc27kafW8zTbXaiE9cXawOj0OJB
NV0N7nTi6G0oTHA/vI37/bD+Mq7H2v+yHNCW2eWGdZ50cmVNR3w0OrmrOL7K
h05sdzpPj6J37v9s8TOITuZ57PT7tz9VNigXPr9BJ++Z0rWjaHGpMB3fUDrx
p7z6sRb3c2mJtbzObcx3XzPDp+jUl/k3ZcLpJP2tbgkHfStIdbr7Lp2YJn7M
VxT619+muM8j6eRRx+PpRLTaElsz3yg6OawMqt1oKaGyPKuHdJL6UvutNtaX
yuxHiTJP6CQz/lJSJXr/hk3nfJ/TCVNE2n4x1i9NqQSWVRKdKL4YCrmMntMt
vkfnJZ083K7NqkbXvvy7vucVncR+bsq+g/Xw8BLPEat3dHIy4EzufKyXx6Sy
/XTy6ESnbukRe6zHW7qXDMrk08lktFT5H/SS0hu2PQV0Mti37KQx1nt+0GGj
xJ908v2CTfVa7C+2QmMSsr/ppDB8avcw9j8D1nGfnio60b9v9eEU9lPlnKLe
nzUYn7CJ15XoFreoKt8/dKK0VvRIEvZr+27t6B4unezOu++5Fc8Pu0pjZ5Tw
6UR6+5hzAnp1ssjVxEY6UVsaNfbv/NFlW3vUupVOZM6dKPyBLtMnFTrtdLKt
00pMCc9PaUuStsp20onUg/fNXmgnltuykh46EfjLPVknjef5HPb9xD46+SrX
MhiAXh+9Q8RvgE5mqpUdr0P375/brjNCJy5Da2+5ygigaoO3pewYnZAPsoc+
o99KNZf2jNNJm/rb3cKyArhU+j49cZpOLp67UBiCbrudoZlMYZBfOulev9DW
5uk5qTQGiXR5MCw5B+NT/6LwHZNB0t8HGAeisx4/N/koyiAJ5Y825KJVbZ5W
5cxgkJk9C/p60XNaYzjfJRmEN1NvxZ65eL5NibItkGKQVRZbsi+jp87f7yiW
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
nUkujntceWMhgP8BgUk7fQ==
          "]]}, Annotation[#, "Charting`Private`Tag$1322897#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ZwKw2+T5mTLKV/8BBGtjwg==
          "]]}, Annotation[#, "Charting`Private`Tag$1322897#9"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVl3c8le8bx890zEIq+SqlktFSRkZdd5KG0rAVKSWjrMpKkhEiRYmMSCij
wuEY55jHnueYyUiy98gWv+f3z/O83q/7ed33dV/X5xrPrlu2V+8QcDjcI+zx
/7ev3G+mj1YkFLm7GLmkNUKyWfWDMtUoUNhaGlLzrRFqQ6i7yTLRsL/TR1bs
ayPwT/t4eVNiwOJzaXR1ErauF/rxpOlHGNKoFpH91Ag6m5Rvom0J8GJkJEno
XSPcDvTqOR6QCir3nby43RpBDQJso7KzoLpoIKH3bCOcME/g3jFRAo82thHa
e9lQxf/O76lTNbjdZs9F+bBBeYddCl9oNehtg/TD3mxIlTlfH5lRDWZJCwWl
nmwI0ljblDNeDUzaSs34UzbouJnHTJnVALfw+otTrmzoGVSg3bxcCxwHbWqI
tmyYL2j7c0qqHoJVc3OIhmywqE3naNSoh8fsmJNJ+mxobw+QMr1dDxbTyZ8u
6bGB8Rds3WLqoZzU/eeDNhueSX9ZztzcANoGu2Y0tNjAocng3IRnwe8jHfZ5
p9gQTAsU8x5ngTKR937vITb0Dce2BPxjweqh/ZuiDrLh2PasgDd8bOBRyKzX
P4DZ59W1EIe9cyR+fW+RZsPhKwdZxffZcP6Ex67RvWyoH23wWB9ng8zBVEN7
UTZw79rU6zrRCOXfLRgPuNngHfA+3n6yGRzkQydkBlkQ20N0v7vWDApBmXX/
DbCALm+jb8zXAqr2l+K4+1kw80uN+5xMC4iFRgj397LgptyY7c67LaDL3Rn9
spsFJ7pOqDR0t4Deq4UPTS0sWDrYx95f3wp55KfjUqUsEPLWShHvaoXtTfkj
AkwWHG7P8RYea4WCHXfMlotZYOH1UpHE3Qa+1ozk2kIWtLYpRHecboPjzkz+
R3QWZHr4W7zIb4O9wupuPRkssGk8uD6Y+gP0vQU1PsWxYK8OerIj/wfs+Rt4
LewjCzpbrqzo1P0ATU1jp6BYFpxrf7hQPP4DKBIBG30+sGBPT95k5MF2eOx8
O+RVBAt+jmv0XEprh1LlGNn1EBZocN0ozqb+BHV3P9XzPiz498IOJpg/wWrt
/byzN2YPr2f+nuaf8CitYvmzFwt28SfkBv/9CZ3l5xw5PLG4bRlNt5bvAMMT
Z6tK3FmQsccpTiy7A2TM6LpSzizYgV55+eZ1wl3bxIyTViw4Nihw2aG6E95/
uZ97zZIF2kFvRY1/dsKRRaXSBxYs8Ot8n3VkuRMiDbMcIs1ZMO0cP9il1AXp
B+qKKm6xoDQ9V1MutwtufCRGBBqxoNtAVVisqgueKdRPOhpi8Vgv6ONq74Jo
y838JgYsOKhV+uTXYhdIR1yuFtdjQdhI/fcXx7qh/LZSuc8VFljt7tv0O7sb
Xo8REz+fYYF3tXlPTUU3xJb9Hb6mwYIY++FUWls3JKrY+PCeZkFz4cTpwIVu
sHVf22+mxoLj15ecFBV/wadfjK4ZVRbwh27ofEn7Bew93Rrhsiy45iV6Ndqo
ByiyKC5dmAW1g5zVXLd6IPvIeMqerZieLsyddLTsATWtoMy3m1mwc3O97CXn
HtCtdo62FmRBX+JTAfy7HhDswf2Y42HBvepe1m12D1TvIcZL/GsAd4GkS/vP
/oYx18MGXcwGiIuRv0iX74XYKODgOtMAFy7JdY0f6wMXLqqEi1g9TBiJ5dqj
PpjY4M3W/g/Lc3Pu0LkzfcDLKd1xZGs9tD7pufBPrw8sBGU6iRvr4WZqIIP3
Ebau1ZAwsVYHjlz9kTLpfTCJMuULftVBDDPUyFKqH5Q/Xu3YFV8Hag0eCuOH
+wH/d3z2cWwd9P20FrQ/1g/HP35PaouqA+mZk9XOZ/qhZW5b0JvQOsjcOaHk
d6cf0p2IQlt966Dyica2zx/7wWHjxBDFqg5mFBfa+rYNwCe7C40OB+tAo1Wk
Q23XAKgPdK5FSddB5MMT3bGSA4DzfxRfJFEH6uk+fdcVB2DlkVjc3x11ECot
NN2sMwA/d1w8KbCxDqsvstxlrwbgY5B6P/9ELbgTrFUTyIOwfdZG5U9iLfDU
dcfemR6ElY2tvGY8tZCK15s3WxqEe0S7MW6OWtBSqNO8hR8Chy14PSquFkJi
6PMmAkOgLd/5dNN8DYg4hF8wkB0CCnmtWPx3DUhvvbp43n4IfBcerj/NqYFa
zaqL51yGoCjP8Jk/tQZsPNCnM8+GwKv63Zv332ogY/iglnrwEIgkVTTUx9eA
MoMn/nj6EPiVRyVHBtfA+Ztllw5PDwHPJEWj5l4NjIWqJhxcGoKS0QxZfYsa
CKqmLu/HD8Pi+X73UazONx6NS5ASGIZsPW3pA9dqwIjj6Yq47DDoyrGXt56v
AcuUY5832w9DuJL47jCpGvCbS1lbnhqG7VZL/G4T1bBBpf6O3eIw8Ny5+k5p
tBreekzV9q8Pw2vXUqXVwWqI5ZGPZG0YAfNXTu2vf1dD9q4CxcT9I3Au29xn
urkaBi6y7K5YjIDEvi1VdHo1qCf+7f38awRcf8DEP79qwOkfr9CpH4UjEzqp
34SrofkI1cOqdRTsTwjutReqhs8bpJQ9ukeBhzLkeIC/GrTKhb6mTIwCV0Lk
rbeUaoiSHwshbBwDn3AFK7H5KlAUijRJuzQG0yJxpy40VoENe3GOhz0Gcg3F
fpYvqkDtq833Xe1jcGuzk9eyTxVs9u+zUPw9BrpBjZeDn1UBA7E6bk2Pwcap
CWeWcxVwpX0uzhUYh5wjn41D71ZBfJDey7tXx0Gvd3jgmEYVdGhm7mE2jYPq
Lb5ST0oVmObdIlM7xoGz4NaGRmIVDEgKDMT9GYcqTzspCVwVTJFtPnvOjsN7
l98CPYuVQCraJ622aQLMr0elhY9UwkG5yEPFVyegsKRwkbOhEqhx5/jTjSag
/oeZ1teaSjgmsDgVe2sCpIRr9fQqK+HUhE6Gh8MElDlq3s4trgSDLxvkUcgE
rLqt3G3JrARPUU/lQvYEoE37Si5GVQIl4PB/39snYHPV53aD95UQuNS98uH3
BPTIT3RavquEsFaVfPdpjLWE7aNfV0Lq6zk4ITAJ4xNCyVd9KqGVZHk6//Ik
3BAw1Bu1rQTp8UuX6Q2T8Glit9vE2Up4cy9JTbxtEjxf5w6Wa1TC6ihB3r97
EvDyq8px6pXQMJK1TX98EgzfrlvfRJWg/PelvQt5CrZkr4WsKVZC9/Ss8ubd
U/A5WlfVbF8lSI4X1l0wmYLms0aFdhyVQP+jP0tvngKPPuusVGYFvLP5Flr4
Ywomim7QdIsrwGGJdIzZOQXmrkbTqwUVILkxw626bwqGhy93nc7Dvlfm5Wj/
OwUkkxLporQKsAsuEp4XmoZza6+OakVXgARInTisOw3MCB5N84cVQKh+2nPU
cBrGa2d1Cu0roEun1VPReBq2mOzyE7KtgLdWXhUn7kyDILfXM6plBeDfdV2+
+GgaBmtKgkpNKqBzLNjMKnQaHhzX+610tgJCIpb94lumQSl0YHlmawX8+iqR
adY+DceOmCX/E6qA/cVXf4l3TQNdTu8NSbACKgaT5T/2TcOF2GvPCbwVsCp3
rTd6dhpIYV5G6evlcLeBrhImMAPvCuz/jfeXgyrpyYT/xRnYf/GgNPl7OQze
X9e2LZuBXbJUP7Nj5XD9gu4X96oZ2DcoIXNcrhxY0imrL+tmQDlCy2nr4XLI
GdRLSG2ZAb88cd36feXgd/Pb/HD/DIRoCdVqbC0HSV3j97c5ZsHbq/lAwXwZ
WKnSuw3PzMIlgY2nt+SVQbeIwFFLzVmw3/3E6gmtDK4umfs6X8LWT14wHsko
A2Wa4OEw/Vm4urBU1pJSBjyHrZ4138W+f/Bp02x0GaTu3rbnkt8svJl24FXx
KoMJbidL9apZCJcOtzh3pQzoRyzZqG4WHLi6dmprlYGf0TWl4+xZMJGd7DTW
LAPxZOBSaJ+F9cCmNsfTZaB3jjNp3/AsZP+UPJ2nVAYFvu+HuLn+gtOX98Fv
xMsgiMS4yz77F+qub0m++7cUDq7hzE0q/8KHXAeR6bBSuP+tUm9L7V/Y7Lh2
8ExoKaSavD5T3/AXOhvvqkWHlIJ0oZjUiba/IKf8NEL9ZSlIeJwY2z7wFxin
Kt56eJbCDoKbQxdxDnoutO+tulcKxhmnzEIpcxD3tj1lo1UpRN3i0bnIMwdf
s836de+WgggzQj5fcA4mdP+T7L1ZClu8cxejds3BnSdRUzv0S4GPY8H9OszB
tXtBbvpqpXCBVmArdGoOPq1QZ7DpCF6YPzet1ZiDxW29AVrHS4GzYrOaqtYc
hMZcV9c7VgokPzmyqPEcFDt+7ow9WAqrXA4BHa5zkL2jgUoTLQWVPCW3N+5z
kJs7DR9ESsHVCn9f03MOcrxxP14Kl8Ji9Wstuv8cSH8j432ESuFvwHeByPA5
iJ6W+MPmLYUxvvEwIxq2biuh/HCNCVf9u9Nv5c3Bn7eqyu9WmZBDYtVYFcxB
As/S1vxlJnitZKy7ls9BMJXbctsCE0SGne9Gts6BLfrGyzvFhLOlJMXO+TkQ
nT1ES+1lQryraKux4jwUqRjIhlUxgXueb+qOyjyk919yJVUywc5+ncsG5uE/
AeU623ImqFj0Hnc/Mw9PZC/kICYTGnW/JHzQn4cNp/xjahlMwMnKPfrlNA96
F45FPv3OhOuDmkI3c+ahJlm01iCECXKjgtl7GPNgtr2Z0+81E3gn2w2HCudh
/T13GDWICfT5uzG2FfNA0O7/tv4Cs5/DW9q9dR5MX+nL3fNiwo89DBT5dx7i
pfLx0Q+YoH1r//2Wwwuw2HgwL/QqE8538ZafS1qAvT3vDX9tZIKrtJ3bcuoC
hF+uaa/lY0KKU9ORlLQFMPWtU8jlwc4XjIjhzVmAjeYTdkEUJjRo7HNpKF+A
Roq11+71EtBJO7lft28BvOpkZKvHS8DEyzHEVGwR3Pf9fLZSWQL2Uj0mTqGL
0ORLDGl6VALnQULte+gSLL599Li7uBiEevySrd8vwQFfySc3Couhy2NUUDJ6
CXqFv7X9YhSDXUnan9j4JfC3rIn5mV0MoadVfEKoS/DuOte9nK/F0KN5ufIR
ewkYktVJW94Xg6OBq5Yq3zK8kvJ9Xm1TDGipk7bIvwwSVSPRYveKgSsCxLKE
luFlnD3PQ8tiiOogTR0QXYYhq39jIreLodjkVbCYzDLEu99dumNYDLx34psJ
55bBRFpHXUa9GD7a1xtVeS9DDY9+WptIMYR0GY21+C2DH++r25LCxeB5bvBJ
b+Ay9FrW2T/ZXAy3duE+rrxdBsNt0U5y/MUgzpYdPJCwDGpRO2+2kIvh0+HQ
ByFly8Bv8rBsfLoIEiavBV7jWAGFO7ls07oiSLo/nD/uuwKDPDHCvd5FMCMu
aDYYsAI6pjvK/TyLQPWHMufvVyuwaPOz+oBHEdSrBV5tDluBR7aw78Fj7Put
hwbzPq9AncTXP2P2RaBc8pDfr2IF/r1cvPDJpAiqt+DMxCmroJkwMVqkUASb
aiU5RXlWIXfA2ALJFcH1Z1e+bt64CsdyPzgxZYtgYjRugXPrKrik5T9u3l8E
gsWnAyclVkFFntArvrsIjKwDshgaqxDptVntEX8RjBZu4dR/vgpyhS6C9zsK
IfGfkALvi1WorQiZC20rhJsqm24Xv1wFtwGJ2oqmQmijbSySCV2F0cMX956r
LQTmV05nXPwqeKucH2XmF0Jk5PJgUvEq2KWEqyTGFYJe++LmG2WYPUHWhvYx
hSCwdeGUUNUqGMZXDWtEFYJvyGyMO2sVKN2OyvzvCuGB/5i+9q9V2HbakJvj
RSFoOnVXrK6uQjn2g/bsQSFwZHXOpeP+gXfh44pWu0Ionvm5+y7pH9CXln7J
2RSCok3bUzbPPxCuqM7ntiyE3XdYioki/8DzhuEpnhuFsHK15POlY//A7rrG
w3TNQkg5mOgb9+AfHLv2aaZNohBE7365svhwDdQVhhb43ArAbjFBNtd5DT6N
COBiXAqg1P+TgKvbGjgofZg57FQA1qkf2Ctea/C53cJI36EA8qbfXlkPWQOZ
LzvbUy0KwMDt2RWO9DV4Yl6idk+3AN4GG10RGl+DSGKO2NYDBcDD4L1y+M46
nBRWa5Bn5UPOu0T1bot1cJBmP+Sty4fb9uhY4L11eJQ1q9hdlQ8FEg/Fhh6s
Q81TotwDZj42r3SMx3iug69v9JItLR9azZNfbIxdh+w+X72VyHyIFThbOvFz
HcZOBDa+v5MPEdTiSD1JHGqxrqQdWGKA9/PdybrSOCQRwNjxco4BNoY+OTr7
cSjj9DbP8WkGnFw/23L1MA5t/ucxlDbCgKHzrA2XjuGQ601BadTJAPne7mdn
zuLQUGujuXshA1j8q3ePWeBQoOl44zZ/BuT9MXZUtMIhKYdy6W4fBsTTCr0V
7uHQazecf5InA5yue32Us8MhxTs2WTpuDNjxhbvjsDMOnbG+m7Roy4B7sE1L
yg+HyjrunjIyYADFRkFO5AsO5QhceNN2gAHSZCJlIQmH/PEREsEyDLgQ1dDe
lIJDwzE9VpelGBBSbfH05Xfsvo/7NH/vYYDovshqXDZ2/qpljaYoA470rJsO
luEQwcU1QIWXAbpOtUdLK3CoSSfxkjY3A5w3vOf4WIVD2pcC0uw4GZCveiTV
qA6HigvO8TNIDDj7/vZCXTMOPUiP2h/4jw7GV6teZv7BoW/CHECZooPHcKhp
cD8O3WlYkLWeoEOcx62jNoM4RLlhlNk0Roehbys/9o3iUMD+YzcyhungwHNw
T+QMDq2f3j4W/4cOfqUhec/weGRwnVvd8AcdUq7deGlCxKMAY75b5DY61M/I
mKqQ8SjrlHIcrYUOm3aVkec48Sh//VGrZBMdPjxZuGzBj0f/hVv2X6ynA1Xh
+qCWGB69vlI35lJKBytqfr32LjxqzpDW38Skw87DYjSD3XiUufaWkVRMh0Cp
Xu9b+/BIiSBdV19Ah9uiFuKOh7D9BjtsCbl0ECI8NI4GPLpUelhe7isdHtUF
NI3ewKPTF0ZciO/osP/8eN7UTTyK8sX5Br2lQ2+5VtycGR7ty/IYFH5DB60i
Afv1u3hkuVZw8MBrOkhQwzZsssMjn6p3yddf0KE1/NM5ZQ88Sg/2vLTsjtmz
mSwLnngk7HO4I+QJHdRCzIXVvTH/EFwDDrjR4VuA1OBFPzx64Dy33dqFDs/d
v3vffI1HXzadTRF4SAfVFf575iF4ZFXz1qDcgQ4zTg7a1m/xyCMcuDzs6WBi
Ly/+KByPHK0zrIi2dFC8TS/0i8UjW03/VS0rzL4EX2vrODwSo4k8VLekw5YB
7a1a8XgU0dizA1nQ4e/dMZtNX/Doq4uFjKY5Hf58yRGZT8Kj5T+93Nfu0KFx
2Lv8RwoeHbXx2+1wmw5p1tt3fPiOR0Yf/xug3aJDTOpwlUc6HkkrGo323aRD
0HjWIzMqHn2oejgugvE9W606yWw82kU194+5QYdraSIuPLl49Hg63XjChA7n
pwf2TOThkSgP5dtpjCUfPHWjFmDx5k54x2NMh62ZmpLvivBIMeGkiPN1OnDM
bW12LsEjFeJWztFrdOhzTJM5UY5H1VqP/fqM6NCU7da2sxKPes5cOm+Nccni
WS9iNR5pUioaFw3pEOv6+2dlHR7FPTniJonxK/rX5ykNmB4nvQurDejgvupy
JIiNR0WJ8zwPMb5/XKPbrgmPcozNrfdgfN1d8IV2Cx65RSgMdujTQbOwW16h
DY9Ge6v8IjBWxqX8Fm7HI6/SnYamGEuddHq58hOP6mjBNw5gLOx5Sqm7E48Y
U+RPeIwpzI39Rd14dF997VGXHh3miZ2vP/Vg8a+0iSrBuF/9i+rzXjwqCHpn
lY5xs8/DIYs+POJiG7QkYcwsR281B/AIZZqzUzDOoPChg0N41J3udzUb449n
20f5R/BocpvOhVqMX/snhM2OYvpRNckYwfhptf2p1nEs/j5qzoKYPTY8JyZz
JvHIgbQp+BTGxhe4IyOnMXvbOSafYHzhZauG+yx2vxPnvIsxVqmPmzGdwyOm
NfnUBsw/0httP5xawKMKq/DttzEWuaxyXmIJ89coJwcTY65gyjznCrZ/U924
NOb/RXbTx9FVLJ47jMsjMR4SjL1Yv4ZHJtEfgjdj8St/eyzhDYGAQh383u3C
4p3VQrriSCKg/Z25P9Ixjt/CXjXgIKB4B++as5g+PMMtdXZwE9AWzqrvLzD9
2LfL4/C8BER8ujlMHtOXqQgh9Q8fAZn4ZW4bxPhEVAQxSYCAXpUatxub0mE5
pibj6DYC+tMd8uS9GR3ekc2HeP/D1u8e3fQQ07+sNW7HgCgBUYrXO3Sw/LBQ
kPcP30lAN63NwyTvYvlf++HGv30EdP6iRvBua6w+HlEKbZUiII1WH0mFe3Tg
C2+q/i6D8cmjNy7fp4O6GafCrUMEJDHJOxKB5W/Gkj1vhQIB2XDekPDG8l/r
Bq9a7DEC8k7q2dbwiA7DpYlOLsoEVJj24/5OJ6z+ve7olTlBQKMXmhJbsPoR
JHE69/VpAuI4w/nM9ylWL7WFzY10CEjmZ6ojbyCWP7kZkUf1MP/1B9tnvcT0
seMim9eAgBxtrymYvaLDj+FnqoXXCGjjnibP2hA6aGDz8x4zAmLELgg3vqeD
+NeCwnF7AiK821MKX+hQIGg4V/6AgHxZ3du4k+lg6DwrHfuIgEru/VtoTMH0
dkry3VUXAvrZVPftxnc6rLUH38v2IKBfwn++36TRIQL2x732JCBe850pojl0
kE8ob7P0JiBVc80TLVi9vme3oibqR0BnLt4sO5FPh58cd7Y9e0VAipUHiSVY
/ee6+tbMM5iAZHNsl6zL6HAsmvnV6w0BPZjGfeCuwOJ3VFzteRgBieFkSvdW
06HM/Uqg73sCGnFoORlXg9W/Ko9Wv0jMPxT3K5vq6HDF9JdVQAwB8Z3GbW5q
wPphyoaswI8EFHk+k72LjdXr+ePrLz8RkOidhp13GunA+zLqzevPBGSemvOk
qhnLhx81XcFJ2H35kiNHsP5mtXtl35sUAorQ3xG73kqHylxDRuh3LH4LVv/N
Yf1xgeTPEZaO6ceGN7y5HavXl3Muh1MJ6Lv8kdWPP+mgGzkY8T6LgIrMFPWM
O+jgPbClPyKbgPT1z9I5OrH+KKtxKCqXgP5uiD3+AeNet0cu0XQCqr3Hmtjd
RQf+ynjmh3wC+rbxbX8YxrCpmS+2kIA6XH4rLWNsY0I0+FhMQKaVN/Ca3XSI
SjoSF8ckIK8d4tovMK75e3PsUxkBSWuUnc/BeBmCFRIqCMh62BzfgrFUQJFH
YhUBeew1utmDsUHrZPXnGgJaf/C45CfGvrvENifVEZB/sbxjKca0e1o3khsI
qIJVdPoDxv3ZT5JS2AS0EK533wJjIeLX2dQmTJ/cX/+KY3xKq/P4txYsn15F
9dZh9jq85/H73kZABRatxy0x/tin3JjWTkD3zvjyz2H3Zx2yEs3oIKDyIzbW
9hivub43p3YRkNITR6NuzH8HyivTMn9h+cbQH1bB+LrA4nLWb8y+aE3JF5i/
X1zfdzr7D6bHgav7q7B45H7We5XTT0B7Yjk5lrB4Dc34tOcOEpBV/lrZNoy3
nsjaTR8moNLlGx4y2Hyj4d93nzFKQJXiyZoHsXjHi50iFE5i+391M+DE9NFk
5XChaBqLF80/YBjTD4H28V3xLAF1W6jQKzB9mV7AhLpAQOmOIVdcMf2JuuRr
V60T0IzgESsqpt83jYoJTRuJSDDQWsqwCIvHbzY1Q4CIXjfpBPMX0uHWtHVJ
8CYiYvNt4SvF8uUIf+yvS1uJaNNZ+vMddKyfX+QUqd1BRG+kOC0isrB+ZRwn
mbKTiCjh40L7M7F5756q4gtxIlrwCuTNycD8HWCnc1aCiDRiSkQKsPwVqPoR
VHqAiHzWxuLdk+jg/MMh+tMh7Pwzp9S7P9OhZ5A31VOWiHjS9/5TSMTmBY6T
VUgeO/9DJ2qMo8Nl9SRivioR7bUuHHkfifXfQhfnLE0imlgs3XsmAOt/9Zt8
314kIumKACqfPzbfdH8NfXCJiL7bGoVWPafDwX+/M2S1iegC9YzkLk9snlQ+
P/7ViIiUwj6m3XTG6itN5FaiJWavcuOZL1j9Dkila4b5EtGDBBylTx6brz6O
2HzwJ6LS4mLDrCNYv3i3LSQhgIj4mef2+RzC7uPh9IP6iojOH8/i3ClFB3Od
o3dYYURUck3rz0lROqDVZHeuL5i9m9Z++hOw+qEZkf64kohEFz9smW7Ig0lU
1exZTURPP4z11NfmwYj84oJ/LRGbTx/v+1qVB7/F9E6Es4hIn/mbacXMg/pZ
gZrMH5j/XR4yB2l58CXSv298iIiy6Asj09F5cH3UeaspFwlJ7yq+UWedBySy
Y6kxDwld1zzVHWCRB6k7Hthf4yMhPqbuM3QnD1au3K/REyChPTZzIoEmeRCR
c/PpxW0kRBsTs0m9nAc/fM4PKkuRkBDc/EU+mgceMWfeHpMhobT7o+Qdh/JA
Mlf9pMIBbH9pPgNpmTxwGjsRKStLQkG/tZLFdufBFu2jlySVSOhhvdNtd8E8
0N4pmr35HAnpXq7K2jWZC8tK225v0iShXVyaiQEjuRCnvUVA4CIJia89TR7v
z4WZ5/zWvFdI6ERMGIrozIXX4yQxoiEJ7aQ8Kg6ryoX6vPHnUxYklG4Tz5SL
y4XzuoV6NX4k9OI/W2l9rVyQObqvMvEFCfkud3ehc7nAK/BKyTOQhJQ+K2zb
q54LdbUmokqvSUhvJsivSykX09va78QwEkJafSz+vbmge/T4fc9EEkqR+X3l
zXIOmArQvZRKSSiS7/rxi59y4OSk+JxQOQl9lducWhWdA+J1L8ynKkiopOCR
gXp4DvzxMzr3uYaE2mSM7sm9zAFz3PKGzU0kdCD9rDfeKQesJ49FTP0moakP
eVwm53PAsY6W9nkd4yUlq7CpbBh5TVVIwZPR2obj3n4j2WCik8b4RiQjuzMl
lx/3ZYNGR1JlFoWMbpRd1jX/kQ1bhqN6mBvJ6EtG2YR2UTZkk7z4e8TIWH96
fqAzOBv2Vz5992cXGe13/SSqFZgNsQFuooO7ycjxCg+z/nk2+Ak6Sk7sI6OB
Xh3L1cfZYLDTEq0eIqNk3eY2rrvZsKhyyU4YkdGp5HKOrSgb7q1rzv+nRkbO
Duv53irZ0FNy1k1MnYz6W+/7EBWzofKcmp/EWTIyJl4+IXcwG97ry8fKXSaj
9E2neW5tzwblB/+xLpuS0VBEyT/fNRp8UxDW07lFRrlVSh3dyzQQXxbq1L9N
RvvWK56jBRpwP9swZGJBRlZtrq/3TNHgZxAed9+OjLy4uU3temnwOHnwkL8H
GalFle/irqKB5JFLrlaeZGSDHxJVLadBay6tVNObjDx+3vdzZNLgcJWP4QY/
MqJGx3SRCmjQN7jb680rMtpubv/Hl0qDC3tNW6M/kFGiKwO3M5YGS6kVO5/G
ktHSkYCpxmgaJModsjaNI6Oy0wyxwEga4NTX1sUTySj216KFQBgNMm9FSX35
SkYKamJxFkE02B77wy2DQUZXXmP6cadB9T5U8aaAjHwPjQnddqOB8/fPAo+K
sPX0eC13Vxo0FjgmKpaS0XL45zaGIw2edwmxGDXYfRT66TdtaTAhcmV3xU8y
it7zbIvGTRoUhlZVdSySUd6F9ypInQbCauvR1GUyip8WGryiRgOHCTmHgFUy
2kMcmDBBNJA4EyuiguNAxuLE3daqNAhcdLSOoHCg8wcUZ4zkaGBwbQ+f4RYO
NDtuVZy0mwZTO59ebj3KgV73HJuaxNHgfF3mnm/yHKjF4dc0ey0LPrmMLPoo
ciCqBpVIW80CvUbdj/IqHGhy2nWr92IWMLz2z7xV40BSPn6KClNZ4DfQ/kb7
Cgda/yy8J+5XFvSGbLSQ0eZAko3Cqf5dWaACp1WJuhwoRsmdatuRBRNhaX0Z
Bhxopf2/XYptWaBzzlde0JQDuVw//DWjPgt2psq1sWw40IGwFdvN+VnAd2K9
kGXHgeKv9TKD8rJguaHqC8uBA43sYtxZy86C5lkTV5YjBzodXOFVlJEFvir+
21nuHCjLrZ+H9Rk7r7rLrCGIA/GOEruVXmdB/vDzqbpvHOhuU3/pwPUsMNrX
zlUzwYECEnS3Bq9lQlPaQX0FcwpymXP2fH4lE4Ju7A/RtKCg1OEDvo8vZsL5
DdJ1plYUlJnHcdnyXCaUWO89FWBDQQ/uSM4cOpkJaRKih3ocKdj/e1GKzeFM
CIziorzwpaB/hzVVBTZkwllNilqMPwUtyz3MpHNlAnGZ9CQzgIK83Dlv3yFn
gqs+brb7FQUlLV2ezV6lgqXgQvfRcApq35b79tYoFTT8+mhdX7D9z0V8ia+i
AkGxd3ommYK2/5ukvS2jQn7/r/2cXyloQfxqflAxFeROdcQdSaegsA8Gbz/m
UmH3GjvIN5eC5sdja88mU6E7taEqik5BG4/PRgYlUiHiWh0pI5+CrvU6qv6J
o4JgbqVrZzEFsfp0J8siqYB7WGguW01BlvmFxo5BVGCI53/UqKUgsRdcqjoB
VHBi53Veq8fsefFNQcOPChMHaVefN1LQBlT6zdyTCsld1JeRzRQUz+DTCn1K
BfPA9Mq0Vgq60nxW7ocbFbqGU090/KSgsatysxFOVAgPT3aZ6qSg21uF60Ue
UUHnzJdM8i8KunhXs3LegQr88wmTIr8pSJ70rcwT49r4T9KH/1DQX77qoI4H
VPDT/njndD8FNb/H9U86UuEUISbWaJCCSNxqOt8fU2EtLarDdpiCMvhkNbgx
+/JuRGzxGaUgduer+ml/KvwPxVj0GQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1322897#10"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        RowBox[{"0.4000000000000057`", "\[InvisibleApplication]", 
          RowBox[{"(", "s", ")"}]}], TraditionalForm], 
       FormBox[
        RowBox[{"q", "(", "rad", ")"}], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.026666666666666665`, 2.99}, {-1.5124975457841119`, 
      0.6367634671610745}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"q1\"", "\"q2\"", "\"q3\"", "\"q4\"", "\"q5\"", "\"q6\"", "\"q7\"", 
       "\"q8\"", "\"q9\"", "\"q10\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellOpen->False,
 CellChangeTimes->{3.7999306143494363`*^9, 3.7999306825402374`*^9, 
  3.799933441551406*^9, 3.799979706126646*^9, 3.799980541793641*^9, 
  3.8000748573473797`*^9, 3.8000772020991964`*^9, 3.800079407941139*^9, 
  3.8000803191045856`*^9, 3.8000818324730663`*^9, 3.8002054533671336`*^9, 
  3.800205618399459*^9, 3.800208719073702*^9, 3.800209025615943*^9, 
  3.8002095070522327`*^9, 3.800255822945088*^9, 3.8002652512709656`*^9, 
  3.8004390640850873`*^9, 3.8004419091590805`*^9, 3.8020926296577616`*^9, 
  3.802093491209489*^9, 3.8020944229791536`*^9, 3.8020950403898673`*^9, 
  3.802095637573081*^9, 3.8020968612008476`*^9, 3.802099495270261*^9, 
  3.802104250960839*^9, 3.8021094751412044`*^9, 3.802146788696628*^9, 
  3.8021473333079166`*^9, 3.8021478856078844`*^9, 3.8021555915978765`*^9, 
  3.8021567927761946`*^9, 3.8021576173568554`*^9, 3.802158286021389*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hand error", "Subsubsection",
 CellChangeTimes->{{3.7584440538903522`*^9, 3.7584440704590893`*^9}, {
   3.758517630794376*^9, 3.758517630794376*^9}, 3.7585180154418917`*^9, {
   3.799932927054405*^9, 3.7999329335715075`*^9}, 3.8002643202248845`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ErrPOSsolr", "[", "time_", "]"}], " ", "=", " ", 
   RowBox[{"ePr", "[", 
    RowBox[{"time", ",", " ", 
     RowBox[{"qsolr", "[", "time", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6817951909469123`*^9, 3.6817951918969135`*^9}, {
   3.681795261985012*^9, 3.681795262225013*^9}, {3.7252759958163743`*^9, 
   3.725276022920084*^9}, 3.758517595825554*^9, {3.758517630796379*^9, 
   3.758517630796379*^9}, {3.799932939497407*^9, 3.799932993707328*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ErrPOSsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"ErrPOSsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"ErrPOSsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"time", ",", " ", 
     RowBox[{"t0", "+", "0.01"}], ",", " ", 
     RowBox[{"tend", "-", "0.01"}]}], "}"}], ",", " ", 
   RowBox[{"PlotStyle", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", " ", "Blue", ",", " ", "Green"}], "}"}]}], ",", 
   " ", 
   RowBox[{"ImageSize", " ", "->", " ", "Large"}], ",", " ", 
   RowBox[{"PlotRange", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"tend", "-", 
         RowBox[{"2", "/", "60"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.001"}], ",", "0.001"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"TargetUnits", " ", "->", " ", 
    RowBox[{"{", " ", 
     RowBox[{"\"\<Seconds\>\"", ",", " ", "\"\<Meters\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"AxesLabel", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "[", "s", "]"}], ",", " ", 
      RowBox[{"ep", "[", "m", "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<ep(x)\>\"", ",", " ", "\"\<ep(y)\>\"", ",", " ", "\"\<ep(z)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6817943475327263`*^9, 3.681794355063737*^9}, {
   3.681794477554909*^9, 3.681794504248947*^9}, {3.681795265236017*^9, 
   3.681795270536024*^9}, {3.682355352744567*^9, 3.6823554355027122`*^9}, {
   3.682355485859601*^9, 3.682355492895213*^9}, {3.682355556293724*^9, 
   3.6823555599285307`*^9}, {3.682356089660661*^9, 3.682356095463872*^9}, {
   3.725271692932171*^9, 3.7252717149928355`*^9}, {3.7252760390439005`*^9, 
   3.725276044393941*^9}, 3.758517595825554*^9, {3.758517630798382*^9, 
   3.7585176307993937`*^9}, {3.7999329990613146`*^9, 3.799933019036232*^9}, {
   3.799934030578672*^9, 3.79993404331349*^9}, {3.802323053785974*^9, 
   3.802323135426713*^9}, {3.802323226856995*^9, 3.8023232370627527`*^9}, 
   3.802323278998721*^9, {3.802323446676535*^9, 3.8023235621820383`*^9}, {
   3.8023236274938416`*^9, 3.802323650028098*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJwc23c81d8bAHAzm2uG7L1TWa3PEZmVpJJS0pIySyRZGZFKUkrL7BtKQpTC
PUYimWUWQkIZ2Svjd57fX9/X+/U8z3mec87H7V7XV/a4h80pJgYGhl+cDAzw
3widnvJwq0eIgcFQIKkolXp+otqrYstj4m7Vj82hVE3sa3lW9SfEnmJ1px/S
R0sff90ulkDMEnlxZw6dNh4eGsaWSBz51e9WMX29jMeGD9PgP70vcyroz5Uz
xxnPJxEfz047WkvfjJM+yf4Gp5/x6v9Cr7GNS97mmEy8j8ZzppF+ZPTapWOt
4JKpuB/V9NHwwD1XrFKIpWhrNn+gB0l6qSZXgIPVsl4U02n5pxlLt6QSK9zf
bJxPT955uL37NbigqHRbFn19n3UOg/pT4oaZd/uf0csvm1yTSfm/OxbvpND3
CW46Zij2H7GovVZdCv3Xc62NjjFgmbq/zc/oPkby/MFszyD+p9o/i872bfXv
xEDwFmHez3n0+HPcpXganPfyz3IhXZWD8cEP1zRihsKjJ8vo75OmPVd+gmOq
065X0ncY/DGXtk8nTorOcq2ld9R3yaAv4E1jjIxf6G6nv845WGQQ399yL6WZ
vrxc2RBYAt7Wdf1vM/3WvaL0BP3nxO6dtup1dBmtnGB61v/dLCRcRs+p+M+u
S/EFnC+Xjm0W3ejIQ+3lx2CGzytMkdTXqWh2KaFM4r4bYV651Mkbod1br4Np
BngnpqblfQuOML0kru760PSBulroGhNwCexIW/W1ilq995jzkzFw4G6NrM9U
+p/9hsWns4inmvO8aqmNIZainV1gbiFv7TqqWgyNLe5/BecZYfi3lrLP2VAl
UQsWTx0vrKF8FISspeSyie++8E6upihP3i1ZR8DPsWNGJcVWxK5CPQC75vzq
LKca2JiF6prAUwe4Y+hU/N6llSO0HOIb5UWNrynHxNmhkR3gvrQbfhWU6tB4
a0AE+IKFZXE9NaE3XM5TDuZIZERN1PuQ/ldPlsGiKRuGW6mQuu5HmptyieWF
Ng1+o3aIf48o9gYPbhykOikhp2avXTlg7+7OqS6qI6f+aOcwuHHBhKOberr0
aYebymviUEPv3d2Um8UH/aUTxMG32Ft2dVN6cXT5m4kQd7ND7N3UcncBn+R3
sODne6w/qI8ar/9liuTB/EdkQzupW74vB7bYgLP1JWK+U3Yf0r7W3ARv2mGp
1U7J0FLw4U/gt6tsj7dQg/aPXwyz5MN8r93WfaVy0u7d9zcEG2pnoHrKbzIm
lNsffFDd5GYjZYSuezx+C+aQvtTRTF3cKjeqNQdmavz8qJ3K3PzOtdTgDbEO
4vHqoHo2Wg/tvQR+fPGmWxclYjBwpv8deGXjjrgf1A69wEHfBXChV8XUDypY
R/g01+a38PpQdfPeDypvfeavJ5fBNfFZoV3Ub23jk9pF4PZNL8s7KKm133rL
FsEcMeeOfqNsNM8d27+1gLhUovFoKxWhzt49EAAu7nT8/JUqUk108KODfZnf
7KmnxpX1OrlXwJy7bFcqKCWlWvtE9I5Y41H97reUvcLJb+uCwQxBCkdtqRi5
f3YfSsCGviOid6kKmdhWW8b3xGN5HwveUQtSqra/t4Fjft3RqKDWSpY0XQ4B
566rivpMnVxzYC9vOXj8vjdbA/VAbLQxibmQ2HSfuXMjVbc63HrDdvCho5cm
GilmEYn6ijDw4puaV42UgdDrXXYVYG/xVc8bKDcBy5o/rEXw8yz/pbmWSqH1
WAaYgps2us9VUa28vp/4IsDB2jk1ZRQ3D595SiV4+ynLsjfUNq5nH3XYi2H+
I7Zy9ygfjq0mlebgtnMXR17Qn7M1lR+8Bs5djv5aSv/B6mI0/AmcRXtXUEsX
YmEqDeSkE/t9vy1TSzdneoD4d4C3nzzwtZIewKBNT70O7qgwUPlAz13+uEWv
BizXIM9cRh9YPFJYxY2JM6cnLUvpEv+mNtrvAgd6KoyW0vfMXy8YuQmWMEzq
LKdfnZXTD64DcwYmcFTSuxY6Dl1jK4HXn7TYY5/pc5dUHn5RBjev9T3bQBeY
92pfYw6+dJbhxVe6pi8WPeUMft3yyK2Vbj7LaZcVCZ7kf/XiO/24j+392XTi
4NTtFmu76f7TyS2Gn8CWL3JwL/3+hRHhqN/gPOmo0F/03EmD/V85Skl9bZmx
3yC95nzYXQk14uBNAt0/++n94/VfT1mCLUMoyz46w7k1gq/OQv6HsV88vXTx
MSebuSiIh8l5qXXTdT1yb297AXGeclf9Trr16FJD1Gfw10sr77/Rz7pZ0JqG
wDN3Ilrb6GHDd3dLcpcRfz7IeLWVnujSHe2kAd5/OBW30N//Ua97tRMcHJIc
0EJvOnORZ94V7GZg+66FPjpYttPoJlhSf8K1lc7hzHvj+ktwzVRdbBtdYeDg
56ZacMOxC4rf6JTTf5xSo2BFRh65DvqgypMYY+5y4gVWPvsueuzQXZEzasTB
QpE5Pt30LVk3HkebQ7zi/h2rTvqAZ5hcnhNY3/NYZCs9doN/ensYOOJBj+0X
+pYZL62VFHDe7vdOn+n9BS55CqXgpqy/WuX0mMsnNln+AN9tOzT1lr6Jsi/x
WAIbrLoy8Yzex7DXNG7NB/h59VzKPEuPLreseb8RHN/wRTiJMrhqZNN94P9m
3eCTRfWab2pj9QH7z0TX5VE3uNY7qN8F+3ZktxVQenWqfda54EV3TrdCqidG
9qxPA1iiS+9JEXVjr9jYo9H/1+e5Xyyi9ET4fUq5K4irAgs5CqnuNvbFfjWw
v63y8QIq6hFDCLcF2LynKDqP0nGYY1t/GpzNfrMdU10yYzcPhIPTgzRRNRX5
c0AwIBX8K1mkqpFa/+zHg5RScIHI+HQz1eHcKl31A0w3Cshqp66q1/83sgT2
MRec7aC0Rz+qC0p8JLa+ltn0g/qeTc8x2ARuyaIp9VBXvd7oO9iBdxYzr+ul
tPWyikN9wEbno3h+Ut/m/jPOuAt+Xptc/JMKK3zyqS6XOJixX8m4j9IKjNs9
1QBumZpJ7KPaDG82i/0Fix3429xHhTCH2yOeSmIv0er+Pkrjo3/PSXVihqKD
zV/7qJbIC6ejLCA+VfaO1AfvcB15dRr8vOz4jj5KjfekV3M4WOT9ZNtPqrnB
fn4hFeo37u/b9ZMKvrM3SKYM4pnZ7Jm9lJrtDlbTbvCh0e1TPVSTqPF1l2XI
93JIV+6hAr9v4r8tUQU/X/qWZt2USsL6+282gcfKLNK7qC+OapIdduBC74In
HZRSv5iqchxYd881uTaqIZ3/1c7X4DR+/vxmys+FQ/d8I3h0/UnVr1T92Jxh
Mc8nYgeTM36fKb/XYx971cGGCSfpFZSCz+BOdkuwP5tVEqbqDLq/aDqDzUd2
nHxN+f5rtdt7FZwkNqr5iJKj13f5PgU7llnqR1M1wZUnE8rACsrH/XIoH2P8
p7wbzBLE2VBMyax66/l7Gax9sfPcB6q6KmuGV7Ka2PNoosMn6sL1Z/46m8E2
WzsKaikpqwSmQwfBp7bdLW+gPtHuRQZdBA9/bzv9hdok5fmCJw5cd+t6xVcq
U92y7lEuOGHVtsEmSnKjwrhqA/hFa+WXZiradFmwYATsVTwa0UIx7GvTM+X6
DPmfd3O2UueO5R5sUgGnd/vat1K97jf8j5uCo8JuBbRS+/ydEsdOgMUet59v
pT5eMywLvAKO0HyytZXSvy/+izsRjPxCf7RQ6U+n2B4VgSdCOm62UOK5dWqq
38A43OpuB3UDp+96Owve/uKUcA+1VBPiaSJcQ54PyaaHWT+p7gG9N8esa+D1
eOfVvYOUzTSt/a8b2Ofw3hN/qHKmoX8B18HvecMthikdWoUUdwbU+xXNs41S
zyQTtz38CPFz9YpJf6nV6pdOqvSBn5oPXhujIg32RrxhrEUMhn6Vx9aPUwsm
ms+3SxMHP7m+rXqcctnLVvtlC3HJf0KKNhNUh2PPX8dD4DXZn6snKCv3QoG/
F6GetXdKZ5LCl+N0A+LAl4VaYiYp7WsedlyvYT2HGquuSSrlnsXlBw1gPJsq
OUUJPpVPUB4lZkicVvw7RYXlLJXkc9WR+lt+r9fOUDP01p/GquCzGxMPzlLO
NTmrvpjWwfP5oN5tjmpvv67qeJK4pCFgo9s8ZTlwaufoFYhbSNXYLVBFU8jD
PxHq1frPr/tHaTKJx3IWQ9zs0OTsPyqBbyov/hvEnxvxvVykaJJ1rUpzEA+y
jNyzRF1RS1/IE66Hfz9WpPuXqAn9EEnjDcSGUp33XZapkyaHDRutIb73T3bv
MtVso3fiqDtxsOMQy84VytSRdnXkOsQZj0imr1AFbn/SL2eAs1JDZ1co1csf
PnNUEpd8CneUZEAPIxNG7/cRy6CTazcyoFU7itgFGRsQQ5Iu+5qjDAjvURX/
xkdc8ix2ZDsj8rW7p54sBUbGwpJMSPso81ZnTchP/6o7yIR+n/K0WruFmMEk
qesZM0px7Tw6Y0ns6Pv5yUEWdMjL8lzxwQZ4P180y8CKaoIV7u64SCyjreK/
dhUKi7j9n8BV4u78r/ferkJbo5fftN+F/F86enpsaOauS1VSKsR5t5W8YENZ
j9raT+dC/3vX40TZ0ekUkyGtUujn81AkgB3JZOQuTtfDPKL9qe3sqO2VNG9x
F3jv5ngtDnT7zQ3psBFYryVC0Z8D9f1Oar6+BGb/plnFgQwk86/f4Wkk/dkW
1nBzohvWn7Y9kiQuqfe4WcaJukM7Z1M0iR1fjQvf4kI6b8dfPt8KFrvis5sb
Rf5hPZm7C+pTbI1ZeJD2Hq2GUjdiQ+OPB3fxorAwo6ufAmC97O9Pe3lR21vb
LY03G+H9zclT7nxIY+jsRNsTqH+sKzjOh4KkgtK7XxLHCEvf0aWhL3vuOAwW
E9Py9cPdaUgpPE1orJY4qcLzZioN1Q3VB6+MEI+dunqXiR/JSffpsS0TN4il
dWvwIx+buWFe3i/k/JnDmPbxo+pw7lQRKeKxpx8FffmR5DuZg1JaxN3rrqS8
4Ueewzp8ShTEAx6sW+RHH6QtKjStiIM36E9QAsj16rl1W93B8f9uFAmgknfh
A9sDiWk+gWmzAkho5MGTndHE1slJ3tqCqHBvGcfhLGLPdrfYR4KIU1aw12+U
OMbZOfWQEHLYpxwfsgxxk07xq0IoN2KzVRTvVzLvowHGbCG0qnA3S6wUcQO/
mmubEDo4euL9Ay2IW0m4rAihTFlfz2QK4h5hVw4LI4b9N5QyrIjH7PdvrBFG
6YV5sQXuEF98MZkoghZHq8xLAolLvB4dZFmNrOU6lyujwWfmtp9ajeYiWV1a
s4g9T7v5SYoiM1tb45lRWK83+YOLGHp47ez80jKxo5DWbIEYGi0KfMXK10Tu
W37Hd2ZxZDQWe4pHmjjYZPbGTnF0Tz5tjfBaYusyT8U74uiPbWGjBIK4rXFJ
qziiouojFHYTxxw0zrNag2KLf27VOArx1gMBbWtQ/9js5AYPYtoRpxp7CRR2
/cHTc3+JHYMY176SRkndzIGnl4kbaEd+LUujQl33A0d4mhGDSsCLO4oyqCWq
TXuvBDH7RBC3pQya+GHEaaFOnJ75cdRVBvHqvvxJbSIeSxLaGS2D1KJWF+tY
EBek+67LkkGmP67cU7Mjdn7XzNsqg47pDHvInCae63PvVJFF/tdsLUR8iD0Z
RL96y6L4rhI57nDi7oduCnRZlLdBfZHxLrE1XsPIJIcaIuOaZ1OIS3jaU7bJ
oeHOlayRHKhf83tbgBxi23A28mcJxGu0WfPlENVJba7vIvY13JAmJo8Orc8Q
qhghjqzqbjOVRz4RgqPvF4lpt1W/eMqj2I6AymyuFjK/Xe77+/Lo5brBpGfi
xIN6R/IK5VHVVRu/x6rE8Ys/uzrkUd/3or2xBsRth94e/iePGNYpa0aagR/F
GK9WQBJXb68KtCW2C9lSpq2ADL7/++F1itjT9/MnMwW0V9vp3ZkLEOd9Oh2g
gNzDG2KPhhJrh/6MzlVAUd82ue6PJW5o/TPRq4Cerf3PZEcyMXutznE+RVQW
xie9LRvWa6qUMVBEXe2X5vQwse/uAfMjimheq69Ro444uL+AK0gRCYVZvZDr
JHY+Pxr2RBFptxeEiQ4TV5Wq9xcoop1a8g68/4gdj56kGhWRc+hNfRbOVsRg
sOVKTr8iCmubpS2IEjtzebrMK6JEzeN//ioTO+a+vM+hhN6H1JT/0iMeizDZ
s1oJtbTqPfluQmwuyfJCTglNaCT7NO6D/M2/StWVEG8Il3XlCWLPA/tfrVdC
aq3eqsXniQuYtG/pKyETjW6m11eI7ebinmxSQo5XLDvSY6B/4YFtW5SQf0te
fkIi1Lt8TiSOV5e+dTerFe77bsVmJZQXfM05qpi4ZEK5eKMSamie3BZcQ6yt
1HdXTwkNqTms8fkO8zhVHiL9VwVXTbn8gfl9R0U0lZBc8/q6Y/PE1pvONykp
IUrtSdoB9jaSPzeaLK2EDgWxXdm1mthX8+VNsl+fpnOHjJWIBwf2JfEqoduq
HRs26hJbn6zqYVFCmYGmPGu3Ezvn/bNfUERVX7P7FfZC/UUp0b+KiCEw/AHt
HHFVhKh3iyJy/6K1MpBJHCz/MDVJESnuMwyQKoZ8kZD2WEXU0bzn375a4myr
2JBwRWTRfmG2dIQ4/lC6iKsiUuh+//eRVju8Pwst3qqIvh+rcftCEbNXJC+u
V0SxPzuH2HeDc9sjVRTRSj/DoLcHcfD1G35CiuiNs4BTZhBx/IcTbZyKyPWP
fF/vLYirc/kwKiJ5V93jYknEJUXpR+YU0LcR0+7d2cRtmeIsYwrotoedw9US
6N9oGDiogMzHz3QUNUB8YGNZjwJaPn/50GQ3cYF4w4fvCih/6kab6jis9zzY
v0UBufok2DoyfiP1nwp7GhWQ3Nyrpnv8xOxlR4ZqFVD7pVKbWlliz+Gnt6sV
UMy/Lw3M67/B7xNCaysVkFlAn9UmI+KYPMH7FaTf8nSNpw1xdkHbQLkCeT7Y
dqQdJ3YODXtXpoBcmMQ+dZ4nVskyYyWWC1MzEwol9j3ZWVGqgNpYt1RY3oF+
t95NE9+K2GV8JZVYtKslmuSbchwtffuaON6h+1GBAlqK8kSj5cSR+7zM0kg/
7pBihSZi85Iwl/sK6Gz0nc32fcRJvuNTkQpIlvbfu9tTxGNbGRouk3633+hX
sXwn+TuXRzwUULRgVf6yEHGMeDY6pYBM4to36CoSBx9myrdXQIsiQzkuusQq
Lurb9iqg1/GLa1NMiNkVrrfsIP3EebPa9oM3O502UUAyj6U1+JyIfS+VDyIF
1Cq57rmJD7Hn9FOrzaRfopGK/1Vi2q1TN/UV0HbZfc9y7xFXMXY+0lFA/1JO
Kfx+RjynFe6xXgHlKlxMkX5L3JY/vERe7848i5SxrSRmWOZXnJNHMioPE260
Eme/8OrIlEc31Ysfzs/C/tzD4uTk0faXdaLa7B3kPAKOrv0phxa0uu85iRLH
5xrbp8kh5/XMd74aEBueqizZKIek84T4OS2ICzYO/8cmh1p0lW4ZHiSeu+R0
uU0W3Xirz3PxDNgqbk2mLDLeaHH95SViUTXuEyGyaOH9IY6+a8RjaUYb7GVR
9hbXCPGHxOmDTWf1ZJGU4a3QiPfEDCqHEydlkMEAv/X5auJBwZWhZhm0N/qu
xJFvxN1ecl0ZMshdd/Vvsz/Ento/vwbIoMiOB/nrF6DfaG7cPhmUEioRIsnZ
SeI7zJm0ZFCRWqIVuzixnfSBSQ4ZNO77dKBzI/GYMM/329KIW0Y5r8oC8qUV
Ag5II6XKjODXB4llpB9ZyEojQ3eNXQlniGnzVTx/pdAh4Vdi1y4RG75qu1ci
hS4Urev3ukZsXXDjfZwUunUiL9fhAXHwmOEOdyn0nFM/yCKD2HHFUNZSCn3I
ebdD5x0444eSqhTqstsiKv0J+stKmXJJofkVeh9HO8zn1eU8JomE0rblTA0S
Z5skbHWTRFpWHwJ+zIGtKzZVSCDzaVPLavYucn4PZ1hUJNDxx59E8kW74P1H
sVjcGnT/T92rKANiw2xv3RviKPf2Hn9vc7BQ+G5hcVRj0GTuaEfsqWj785kY
6v9hK7zDmTjJde6moRhiiGjv0fUltv50ZrhHFIlrHc6SiSTWnj77KEoU6TZ3
+XHFE8u8PL95kyiy9j9mNpMG9W+SA8dWo7PyfYI9b2E+QVvxl6tRWLVT9+dK
4m7UU+6xGiWe+535ppU42/GAocFq9F7U9VLyAHGDTb3CqtWoCY+a3JiFeEas
4jkRNOp0TuAi2w9yH87hVKwwYued6jq2mtjz0VxBuRDaenj+or4+8djHxhf7
BJEds/92OTMw17n/cgXQ+efLNJ4DxDGJiwJSAujGniuds07E2hy79t7jR8/m
mJ/3+hAHNxvTxflRSeJVn9qrxNYePNXPaei7KYdxwT2wvf2QCQ3NjFznS31G
LBMpLdfKh2hxvB033xAzhGhe0+NDaltup/t+JE7K2C2WwYtMfgp6n2iB/NBF
di1e5Bh1b5tVP7Fjw32pDzzIb50Y78YZyA9yLjnLgyyHd43wM3eT1+t5nm8Z
3KgN3drLxkWc9OHhrAkXOnWn4d2iAHHwP7bzjJxoop9fZkKc2NFiYfgbOwra
tPfqgByxobpWbQMb4o6+O9yhBuYvvtKzCj3oabb5sp642yxtjmsVUtJd/a5y
Uzf8/mMN425W9DrSTrrYCOL3S/ZlsCDDjgfhuZZQf7f8txgLqlv7fSjNBhx9
sjSRGdmHStg8OQTzRDFXbGRGNQPs1RzHYT3toZkhJkTtnN7mcwbm239WL4sJ
vcruedfrCfF++bIgJiQjXLduty/0M7LkcGRCty+9zygMgnyzFBErJsTU9UxW
JQLiVeuCLJiQl9GdB3ejiWUSr8qIMKG+Z0H8jPfAx6LW9jCi/Vyu19yewHwh
PLlvGdFHDzvGb09hPVMOnQeMSL9p+yXTTMjvTVYPZ0TpBuvGc1/DPGEVvJcZ
kdgTyTPShbCf0P1+fowoipGz53oZ+IDvqlBG9O/UjN3cJ1jvwknju4zItbq3
4WTj/+fJbXrJiDq16s0b22C9vfEO9YzI6k5hydZusE550BwjwrNpBs8H4D4v
Jf1SIZ/nD9/NFvkL5luzjew/uSRYJXQG7r/GaGsCExJQdEv6uwT9PoxF9TKh
6RGTmCruHvh+xOCXPzNyslnPritEHLzvsNAXZtT2Rio4eQ1xknMHpcqC3gfN
evipEZe0Hn3xjQUF8mfs1jAnduxvTzNfhf56x1XG7yaWic3f+mwVcvx2BbEe
6IHnZSiOhQ0ZpR5a23UK8iW8XMvZ0Gs2szRLN+JuzrDv8uxIwXWD9NsLEK9P
GgljR2y63HwxoWDnrx3mHMj3wdzVxSiYr6g58wUH+rPUt+wcC/XTLSx8nMj+
eKNP8wPo/9z9ticnqvlYPLotGfZ3Oaf6Oifaqv7cKSsd5p+6ZZTGibJu3esS
z4b1SqYmyzhRjJ1H3SQd4uz+8wuciLHY3tTxI/i/VvPVXOi8rDm9phb6XTKp
2sCF9v2RyfqvA86nJdPKjQtVWPEoCfRBvkXvnigupPd6/kngEMzDuj0gjQuJ
+X+5eWAB6s/0b+/lQlHddNYPjL0k36S3c4ULLW5/EaDNQcxw2C1ekhu5Zdyf
fkyDuIOg12Zu1MUT5sYhStydMO58kBvtPu/5y1sa8p01Fn24UUnL4SO9SuCC
qJpRbrRus0WzlRZYLDLkFg9KSdTdVagL691YtU2evH489F5dtbUXXi+4/fJ5
kXRcfk+TCfjl97qNfKjr1vSLnl2Q3xQylM2HHkfp+ozuJ86WbSnioSH7cG/D
f0dg/Xw+9q00JB6cz8nuRByTJZ/gRENtftNNQu7EMqopFVE0dN9bN1HWB/Ij
hsozaMjW0/uMViCxYYFnSzkNCbnkb9h8ldgxM9KgnYa+nppeMosmtlY/q/iH
hmIddav23YP8rXVNMzRkbe8deyyhF+7vve8KDfHZ5h92fwbnI/vMiIUf1VlP
K13Ogv3MWLOs5kc3duiOR7yBeZxN9mzgRztMvQvv0om161s8jfkR57b88OSP
MD9r56IZP6raPL07qw7m8eOM2MaPIvR0xQtbiD0DNNy1+ZHpOu++yi6YJyhj
jzA/YtHIz2rqJ6bZ19SN0VC50rRvzyjU/7uwnewvRFbXeHQGzo+/V/ImDRlK
ePP8W4Z6cY8qKxpaEclvZWP7Sfb77nwyOw3R+aeThfiIu5/uXePDh/y5dV1l
VxPLfFhVV8OLNrN562lJExvONDOL8KIFxnyGzcrESc2rjG14UMHiVLXZWmJH
fXmtEG50cVYnbp8+cXAZsyh5vvQmLhw9hogZftf+5uNGU8N5qu5msJ5Zpv4v
LvR6YGrSbzf0G2fxSCDPf68OPeLAT/j9it/oFi6k3Xkh8u5RmG9062gpJ/rb
mmeTfBryvXVStMjP15cpiSwP6JfjtTWMA7nW6gy8vwj9dmqMlbMj9aoLOZVB
YJu5slE29Kcs73JTBOTrKj9lZUPpxVMmPbdgPRvuKxyr0OkCHdrofdifj5bp
Pxak9PrCt4VE2J+QX9V3ZtT3Mu8pWzrMb9qa9oIJpaZPuQtlw3zrOvxdGNHx
VJ2NsgUw/wffH2sYkEzCBWatErB+c4TmCvUjPq92UxXUu5iq7l+hEu5M3Tdr
gHmOSB62WKEOR+sc39cG86Zcus+9Qq25dkHjWDfEz7ltSF6mvoXmzbgNwnqB
X105lqn4wKkSvzFYLyfxnNkSdeCSzvWIuf/Xn9M7skiJXLiw/y5DH7FrZ8LO
f1STe550MjtxMM/PG6sXqDtnpn6/pIFZ7TvxHGVzUifvvSi4nFXLbJaiHb0Q
WCkDDjz4L2uaqj+YZ96kQmx48WjJ3CQVvW9KoEcb4lLPJxUnqJ27dTpHDKDf
mcIp/TFq9JD0u3OGEDcybnk2TN124oybNoO4Rqeu8DClc37a89JucLBkVMko
1RLQvXPJlrgk1T0pZoy6dO2zyhUHqK9vPvRknJKIe8PC6gTxvV8FIycoelJy
d6Qb1BdXG9lMUscybxRxe4PH3OyWJimWgovxMf4wryXvh6gp6ln58QtCYbDe
UZfRf1OURf0u6/jrkK9vxG8zTQ1/M9CQuANecLeJnqai++XZkx5Cvvvzlpxp
at0Eb598CqyXsba8eJpqWprHaRngp3rrX09TPhy/HqnnQH5hi9idaUpUuOHi
qwKw3ScXh2mqUKZw74YSmL9MjlNkmnLQeLb2bSXU8+4Pfz9FMRjc5tpcD/mp
AlwG01SKsf8AvQXy92lXR81SJrtPlxt1QX4Sf0nePBXltPWy5QjMW1mq/HCJ
0jivcqBuCuI8FY12K1R9gOAGm0Woj5x0vcyAzl9b5m1h/kXin351bGJEQnG/
/xzkInb8auwyxIjeJjV97BQg7p5bVXaTCR3KxCnHxImTBnC4HDNafPs88Jcs
sUw9x57nzCixPO7QGVWIu0zTFVmQUX2w3og2cUkUtotjQX3fXATOGRAHe3ck
zbOgiH7b0SkE9Z4nxPayIrWJbdW+ZpC/9bFiCiuqWdJ4tmgF89UUnRpgRR4c
oiHBtpC/4PNCaxUSEGZ2YHGA+R5cKEhfhfJkRjdGngILKUqIsCFbjXZhbjfY
j16V80U2NK//YfzWBYjPLGjWsqHHxq9qBf1hnoPVQ6vZEbX7Ycb9UOh/XXGN
HTvqPhQevuY6xDe+04lmR6FOnscSY2GeubHs9+xI6bz9VvmH4OajbF3sqCrA
VCwtGVzYmTjHjs5eWzetlgHznotv4eRAPHESjVnZcD4VrmzCHCg7ie3l+gJY
v40WvZoD2WRORL7B0F/hfIUAB5p+23lyUyXU5zYxsHGg+PIqQ3rdL/h+Sfb2
FDvaVP9awqgFrBpX+Z0ddX5LmKvohPUEducWsaPg/mtNFr+g/mpqXCc7kpu4
kF07DP3ltV0n2FHF0tEbe6bgfBxP8P9jR84cO5yb/0G+3E1uMj+nsN72g8z9
8H68efA3O3opIyvTyUncrZSi3siOrDW4Fx0FiEvehG/PYkcT+rOtfWL98Hld
/+UVdmTaIv7dSLYfnv+y5Z3s6NEFqitJBdYrXqjmY0djAsd7ltcSO9Yd9qlm
Q9tzwvsO60O8SMYxgA3F784YeE9B/cXiVhU2NDxS80fUFPo9kNWtXYXi1ITG
m/ZBfRQ1wrgK/anSn1p/GPJ/CDXHsiLqtP1szAnw/esfJFlRLGvQwuhZqBe/
/6GOBfWnpiztPA/xbxsSYlnQJqOPDC8ugZNZzu9iQbe6fzNzXIF52qr+WyGv
94E8bKcjiRn45IIymJGB5DrOiltwHqICTjuY0Y3CfTzy9yF/sbzmFxPqOehL
u5IA67lvE77EhKLuYZGtL4llNvVsv86IunR+ij3Kg/llpz5zMqL1X1dJzhdC
/pF7O8IY0Hc+K/n8api34XVMzTKlnXVOSfALxFetjUpYosJ2xqmea4d5toZ6
Oi1SbX8KNOq7wRWZdIV/lMa1jrWagzCPQsiD9nkqWJlhw/W/EB9R+/l4jmqu
kNf7PQNWyAlwmKPUTpptNFuG/LEocYE5KpDJZct/rAPE6/c3vJmlviRFI2Ye
sI+zpNUspYxyjY4JDcD30Vuutc1Q/p3NJngNxEsOp9rOUA2X580l5SE+xTNT
NU0piEvuvKxGXFJswaw9TfkWGO5uXwf5eretbkxRstMR++MMId84yldpkvK5
88Ju0gxsmLj51ARVva7efs9u4uAs0ZWH45RUw4TDK1uw31/1qjHqvLvIcR4H
yJfO2/rtL/WRe9Mpl1PgkPQRwVFqzYsjzp9cwfk0WTRMeVpccVG+ALZvnbT/
Q30YeOoefhlcdNbz5x9K9GrVuZ8hsP67vU7mI5SbwvCFbVEQf9CkFPyXKivj
8028DfEXees+jlEixzZcXoqH/dHfhbwdp86u2AbaJ0G+i+jquAkKP/G78i4N
XOExe3SSEtqSELb6FfjotWrRKcr5W2mE9xswe/OekimqyPdX1NdiOB8/ieMH
pin+1RzR6yogLvvkfdc05ZSvcftWDdjt+Rg57/d7re+OfIV5nh16WzJD8U54
3d/xHeKWe8okZqnjMfcfZvTCfFdDnrjMUm+0Cp+w/YG4ekzzy1mKq7Yr6dQ4
1HPXsvTNUpmMtjMn5iG+50Yk/xxlpVe74zjjIKnvVyt2nqPGzm5PduQgDn4t
sTV3nopNLJxx4Cc2HOFTHFygdJrW7zwiBvEMm31ci1QL+/Nke1mojxj+JLFE
iZ+P32m3DuIuEuy8K1TRM74U243EDMwlJn9XKIfvV2f3bYP1Wk8sOTKQ97nL
O/daQL33zLFyBpSy3Ttlzx6oT2tVkmZE2y8Nz+4+SCxDTaZeYET9L0/ssjpG
3J1rKfWBEamttpmzPAf1HeySNkyoZsenXRaXwHli1G0m5B5smGp2Bfprzl34
zIRo+W/nTK5B/OcTXXZmlPtby2r7bYhfevRfBDPaJ/Us1egB9K87d5eJBc3Y
SM4bJkN+UbHKJfJ6UsT1dGsOseNGVrNDrKhjLGR+8zuI37WUrmBFgYoLVptK
oT7B1EtjFSqLHpzXa4T1VV3Yxlchy2MVu7XHiZOWffB+djQct+U/rXnYz5sv
p9PZUXT16wUNxt/EI8Y55PX6y4aU/1T5iQ3t3hXEcqBDq4L+ya0jdix98/MT
J1rcNGMtu5E4OCh9wxoulODh9kx6G8Sv+VWTz5O9bfZ7JPZA/O+jWyLc6MwL
gzThc7CecOLIBR7E2f1qUfASuJ4+UMeDMoWUbQSu/IbfD7zDqrzIyiIhjXaN
OEnk65lwXjQWILzEexvWU2Lo7OFFsbk3bHgeQL34zCfEh3QGmNO5kolLFgfw
AT7UsubyEkcG7EdC7eE5PuRrPWHDngPrf05TusOHIqdfLC+M/YbPBwVVJTTE
u7nulOccxLcllw3S0N3gsZpfK9Bv3at8AX4k/lFAx57tD/l8s9J5g+JHSVy6
jxp4wX20Da78SGnPASZTEeIGga2xj/hR5r1LZwolibUjLt6t4UfrOx41aCsS
j7HmPPrCj97K0vWfaRCXDL3fn8CPtpzuTlijQ9xdvNr7HD8qy2RadXszsaGS
w/Md/Mh8QsFtlTGxzG/8RIN8PtQ3a7psSRzDvWNOkB/tCzizeXwPrL+9x5eR
H30ru57idBDmUb7aOUVDjuxZHB2OkH/6Z+cIDfXvavDc4wzrH1yjP0xDrncm
Wj96wH5GCvP+0tBEmxDacvEP/H74p9gcDflK6T/LCSSmTXiosvKj5RMHeZSv
gr1cc0X4UVjG5QuPb8L61+zCyHycf59854+D+jc5Z035UYxOiVHEYzgP60sm
J/mRsF9vxmIqcdKkYks4P3qIWfjPvwBfShsl5yfDquw7kEvsyE390+NHzywt
fhx+D/bnf9FJQxoxLqZfSomzJV18btFQbvPNl2afYP+HxX7soCGDNdlCxQ3E
wUNMzgLk86jjl8vr26D+H6dpBR/a/myqN+0HMYOM6Q5fPlQ9JGIpOQDnwaXO
tZUPWa/bmBM7Cvex+3GOAHmefOxF2Wfg/MtM3ed40eGigKCAJci/xB47wot6
GZP6J1iGyH0+uuY3zouczcp2OXMPwb9npeHMfGj0Rl9ep+AQvF+a5ZfnQ15f
VknsXQPxiZzg3XxobrVqaJUcsWHg2m2RfCjwyI4/W9WIg0NEPtTwIZZUtz2v
1xHTxAcpXhqKGrxVoLKRuPtcvKgdH6Jp5UonGIK9T1x04kX3vJquCppDfcq8
fwwPkng3MxK5G/qxTsg3c6OUZdH9y7bEjgK35DZwI5Xtm4u8HCB+TVIygwtl
XTsi//vUEPw+78OMLhfSqQ+KcnCD+GJWVxsnei+UMv71Auwny686hhMZHvpg
Z+EP+395svgwJ/qY2I/poVDvJje6mRPt/MWurHMd4jkBfpqcqFFNPTojFtab
Z72izYlsPXdNSz2EeSUXd27nRB35HofvJsN5BCdIO3Oi4/9ul3NkQL3pjMkj
TjRomKcWlA39X5wV6ORE7ldbbk+9hfhNzRwNLjT1eW7uDIb6Pbr7FziRH/8a
xx8f4XwKotUtOBHDga2V++ogLs1vlMWBmta/Dj7bAuvZr78gxYHSeFU3BXdB
/oXl2GfsyO9PwmRcP8wrGWNpwo6sPgq9fDEK/f4xn55nQ3IpUU6lMxDX5BUo
Y0PTAQwyrcuwPuuicQIbqjro0z68apjknzNbuEE+L+gOxzLxERtulHa5yYY8
+Y/vFF09DH+v+PotyTceaWXVkibunq9dxmxI5NMubKxM7KhreXOMDf15Wu57
cC2xjElJ2lp2VBy8cb2H/jA8XwIp/uwo5vCroTAE632dYWllRycNFP97aAb+
cCLwCDvSF3rkkL0b6n/nWeWvQpxjNNGPB6A+KeKeBivq+ny18ftRmE+PUa6c
GeWkLUaNn4Z50h8PezOhsNDz29k8h+HvpQXLjBmR3dHBJQlfiEuzH1BnQOqb
Hd6uD4b6VosftsvUskiTp3kk5LNzVYYvUl8mLNQcYiDefY2rZ4F6Vod/esXD
+Tj998Bpnrr0XPfJtSSIXw0/LjRH7bz6wjYxHRx28NzgDCVzXJaWnw35QlX/
uqepqa33P1UXgDeOay5OUZViPKHdJeA0dU+DKerhdMiWmSqwfIPf3UnKvXFu
mqsR1htQNT43Thm9dH8l2w7nI7Bbfc0wJXytz1m/B+bNX95c9YsaPHlIbtdv
iC94qFT9oIoMG74fHwd3Z1s3NlG3JEzjfOfBYcPO2yqo43OFVtGMI/B+0zD5
TyzFkZ1W+o4frODJjurpHdclL9eLgdMPDnK30rNP39H5JQumHy7t7KSHGnOM
LqgSBxs3ivH00m2lg9Jo6yFuc7O7r4+u9m/KUWkTxJ/TpS4N0JdazopvMQK/
+LWl9je9Ibf76x5LyJcRYO8boj+Ntr152gbiUkFmpSN037M1pgGHwNu/THaN
0XeYGjHcOQ7mKWa2n6RLyRW8Sz8L9akbDqdP0yeWNL3o58EC4cafZukf21M1
mvzAefzqJfP0B/li/b9DiEvMualb/+iut28lrkRBfF8+n8ES3dCN9aDwHVj/
yFJM0TJdyOKygPojyB+qs+FjwAMK458NU/+fL9H9igG/ZzgdbvuCOKmrh27I
iKM7OijX1yPw7/mFsjJGfKzAZu5KITh4NFaPCevcrcq5Xw75eTrfHjNhdk/K
5eVnYsO/661mmPD3HXkK5V8hnh7nbMyMHd8fZ339HebZkP8klBn3q/D3p/wE
3+7a68iCXe7jj7FDkC8UIO3MisdY3dNCJokdn8R42q/C3hckIs//g7iDBdrM
hhd6q52PM4+Sn6fk2CB2dhy055KFDRexocN/bB/YMUuJspqRIBh/fubOga9p
tXCuXwP5IU4aHJyY90nYkKz8KHx/qex8lxPf5dpQw68OccE+SX4uLObXk8m4
gTip7c/fIC6cMHjr5vgmMP/M5R4urHCAcu8xAhu2HtXjxhkVw1aNlsQMp3sM
grixls6jtaU2xCWZkg+KuPHrFAtaziHi4FeG3H+5sQH/3FjSceLu1OdSq3kw
PehZY8xZqPc4+6iVBxuP7ssNPg/zyHunCfPhqsPMdzz9YL2+it1SNGz1OcfL
MYQ4Rv7jz2c0bJfOq2sYS2ytvcXxAT/uFCkW1n5IPPb4mD6LAD4e7jIjnULs
qTwq6CSAByfFWvmeEzfc33EMC2C341VvV3LgPIamQmiCeKLBJ/7vO9jfq9GO
g4LYFyle+lEK+fNnGh4J4qWXXw/Wf4L5S7fmtQjiEImQTbgR1new6OIUwmzX
tde8aod55ERSDYTwjfmufwk9sB83RitHISzgfLMj+jf08zquHCKE77dsLg4c
h37nufc2CGEJkz9P3Odh/g9FA/7COOV1fKAD41+Sf0auR0IEZ8ZMI4qf2HNb
1ZGNq/G6lVQZLTHi4PT3i29W4zduNoxSssQyoi0GaqJ4SwdDL48q8ZjM1jt3
RHGp5auyJe2/8H0sV9CkKDZ9dyR1xADqefa4WorhGmXusE5D4oYAqc/xYnjP
vfcna82JSzbd5vghhltYzpgUWxPTVDzCJcWxvddqpZd2xAwlCff3iePunopV
TxyhfmYpPkwcO1lfGLjhTNwt797+UhwP0eWq/D3B0SGJDeLYU7Mx3dUX+tfI
P5wRxzOPgq4dDoZ+bTH5dmvwZU6tszsjia2T+quz12CGSx2WW2Jg/V/cu1fW
4PCBKHWNeNivjdnb7RKY03Yjt0QSrKd3wfOKBI75MDDMlQ75YVt78iWw8IZ7
tf9eERvKCnv2SuCHyduzht7C+kfXXGGTxDK0yejvGLw93kVREv8XmOzxuRLq
rT+EbJHEaiO7rQvrYb65SrFdkviOa4aRXCv0N7u7YiuJF4eYdK91QX+/eyX2
ktjJ5bDy2C84f9HrccT1f/LFDoxAfXPFa5JvcJaPmz4F98l6ZC9ZL+W387LC
Itx3tNxLJImv6hybq2AcI8+H00OxMEm8aermuUusxIa0TbwSUnj09fs/GhzE
2nsNRNOlcKrXwIlubmKZa/+VqEhjuw1CnXdoUK9x7WGCNOaeNLQ1ExqDvzdr
5WOVwSW5bvULqyE+5dWhK4O9zz80z1pDPKexPHpMBqutryw9Jk089lfD/5oM
7hqf3CQsT1xSviEvUwarjODanQ7E1ltYL56Uwx2Zw6YMx2G9pGX+ADl821Ws
5PUpyJcRlYqVw6YaphtPnyFmcNpXkSqHF4bO54q7wTzDvBq5cvjVi0T1Ok9i
x73OvsVy+KRLzdMrF8bg+8/N9RVyWFR9XlLXl9ju4C7rz3K49o/i/cHLxCrr
T4nXyeGQ5za0x0Gw//lNO4n1zgZd2x1KXNCSvkLyh1QzmZgjYD9Hl+wq5XDS
77bLb6Lg/BKcPv+Rw/syWKfPRBOLPk7frCyPOc6sd5eMhf3VX8AO8piucnSg
IY6Y9lo5+rY8Pj943THsAfSvs/mB5bFSekG7/hOIl8j1/ZbH30//shlKIvZ1
QrV8CjhGWaAm4Snsb7XY53UKePsAZWKTThx/2JHNWgHPPXOhs2bCeSjYZJ1V
wC+d4vXfvSIeTFAfvKKAjytVZLu+Jo5pjfoWp4BF+sdVZd7CeeZNZj5TwNX/
SaV+fU/MfocrNE8BB53aIRFBh/hKlD9WwDqKvnGbymB/sxMFlQp4sO8p72gF
sXPj9b21CvjJ08aI5E/Q/0DY+QYFbHNymWF/LZzf3qp1XQp4lYK6H3sjceTl
AkFdRVz488BkYRPcx7fvM+GK+J57Vhxug/O4oW7QqojPz7MYlHdAf9EqETkl
vCvM/tvHbujvEtTppIRV+HL9q/vgefni3fyfEmZ5yC5dNwj99syb/VDCPxSO
ljYOw3oqNG9BZfz+Vf6J5jE4L53LSUbK+N4m7lXtU3DfIVtY3ZTxuYrj6R1z
sB8m165YZbzT+p1l9yL0L9Q4naeMVb7zjfxkGCfneQR9aVTGzE5OtwZYiFU8
8nYPKeOusaJ1Q+zj8Pd8m/kYVfD7y4JNo9zEbcX31ARVcNyqsz4TNOKxsJhc
WRXsebtEdEaIWHSn03MbFbxTYnXhvChxfKCHeLAKVk5zO7IkQew7rfwvXQUz
rf+wwiBLrF3WF1argruKxFNYFImzXR4Mj6jgd2bntrOrjsPfS9ue4FTFd79U
9nNpEqe/mxCTV8WeR6Su8a2D/icrDQ1U8Y7BC+qCuhDPLGOyVMVKXp9rRTYS
yxQ4RNipYqZlWU/xrTB/2fT0CVXcGekrILWN2DBx0dtVFRcI1ufJmkC+san6
edIvQfGAogWst6VMz1sVe6j6z6vsgnmrzN8RW+Z9eaSxhzhyvWSdF+mHVCnt
/TD/KrMHHqRfdVD3hoPEMbdennlN+u1rCdE/Mg7fzxhITJF+PzQUNx+D86Hn
iaxVw3fPhlZSp+B8WAyST6phj+n2M0ZnoD/7HbY4NWwZrM1t6gb3Ff45tEQN
K3FFZFmcg3rmaesBNcx4r9N6l/c4/H556wsOddwhozNpfQn2s0mqQlkdF7yI
itsXAPt/9Llpmzq+o9ejb3cF5mdYz22njt1L9b/Zh8N9K/67f1YdW+6M9j96
DdaX1E2/pI4VW/ukTtyE+50QOhOujhmOby51ug3zLB5giCb9hm+fOBtH3N1B
u3OH9Ls4yOr+AM5j5L3JPdKPCaWfewL3NXdKuJv0uxln6Z1MXBIfJ62sgS1F
h4d9/yP2vCGxw1kDK6Ya3fLPgHkfhv9I1cAMWg/WBb8kNj9kKvtNA3cU/P0a
mgPP6ytbGy5N/NbY1CciH+7nX0O2viaOrXssev0drM/m4n1UE7sfnHwfXQzu
u98Wookt+iyOxJbCvOP1AimaWMEjaSWuAvpTt+yKNTHDwkzyg0/E7KMzLU2a
+HvYru1PaqEff9j7QU38hu9pf1IjrBf6YO086fdwIfJpMzEt6ZnjKi3846VS
3on2/98vUy+fFtYotfkh1wnnxeZbK6KF/ZoCOXu7IV9MlotHC1cOPNdN7iNO
ujIhtaKJhf61ODoOwn6EzV+NaeLjvMw3pIeJG3gflvVo4kUd+94nkxB/siqy
TBNbmkfwHJkldn7svT1XE9+3f20g8Q/uVz8rPlkTrw/huvWQaYI8j1fPiQdp
4tP1hZvv8xM78/Ms6GrivN4BJ1thYrtnf/7IaWKmGcFYYTGI+267w6eJd3MY
FjdJgA+Wz/zTwI8lXAfvyBD7rqkUHdTAf9bGC+5VIE4PGR7q0sD6xh8oAZUJ
OP9PVZ0aOMx27EyjOnG8kpYK8ZczEnExa2Ee4ZKVDg0sHWBesnsD9I93siRx
15gLQ7z6xIOOnUxkvfepSSJ1m6B+vl3+hwZme1uz7SYF8a256d0aeF/1nOtO
I+JIyzM3ezVwSqdCPJcpseHpi7V9GvjvmHV5tQXMN3j65IAG3sISMHptF3Hw
qRKrPxo4anWGmMUeYtHNvZEjGrhVrXk7+37iqv453nENrEAxelbaEZtn+HRO
aeDzezQfXT0M6zXdGJ/TwPjkwY8mjsTWzMzmSxqY2zd8nOUksePYfCejJj50
PUfiw2niObWm8lWaOC2h0yzUBea7ffsFtyaeyuHwMvKYgO/n6LWCmtioQjeB
0Yu4wDdOWEIT32o79qnEB87/7G8fRU3cMXRzKsgPzuMVy6+1mlht5Z00CoT7
4BfYu1kTXxTot1y+QpykYpRnpokFNlLJ/tfAIw0qJzTx0Z1nazbfhHkEmlXO
a+LMo/dmF2KIGz5VTl7RxGZXR3ddiof7k8qoSNXEdx+IXzJ4DP1v8tLzNXFv
punT2USYby3NsUoTry05X/8mFfajw5n6XRP7f01Y8E4jHmtaCP6riav7qxV1
X0C/Ju5g8vOyemHGeiqL2EBQVqpSE5/kkfd/nQv3sa8iP14T58rsTjv/Bp6P
WCFpd028suHyl3XvYb2j8gpkPzvN0pbGiuH8OYYy5TXxw0NfVbJLibNzREKZ
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
+VdO28H42ppsATqCYSU3WegU7EfqrZqztASxM+dbvRPMn+6W84WGuH4taz3g
HMRtnFO1aYgdbzMVtNzAp35KXN3Ap6fTj09chP14yH8//B+epZx2L+UKuGOz
7ud1/MHOhq50L8jfuqpPv4676y3syLkB3iThc3INN98vFvbm1v/72ePXtoqr
Hd478O4OuNhX6uwqzn/CXefDPejf9Z4Qzyq+cDrm0adQiF8rudK4gne44aPV
D8FxN7rSV/DSa0N69Y8h/+D0RPQKnuDHFdv8BObLd9gZv4L73dOcan8KTjcb
pF/BHSLs9/5OhP0dZLfZWML144Ke9b2A8Zfkb4ku4ZSU3LnhdIinNyzZLuIM
WW0HJrLA8hYqZQv40Nt/KbN5YOmapF0LeE2ZzMriWxhv+6r1+zz+qtLMYv0d
zBc77XB/Hn/Q4JlBVwb9JkozHp/H3dufbzCXQ778pTD9efxQT9VRzgqo57G5
krTK6GQOXw2Mf13taT2P881uZhSqAxu2egfO43MrmK1oI+SfvPazYh5voz/7
ltIC8RMnC4UW8GKOh2yyHeAlW6lbC3i8wLtTSp2Qvy7ltLiA+4p1F6v1QNwl
q0x6EbfbxsyjNQD9zP7tFl/EMZXtZ3ePQP5fphz5RVxi1zHcYBziJ1xPGi7i
dAa3BIynwadK5N0W8QGTdLeDc5DvynggeRGvsvz2+fDS//dXBOtfxDNsF4Wt
18BW3edUl/CQM+KX7Wj+wd8vHJEJXcJd3fd9cWT4Bz9/RN1TS7ip10WJcyyk
y91Ut51cxpX9n3hd4Pg/bu7dsYzPRg5TvfkhLl6zbXgFb4nnvnlTiDSNrkLB
jVW86MXOlgARcE7JTaE1PDb7pEKwBPi1uviHNdyn8F5AmDTMv6bpWLGO2+B5
Px7JQv0Sgd/r/3Dd6naVWMV/8PtsztTx0xA0P7Z1p2jAeOEde5Roib7eQ5oZ
WqSTgvw882mJij9eYTm64N+rDMp0xL21ap1iQ3DOfeMt9MQ5xulHH4yh/m61
m/foCRMuoT+fTEn3lGH8M/QEl8S52Hor0g6Jp/e8YyCmZSOmmq2hv7v7dvMz
Es2qxXs7bKFe+A2nC4xEgXbPs98O0N+fmtFPjET0Hpb5Pieot5w9zM9EeJqq
mI6cg36/TLqrMZGf19YvJtygvomPwXYmQtvef2XWA8ZXORjLMREiZzMslq7C
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
LmM9DLx/VlAwWNNxoCEa63u6MamGgjbHrC0NMcRb4jwvcCioGvRZ0hBHXCTP
KeZS8DRohXrDVeIKxYs731KQLi1Eb7iG8U0aDpPxK5mNQ5xEvL9NH4XI+oCl
Kc2cJOx/Ztlasv/hqkNlnGTikNDi+a8psNtteJ9zi/iUI62RTcHagak4Tiqx
rwNj/TMKDAIrz3DSsZ73IhJyKVCTinPlZOL9pWTUZ1Igku64lXOXOHNRyMQN
Cv4sppZysnB/qQXzoynoeT2izrmP72nPl9oLFHB3ldI5OXgfezdcD6fgxffQ
4fpcXO813R5Dwf0zNi31edj/cw9fS6TgmrhqeX0+MSuSzk6lwHvR4/j6Qvye
bLhonk+B9um2pfVsYvffVSktFMwRvatR/xLvj8Fr3kPBTLK3UH051m9fu8EQ
Bf36ZiN1Fbg+JPHgJAXNLwVa695g/8ld/izAgtfbueV1VXh/bWqZc1iQ35P0
oK6GeMBCPE+NBbf93K7W1WE/7lWgz2PBZSGDs3UcdLyliDYLTidNutVx8TzO
EukMFhzUe21V14jf96XfCjVYsIN9xbiuCesnf3meJgtWW+9m1H3A933z+yey
fkG3tnBdM9bHQb+E7K/sOzRS24rOVs8wZIGg4PPW2nbiumMlgctZ8Ot6yKva
TmJV5VkjSxZ0zd2WU9uF50v4lruTBXUlSgm13Xj//21odmVB8daes7U9+L1y
kU85wYK7n3IP1vYST6Wofb/Egvjjp7fV9mF/2+lm32RBEJ+FSe0P4oACs7o8
FnglSGjWDuD3xStkTSULdlMtwrWDxCa2z/51kvlnJZ5lDeP5nKy+FpD93611
DR3F92a92C2M5DP39BzXMfw9cbcq3M+C0XO57DW/8Tzx5YmrWKD44YuHxl/8
fbm77h2pz0o9JaXpCcxPRmapEAtcL1i9af2H/VhmFz9KQXhz8H9F0xh/O29J
FwW5+sWMa7PET/RMAxspaAoZrP+Ph07iK/YXVVIw2co8Y8NHHLIsfO1LChiL
HFgLBYgV1WvHSihYfyn6vRidOCZJKfs5BZ4dry78ECIeM59ZU0pB3OKJhVUi
xKtXWiWT9UXh+h13xIh9j2cnkP07Px2ICJYgrpN7LU3eJ//SG8b7pYh7GEoT
7RTMu8zpWSlNHJBg1nGXAutuvjhVWWLPPyoPt1HgZ2K6alKOWGrHbRaNguTo
owMfFTB/nqyBZ7pQ3pNx46kS8eWl9Cw/Xfi2rGV9vArOX/ZZcLkuiMVKjHmr
ETtGMYrpumD4bW2alQZxVbHYuRYdsF9x2kpPk7joPWvOYx0IjM/9J8wkzkym
qGgdyPz+JeubNh1/f4MueetAzSolu9e6xH3WtL+7dGA4wYovg0XMOm+4zEIH
5AeC84LmEU/5Rcov0YHl5sV7nfSIw6wdnObpgEvioMhyfYwXLN3O1IGwQWaR
kgH6QNlh8j3PtXBw+7OI2Hm5TqMW+Z4nRUu/X0xs7UY/J6kDk8OvIH8J5sPN
FG3UBsaGCc8YY/SF2I6b2rAuRV/5qClxqpRSmqc2HPl1oHKzGbrJWsBCG2I2
3vCdu4KOv9f5bE1tKLzN0aSvIj5VqBUuoA3t43wNPauJgyJvMoaYwLvFNKDc
HL1Wck0nE1jpR+emWuB6R7u7jUyw+pvx4ex64q6LTtJ1TPC1agneY0nsvq/G
uoYJSZkSi0w3EXNnOxfUM+Hl5NpO+S3E9q/aTjQxodf6dOTYVqzPNbHxT0wQ
u5dr0riN+GXjlD+Jbzj95esjG+Jms4EWXm2w36EUH7Xj//k3fVHShsBsq9Ue
O4lN3GhlC7Qhczb4p+UuYtrlk/tKmVCzszhJ1wHrGWEcZcuE4QeDG/j3oHtu
to5rgTyv9vhnR+K8pzGtt7Vgub1DOjjhff4q0NuuBS650dtSnLG+TdOeYloQ
xl8x5e+C+aRvN+WQ/wO7J7LtXbF+o6XrrmvCuzz9XUsPYj3meaw+pAnR+/Ti
NrsTG0hc9TDVhE0S8+qdj+C42GM3GU0QfEEJ+Xni+0mrfz/GgHIPnbWRR3E8
ZZ9dBwMClZmBqd7EfztMwusYYFrNKH7qQ+xt+5FZzoCxk+pjNb643uIB9wUD
8nRVF3b5EVse0LQBBni+Vzoyfgrrb2SXeIwBVIjCHZEzxMPDYivoDOg2lOvS
OIvvpZxbZKMBtz5Lqyw5h+89faT1njrsjpGy23Qe+6fDmCupDnKrJGL3BWP9
cha8DVMD7k/ROt+L2J9JAyLSanA5WZgecQnPK+2WfF8VLDfTzW+H431+/c6x
UQW+Sf6zTyIxn6dJI4KqwM7iLaqOwv3i7lhUq4D/Ltqvzit4/q8qzEQVWCo4
s2AsFv3i0KSPCow++ecufBX70b5J10EFcg9MZKhfw/trT9bfpAKHpf90Lk4k
ZnS+c1inAtplY0obkzCeXlPtgDJ0HRu1dUrG+gk9/PBNCZLVh6/8dwvzo5ts
mlAE+/qfNWGpGK/V75eGIsgG9AvcSsf9Ul+83q0ADfO+ry7IxPVBFY+y5CGi
pfdM1V20m0GZkDysD+sp7MhCf1DR8ZcDXuPukdH7WL/Qf4P/ZOHF1096Qg9x
f69X66Nk4dTVjkNqj3C83yZwgSwYrW1LN3yM91nWUN8mA8MjzR0bCrC+hw39
rstATuoHxb1P0Sviu/fJgPu2ph0+z9ARqh5GMsCceRt9qRj3+6sQJisDnTkN
1cklGK9yzG9WGpL21PPnv8B6p9g5m0qDnUjtqkrAet4xWnB2DkgXV/m3l+H6
EJuO91LAOfTm6cgr7I/LsTvNpSBcvmJY8A3u1+D46YIkWLwum69ahfV52nol
UwJovnBwUQ2+v5W2Bn3iUKr1Im19HZ5Hq2VwszicfPu8fQ8H19Mk5nPEwDCo
SOE4F33/R7SXGAzqF24PbcT7EH8YwxKD+x0FUTebMJ++7NJpUTh4+XFV3gec
r6cz1C8KWmaP+N40/z8f+/YRUej4nrOyrRXzYf4ylhCDxMT7p4fbcb8UzclV
YmC7IeuJwCf83ny788zQHFwuiTbJd9FXT2WPNG51sYb/AbsymGE=
          "]]}, Annotation[#, "Charting`Private`Tag$1518052#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
iexLgx9HbgPjL/RbSolJWb7T/WHAXLUpmkWETosWS9dd4E73Z3eeE7ciTj//
dQ/Y7mu4vz9Rox9u3vgIWMXrRkEmKTyfP/f9MXAP3bHRItLueXtCxRPgwEt9
4V/ISeGt/UWZ0M/TgankH6T296Ph+Tlgf/ZJwrGFDArwV33xEuysreyX28nv
O7ObMt9QrOu7Mf9wFyk0Un8t5R2wZM1j9h7yZOqizOMPEJ8aLf67j8w6ur78
Pl6Cnw+sNO3rIyc4jB0jPwPnWB2o6CW1St15QirAv8F/o3cvGeiZ+PbmV6hH
xzZ3rJf8plRufa32//45Xc73koJ/R9fcf4DdSTnjSS9p+0g43bkZ6l8K9aTp
IzONdQ0vtIH99Vjz7T5ynPbimP0f4IgI+e39pOa76PvHu8H/Wnsc/QAZ4FSk
eaQf9AiY2U8PkF/XdXeYDEE93rcCjP9IgWb2IIMxsB+8q7h9iLQJ366gPwW8
l+2m/zCZoWdToz0H+ayf0A2MkGOzt67sWIL4nJaXF8dIjdwXIlvXKO6sL1QI
GCdv2jd/lKdfht/f/22id5SsFqI5Lcu8DD/v/jXLOUzyf5NnkWCnmKZ3rOna
IHniptlzQW5g7xIhpX4yXd3HnJufYv/LZ2TFe8nRodQ5FmGIL9/Qv7eb3Jny
NYFOHPIf5OZ+1kX6W07rLUtBPGtUwZ5Osopdsn9GFvjYYU65DpLv097wMTnI
d/RJ8cbf5HEPZ9VBRbC/mGkP/EU+3fyo6a8ycN6bSO1WcqQTX/u9DfzrAkIM
Wkj1hwMyTepgX6vTz2wmbxjxltdqgf2WQoJFM1lJo+VYRQCXGxcYNpO8Bad4
PusDx6UOBjeT1o5hb4v3ATfwvQluItNk8q0LDIEfs3uMN5LDP3+vvTSB/BW9
zC9/kDvCGNOzzYGrPWbJBtJPV9kwzRL8GfYviDeQFTOWYwnWwDZdJZ/qSZ6c
G/cf2gL3OVvl1pPH7LI0o05B/EqPR2s9mSpY3xF6Dnh5w8zeBnKoeiEw0AFY
75b/aAO53V9W4bozxCdGLdX+IK/vMKrxcAM+JHdooJEs/3fliosH+Lte69je
RHInJ4g4+ABf6B1/3UxaHfny8bQf8Orw8MlWMpVt9JRNAPANh2HNNnIIC7Ec
DYZ8Mt8aiHYyY0VAneMO2K+f/nm/jbTX5j/zKQLY5PUbhp+khDdvjEc0cEEI
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
9B8WnV4U
          "]]}, Annotation[#, "Charting`Private`Tag$1518052#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
UTBTrcapAVKHLhxQzPeJcmZjd+gg2dnItdirAracQZeGyCsPmEL5toP//s0O
Hia1HOY4NY+B1X9FiA+T7Yyx6/sugXVU3zYOkhE/+0TPPQZH53PlDpCaKR33
kovBS1kqGf1kq2uDfFkHuFt1AveR4arVT0eWwGMLGwZ7SY3RUlVRmVLKez42
qfaSLa/ILD19cIl13cVfZLhvrq6DLVhCdOV4D6mhk/H+YgDYgUb69JDNc09N
nsWC1/eUcvaQYYXx5VXZYDVxz8yfpHpw3K6pGnCRZKfrT7LR6PoPyd9gFY1d
G36SoayX7BH/Z8r1CRP8P0m10qAuZ1Vw7lPFuW6yPsLv2JXt4JSLC2PdZMhO
j5HMY+CWvb9mu0kVAWffH5fA03Y/ZrrIHzX28wuPwTV9oV0dZEjMnvOMD+C7
J46iVlLFZif7lk7wtggl1iayTsLk6vFl8I6qLsV6MrhFX/imTBk8P7ZcTPtO
Kj3SvJOrD86LDw2pJb85qsi22oITNYrtqsmglSseM58CM3Y576kg1/RKKivG
gdUuDPwqJ2vShDPNXoOnVF7zlJFnjnNr+9SCuVQWC0vJVerMhXd+g9NVOSY/
kdVjc0bv+cspm7aoPvtEnnk9VtqtCn5y3KvpE7kqoN+MawfYVjckuJSs0uv8
ttb1nzNSb30mA/802O4JB1dsoImUkyvI6vbAJ+CIk23zX8iKkM/Ojz78y29Y
cKwkA0zwYEknmE3rllINyeB46z2wDLYIWdlVS34py5gRkP0Cj/dQXcN30u9q
SpCWATg4dRt3PSln8Yhlvx24NbnFp5EsF7odcf4UWE2UX6SF1JfzfsEfB9b4
yFffRqar7qh6kA0Wn3/h3ElGbVkWzRsBc+c53/9JMlk36mzh/Up5q8ZO61/k
ycPZdnVKYEW2YYU+0jrIJWHsCFiO0TE1SJZGGn0IvgA+eMRhbpjUvSP1iy8B
HOmqyfebTHsyxfngHXiPIsvVMVIqu0pFuRksc6lo4jd5DaeZv50F946n8vwm
lypCvTeLVcD1WOLYN0qeaD4Q810TfDEi8scI2dmnk3vYEpw/IR82QlpNCzX9
9gTzTkY7jpAlLEN/zl0Fc3omuo6QWkKf5PiegdMf2t4fIVNkE/67Xwr2+6s1
NUKKq552VuoBe3/Z5zdKRujtuZzLXAk/bw52SvwmFzavfW4qD2Z9pdv5mzy+
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
VDKL2l8xsQzr913DClTy+fhh8udfqL/QdKeXQjpVfHyXtArnHy9sjKaQQ08+
qKXQM9Py93w6+hTS4ti7/HRGmr2MPpa18JJ6Lcml2aw0F3Ds/2fCQ+bFJh7+
xA55pkqvOze51TqhPp+TZm1Xc/04LlJoMLrjGy/UR756XM5BPkqNuFhChf5m
l4/UsZP/boSOlPND/WnX5no2sm/u8UKNMNQfYuUuYiFzmO5ROqSh//3O4tMM
pFKpZ2i3LOSd6PkOejLO302ifx344/ILNjrSl89JYWwj1Lfc+qi3TJyUuaK9
sg32C2ERODpJLGgesRfRBns97M0PQ9dWDefE94IH3jipf0cdX/XdpHXBPIPs
PXWo9OBe3w364N1Vx290o4gTO+N2GEN/de7jz6cRj7jqht1HITe9nig1h7zb
t6ZqHgOvyF1NX0BzLzerkmZQH99WsLyErl5QyN17EvLjf9qmVlC7wnpCzxzM
WbJn8B86OiJbdPAM1L/Nc7xBhzVuiVcbW0KuxrvehgGnq4mYHbMG5ziwWjBi
uSWB1hM2UP/k74sTTJjjP54Bi8uQq39hMGDBHrqcdtZXIRcVq9vLiqdY2WYu
XIP7Km2/qMmGfwfR0123h/vX7uzZzIEPH/33wN4B6kME6tdx4q+Cy5yOjpBT
I4LFubBa83ywsxOsD+uS5OfGb6NnhO+6QP4kyjWPG0tZTsZ43IH9x28aUHlw
yLqxdd5u0C/xENNFHnz3bf82Py9Yv+1pMDsvVlA9cueqN9Qf47Iy5cUNnz4W
Gd4HX7V4F8WLlcsenOLxpVnGzolHgILbjEcTxv0g19u1SY2CHzUdG6v2p7lj
8f3rExTc07/u3tPHsN90eEs4BQff8K9wDGaG/36nGp9LwcT8lLDZU5otWwW6
Gyl42MPcetdzWH+98tUcBYezfE0VCYP+92RGBah4f5Di/GI47B/2JVeViqcE
g3VaImF+ua1LalT8ImbBPz8a6s8y2W2hYqP1lg0xsbDfXad/slS8mFoi4xkH
67siO2j9Endss7WMh/uySF/PQsWm+aHZOq/AuxQ6ZimYTvffqlwi9DN+INtD
wWk/LhgwvYF+4dzL1RRsblrxrDcZ9r+d7JZPwVnW0Ypv0qB/UFT2Ywq2GmJ0
9MuA9W+xnzMF8zjYoquZcL7eGNKCgj8v1rIZfYD1y8Mt+yj48n8apluy4b78
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1518052#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        RowBox[{"0.3389729911427253`", "\[InvisibleApplication]", 
          RowBox[{"(", "s", ")"}]}], TraditionalForm], 
       FormBox[
        RowBox[{"ep", "(", "m", ")"}], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> NCache[{{0, 
         Rational[89, 30]}, {-0.001, 0.001}}, {{
        0, 2.966666666666667}, {-0.001, 0.001}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ep(x)\"", "\"ep(y)\"", "\"ep(z)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8023235320287433`*^9, 3.802323570837709*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ErrORsolr", "[", "time_", "]"}], " ", "=", " ", 
   RowBox[{"eOr", "[", 
    RowBox[{"time", ",", " ", 
     RowBox[{"qsolr", "[", "time", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.681795255964004*^9, 3.6817952578340063`*^9}, {
   3.725276057452697*^9, 3.7252760707155933`*^9}, 3.7585175958861685`*^9, {
   3.7585176308214164`*^9, 3.7585176308214164`*^9}, {3.7999330353514447`*^9, 
   3.7999330764925995`*^9}, {3.8023229131595664`*^9, 3.802322913767536*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ErrORsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"ErrORsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"ErrORsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"time", ",", " ", 
     RowBox[{"t0", "+", "0.01"}], ",", " ", 
     RowBox[{"tend", "-", "0.01"}]}], "}"}], ",", " ", 
   RowBox[{"PlotStyle", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", " ", "Blue", ",", " ", "Green"}], "}"}]}], ",", 
   " ", 
   RowBox[{"ImageSize", " ", "->", " ", "Large"}], ",", " ", 
   RowBox[{"PlotRange", " ", "->", " ", "All"}], ",", " ", 
   RowBox[{"AxesLabel", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "[", "s", "]"}], ",", " ", 
      RowBox[{"eo", "[", "rad", "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<eo(x)\>\"", ",", " ", "\"\<eo(y)\>\"", ",", " ", "\"\<eo(z)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6817953070590754`*^9, 3.6817953132000847`*^9}, {
   3.68235566735032*^9, 3.6823556984255743`*^9}, {3.682356159377184*^9, 
   3.6823561666779966`*^9}, 3.7252717337834864`*^9, {3.725276081792498*^9, 
   3.7252760864665327`*^9}, 3.758517595887179*^9, {3.7585176308234196`*^9, 
   3.7585176308244314`*^9}, {3.7999330877326765`*^9, 
   3.7999331045464735`*^9}, {3.7999340840762167`*^9, 3.7999340943042803`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
AfL4Efo=
          "]]}, Annotation[#, "Charting`Private`Tag$1463667#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
qXR44Qq4i2T5LgmJIa+4gSfb5SvQ+D4m9xOzGNr+ubt7E63AwCV7GslAURTE
yu802bgCPVeeVby6gEUk50812XaswNa+gp6bpQjqUyyJcB9YgUg97bMfDDDo
I5OUZsTEChimjfZU5QihoOXXW6nzK4BcaEfeEgWQRSPHl8+EIz/u/9aJdONH
2OyE63W/VkDN5crMJiMf2gklwQwerMCzJZ2QGDwPar4QMLxKtQodNnxP6ie5
UYbKagoZ8yoMOH+5d5qeG/mwupjxcK/CQrGcaKoLFzq9NkgpJ7wKu4+uchvP
cSKuFnN0WmIVAnudLuykcKLl9/WBF06swsaFbSTnwYlqIjQUvdVWIfPendv9
npwo+VLBSgysgm9c3kHYS050Tf3Yh5dGq5CNd19o8uBAahyvHAstV4FxpSD/
iy4roiOy8DSeX4UCNoaodzkMaOJnXPfolVVYnO+Py9ejRkUf/yVs3FgFnrFe
3Yc2ZCgm+rY+tc8qiLRaOVQV/sXZX1ncFwhchd8/Y3LI32zhZLQcyxUjVkGu
ZDXx4twi7oCrz+fM/VWoWi/6uZ8+hOvZNJZ2TF6F2NXZjEcSH3E5HWjmTtoq
eGnxm5pWdmjf+08l88GbVaD/elJ8X3lC2yzus11W7iqECmucSe+f1ca4iLCU
Fa4CK/LiEJ5d1N4+9aKltWIV/n79sWtpsqLdxMsYja9dhac2gQsWDKvaL3ei
Tv5qPvLDYaKmXHJF26t7d4e+exW6iNiJzbANbb0vXgUiw6ug4n8O8XrvaXM+
mHVTm1oF85zJK0+vkcDiNQes+dIqhA0c0zVvIodqna5Rl41VcDO6IR+Dp4Ik
AcPUwL2j/tFc1/4W0oLLbpVFIukaxIXy/nTQYADVPgWa97RrgH8c/eB8EBPQ
Fn6s+8a6BlNP5W/YarLA2EPB4E7eNaguHF8M42CFwhtPledE1kCuSuIWWRsr
RJ+mJfyRWgPpvKZ4NWc2sBMO/8iiuAbiZS/s/fvYQPrvtpO45hpIfSjnZxZn
h/0Bd76TemvATMZm6GDHDl3F+N6zJmtg+oNjz8SVHd4n2j2+Yb0GPXLvI9pt
2CHQvc0w1GENRlo/nkyMYAdTQz2Spy5r0B1xnbZykB2EsBXfct3XgCKj/RK5
FAds7h+/g7u9Bun/fakK9OOAxuF3sn1Ba5Acx1MlVckB6WW880tRa5A4mfdL
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
0Am1+eJNZKl3svSJQQJaD2asOnZrC/k/iD2cfQ==
          "]]}, Annotation[#, "Charting`Private`Tag$1463667#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJwUV3dcju8XLkmlvffSntql0tXe2kIISWREJCUZ0RRSsivimzJbiPTehab2
3tp7vKUUDb9+f72f63Pu+1znXM/1PO85kl4nXQ6to6GhcWGmofn/b6RW77dw
h0cINWO6Hm5ZYPTyYMWZYsPH8K58JMGpkW5UGZ8jRa+UBB+7CV8fuiTKVNHj
BnPBZAzzvRtg+/qFwjETfvUaQwqcyjL47qpWUDQkTmp+n0+BjIyISEFIA+Wl
3OsZ2tNPMJ1a5jCys51iQJ6US44+QYjiVybeph5KpXviU5P9T1G4c8P1mMP9
lL1T0cEHWp6Cfv9Jv03ug5Sp8IvOVxxSEfQoIaROc5jC8f4wbZHhM/S9Li9m
KxijuHHrHzAW/A/Kr/QV7oRTKYMvVbfsj/sPubrldQ4GM5RAUynOywxpaPjK
WKk4OkO5789SRObTkFfEYXhT5RdFgYn2wc/jL/A7M/Gn3vdflM9P5k/963+B
p/9mw+xc5yh2emPW4rvTkfnU/HlL+xyls6ZbAvXpeFPFm/PVY55y4nDDoqdN
BkxqV3b1NcxTVldLay8WZmD3J31WN/bflFt3v6Qn677EPiZWGTTOUyRUsy5T
3r6Eaa9+k2vyPCWr+L+d3TKvcLxq4SCv3zzFdO9DtdXHr/Apykha1nSe0jB3
k1GM5zUaV/aFJAnNU7xjr/Zsvf4akiH+LqcX5ijzUkF5e9e9gfHhQ9oPW+co
EfnH40KD38B+b2fxRsochd/1wJEk6hssxhqNfHoxR0kf225ccPgtrpoa6iUl
zlG2hNkKdHW/hfDUl5MvI+coFYKgLm9/hwHP8tGW0DnK7izNMpGqd5jVzYwU
DpqjBErzOIltyoSM9e6jxwLnKEan2Azf7s3EgVhxccpanOELo7zRg0ws3u7/
u/HSHKWWgY6nujETMz9HX9tGz1Huu67828uRBdUetzDRB3OU/SkL45N2WTiE
La3V/jMUhfGZltDILGRkBPez1k9QPocNvUtazYIM7w6ZmTe9lLDqnkcq+tmo
FT9/KFWtjWIn1BFZcDYb7ebbvuU511B4fJrObMvKRtqDM1Mv2fIpnVk1+7om
sqHr2z79nPm+0fOVcrsT8jk4s7esIdHuq9EJm++6Kwdz0HP6A2VeqdZIJ5Ei
dSMlBzY/IpvZEpuNVnvy2EU7cvCsMzZmwqvTqEQ5Z+k1Xy5mVV0/Zv3oMboV
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
H0bs5S6dYZcl3azXTjAJ9IFNXvlO6Q1Z4nj61OBZ8T5MyQylc4rJkcLmPXv7
ZPvw78LvA+VvpIm6gU2Tg2of7C1VWblyJEhqiva2fO0+OJ6gbv01IEj2PzzL
X7a1D98jdUoazbiIeOL73kaLPlDSxKZeOm8g3bfmX/Vu68P5Xx9mb9jOUh7H
aAdObe+DRb6jtxBtq9Hu8LPGS3v7ELqklG5jumwkdPn9RkafPhi396haGzOi
9fx8I49fH56+SexhzuTAvbPaKZKBfbjl5XUwtogH7qfO+qpe7MOmYr7Rnu0C
4Dn2XtMgog/aI84+Zn7CaDg0v2J1sw+ccfJRk8xiiN+vXeZ2tw824mwjTAIS
cNp9Nv5Ach8Opa5/OTspAXb393v80vqgczjgmHWUJKqd5mVD3vZhq5XkAsNz
GcTaac9EfujDteb/+kKjVGBneTb/DmUtX61b2PhlDWw0eR/+tGRN7zsZbHcY
dVBmMO/4troPl/beuFG0ewsidbSF8pv7wHM8YaT6vCEs1c8OlHb34eVXtfS9
PsB65fdvG4f6UM/ybFcEuwnCJLXNpn73Qf56+8vyC2YwFjnLurTah/4lqoL6
TXP843vfwsDQjwve+TcFIy1A4Zx/ysPej5WXl9cXHbbEBRbt45L8/XgiM6rv
rWYFA4azOqri/ZB31ZRGrxX+0r6nMZDrh5l9KZ3jeWvkLc9VWG3uB996iUnV
ZWucW9BKdNPtB+n2/PSPxRY6swH7DqAfLMxJEYwpdpibyFXws+rHW5MC70iu
bcgZnvt13rEfd+91zZUddsDpPi1K5I5+VAv2agimOEKtKyDqzr5+3FBu1juw
xwnTLbkuTw/3Q1v15PHIdie8rZ8TeXuyH+F1uy2kbZ1xvEpr+PO5fmhcevF2
zytnKJUFZJVe6sfDLYYhbqvOGPuaG9IY2Y/Ii3/+qJq5IL1gzqL3Vj+GS/IC
2c+74HCeFsfUvX6wTk+YCj5zgWxOQPvflH5QOTddDqC4YOBN7nOG9H6oV3my
2Ve64Fn6nB9PZj/SztzjLl/DXs+0tkjm9YO9+U8OT6ELJJID6FQL+8GdafXU
8ZsLft7PrdIv68fU6sRVpgYXJCfM3bOq7Ueb0Ks3zq0u2HNTy8uttR/5RnYG
pmtx4egA5QM9/ZBMtFg3v3a//Wru7xMj/VBoyX529aUL7l+cKzxPXau3Qfo+
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
8iRuz7vxa5jA4KmGHz/75Yi3nsx/D60mcPJeSn/1cVmiy/PIM9NxAkrHVS/s
eCZFNlI5BEp2TOBNp/PzSlpJ0v0joq5j3wT4pwxvB3OKkqwXyzEzhydQuPnr
fq8TAuTa1dPmDKcmEO61d6CMj4fs3DeyIhI0AdtYY5MxFg6iZOD5UePyBNZZ
5HkzJzOSVb7GU9ZRExi/LVn6KY+W1M/aKHrGTeCSWc2Nb7W/KWnVpP/M/QkM
9AdkGrwdogS/1E6KfjKBUo9nu14IZlLsI165p6RPIPL1Vutth3qMJLwkOd5n
TmBV/h1fsDXVaG7rvfKKvAncF5XjyzFdMCoVZL3aUzgBjooP3vzSK0YP58MM
f5dNoOr4ysaueRr41S3OM9dNwNTcT9JkCwNM3/i9k2xb01volVXRPg7wRg8c
0e2dwNJVi74gwoMRb49N20YncJVB/nPxFwF8Ma7t8JqZAFX/8t/snSK4JWKZ
GPRnAmLlUexmd8ThtZjvcJN2EsFmR54r6ElCp1Gd8TnTJNyZC2JHAzeBKfNF
0SfOSWSVifm1R0ih87poSI3gJGhsW5dOHpFG5uEErUHJSQR8dXITFZHBVTOm
qb8Kk8gZEM3akSoDd/FLLzg0JkF7z9cmfkkGiktz+2X1JzHmMj6hLy+Lleaj
Qoamk+BW5s34uoZrs3sanG0n4fP+Q5roigye33S/cdhlEndu1hy+mCaDoKOV
lqEek7g+4tjH1iYLO0tTmgSvSTzYKHy0q0keYpvyPqUfnYTLXPx3jv8UMbui
coZyehKuNlW1olbKKGl7ptx4fhLegr6XL31RwYP3gkOjYZPQrMlXekm/Gcdv
30r5FzOJC6L241c41WB8gn4Xb8IkhhQrMkNj1MBjE8Kl9GgS9b3zaf8m1TAs
PfPD+NkkAh3ha2iojs80h8PdX03in9DFeN+z6rjZ2Wl0PGcS2qdb5r88UMeB
PJfFK/lr/dRdpT+aoQ6tO2VZ975NwjS8ctvz5+pgPGV07M2PSRitim54cl0d
HXa50t8aJlEcvjpj7amO/Z+96HM6JtFZlpOZLqaOIXnOodT+SeyLoelpXVbH
sXukJH58Ej2q7Ep+epqg0vu9CPu1pk9/8OtcTy2cDRCJOr00CT0b68qek9r4
21dxxItuCkoStfWyx3VwyTnYxoV5Cpkd9OSTqy7WF8opmnJPoXpmt0WlrB6i
VZs3aghPgYlqKnx7UA9sSdfGJaWmsGi0bl4/bgvuMGtWcipNIcZD8/WSrD4E
z/e+ptWcQoDh1B26l/pIHrl1Y0Z/CnQfHnWGCRpAeoeRX6/pFIQfncnKOGuA
jOIJhzrbKWxQllNJpxhAVevR5iKXKbwQMlF8M2eAnFQbjiyPKSQx+O8d5jeE
Huci9YnXFFRSBF6EyxuCcimtLu7oFB6tTFDnfxjCbMot+/LpKQhI9dOoTG9F
2R66hFPnp/Dbuy22fskIDj+yzuwPm8KlpCZV5VmgYct+N6eYKRygEzqn52uM
nels2sbxU0g7kHDqWLUxuvgKeNUeTmHsV8O6CnkTeIUf+y2eOoWhjRJ8J4NM
MPJLsIX95RTcNFqoAQUmOOFV9vFf1hRsvI6kzC+YYLY28P70pynQCniqMsub
IggywT+LpuDqm7OzZpspVt407Kopn8J1VcODu31NESYSpk/qptA/HHG97Lwp
GK6rCb9rm4KLX+345jBTxP7pXkrunQIL62O2l5dMwXXkRufN0SkEFy14OJ4x
xb1mg4KLM1PYfWXmcv0pU4hYjCX5/ZkCNVWmneGWKVJz7l/0pJ0Gmpz9F56b
Qm6T1T4Hpmk038x//z7bFK/j5mHEOY29P9y/uueZQv3fMwlVwWl0jqnenXpv
ig8nXGjFJKfRw+CyEvfKFIadNH2sCtNgXEx45fzAFEW2776uqE3jg1Npv9la
fZaf9j6b1JvGq1f3G8/vNUWlHMu1LuNpdKv9esekZQrnu5+9q6yn8XXYIYKO
zhTN630tCpymMSAr03C+wgS7z/DLvtk5jYZpxpkrMSbo6S3ekLR/GqL86kZK
ZibwcQoYjj0yDaWbVYfi5owxTtlUduHUNNqCEw7UJBuDJrjT1jBuGh3+Su8T
1p6/4qSjU37NNNZXzY1zMegj4XiG6aaWaQQduKMytH8LlsfXaUd3r+lx4C7L
ho968Dm2R446uHZ/nm3pPJMeasbeC+6YnEYmi2avzU5d6B1lZ6HMTeP+g1dZ
F57pIHX0yKr08jQYrgVYSY1rI0LrwGIxLRV3MtPqk49oQ3/uhn8wPRUqxy46
LMhoYyrn85gyExX8V+Zuxw1p4dmZ4YM9LFRwTNwc8XqphZ2aPF0JHFQEnTzp
7OOvBZZfxu5WPFREtvcfSDDQQmH2iZq//FRUWYvw9TOuve+nH1q/FaYi7eF9
aYc2TXTP/NLnlaKu7Q/nnu+6qon4LIncMlkq0qW7f47v0YSV/zaVC4pUcMkp
c4Vu0cSy2vm0zapUMISoOG8Q1EQmNU28X50KPZmp7MtLGjiU2XD/rjYVbDnW
XoM9GhA6RcNlu4WKOWG5DJVyDVRvVrm+YkiF8fvYdpdcDVyd3rU+y5iKPzrG
zg6pGtB7FxHqbU7FtIHFBaY7Gpjwy/nNb03FnheDD3euxZ+q9pz8YUcFvUhn
0ki2BtynWEYvOlKxUUrwSm6xBja+3eKl4UoFY0lR24d2DZATPh2D7lQs/0y0
H5vRQIBKgtsDDyoOXksYsmHWhPwkqbL3pOLzuNGTWllNdL6esKTxouKxCd/Z
YHNN3D4uWJhziIrd807H4K2Jv+Ons4VOULGtPVOA/aUm3r1KUao+RcXE3nR+
9lpNeB+rfH4lgIrk8zRVAouaqBqTuTcSQkVs5qSPjoMWwl66cDy+RIV1eu6w
8QUt6By9FO14lYpdNMF1Fq+1MK7weh1dJBVDLlf/29KthSejrSEfYqjIy0nZ
nyGpDbcM+nnfm1SwUrgNDh7TBpOvhp9oPBUWP1w9RN5pgyK/b7g2kQpTGon9
/RPaOD1yff+1B1Q873+vVCKtA9n0vDbdJCqijtUp1LvroOPwoMv4Eyqu2bNX
8VzVQZwcV2Xy8zX/CerGP8rQgfmwkYVLOhUfzKtPnanQwWLaMQr9ayraPE6/
yBjUwRuf+7qf3q31l31b2m5JB16yxZnHc6jYmceQ5s2sC76hGQWJj1To0LtI
0fHpouI/sWcNn6ngfnfMUFNYF5cO2YlEUqi46iZmRLuGtWSCEvW/UnFFKz0k
mFcXIwPP2aaK1/x28uOV5I26SHpeF/m0nIqL333l4/7qwMV7lWZ7FRVSbzrp
P4/qYIO00nnGOirmQyv67Kd0kN+/41d+IxX7TyfOWK7hu35vE0krFeGTMS5C
a+dP/1mv962TCpeD+/Y96dbBtmu720t6qDhAs2tlsFoH8uzZFyoG1vRg1/67
8EkH6x8yilePrPmPt9O/P0UHP6X3FdVNUOGrXMf0/rIOPr97f7CJSoXnmEFW
8J41Pn2WDW1zVJw74dG5VVMH/sVe6Z2La/6RSORko9eBvdMn255lKgxcjgz9
rtOGfAf7ZD/NDHg81fzXP9QGnY/PreH1M6AWWb0y3auNbuoX9XHGGbC72HsS
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
Jtc7e+P/Afjkf4Y=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1463667#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        RowBox[{"0.5999813259229971`", "\[InvisibleApplication]", 
          RowBox[{"(", "s", ")"}]}], TraditionalForm], 
       FormBox[
        RowBox[{"eo", "(", "rad", ")"}], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"eo(x)\"", "\"eo(y)\"", "\"eo(z)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.800209512029716*^9, 3.8002558280361867`*^9, 
  3.800265259064252*^9, 3.80043907019287*^9, 3.8004419143437204`*^9, 
  3.8020926345073357`*^9, 3.8020934954495673`*^9, 3.802094426903051*^9, 
  3.802095044348453*^9, 3.80209564144503*^9, 3.8020968671345935`*^9, 
  3.8020995011260805`*^9, 3.802104259719264*^9, 3.802109480474831*^9, 
  3.802146793419298*^9, 3.8021473373711243`*^9, 3.8021478901182737`*^9, 
  3.8021555950756073`*^9, 3.802156797250135*^9, 3.8021576212966423`*^9, 
  3.802158290216434*^9, 3.802322957642982*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3D elements", "Section",
 CellChangeTimes->{{3.7993046810598145`*^9, 3.799304696634295*^9}, 
   3.799554263858622*^9, {3.799586669531086*^9, 3.7995866722161613`*^9}, {
   3.799604515692666*^9, 3.799604528253003*^9}, 3.799931572837556*^9, 
   3.800264448278181*^9}],

Cell[CellGroupData[{

Cell["Plane", "Subsection",
 CellChangeTimes->{{3.7584448477974606`*^9, 3.758444857768345*^9}, {
   3.7585176308414464`*^9, 3.758517630842448*^9}, 3.758518055478194*^9, {
   3.7995544121065254`*^9, 3.7995544143422117`*^9}, {3.799564267423721*^9, 
   3.7995642687003417`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"grid", " ", "representing", " ", "floor"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7995544948823767`*^9, 3.799554529549035*^9}, {
  3.799605021247182*^9, 3.7996050299563885`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"passo", " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"xmax3d", " ", "-", " ", "xmin3d"}], ")"}], "/", "4"}]}], ";"}],
   " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"grid", " ", "cell", " ", "size"}], ",", " ", 
    RowBox[{
    "scaled", " ", "in", " ", "order", " ", "to", " ", "always", " ", "hav", 
     " ", "ethe", " ", "same", " ", "number", " ", "of", " ", "cells"}]}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7584446844575644`*^9, 3.7584447101938996`*^9}, {
   3.7584492950458326`*^9, 3.7584492962373123`*^9}, {3.7584517280022936`*^9, 
   3.7584517293694887`*^9}, 3.758452882721119*^9, {3.758452947544653*^9, 
   3.7584529500726852`*^9}, {3.758453417897399*^9, 3.758453418175814*^9}, {
   3.7584538849673314`*^9, 3.7584538853599215`*^9}, {3.7584539379131575`*^9, 
   3.7584539490948534`*^9}, 3.7585175959122066`*^9, {3.7585176308434596`*^9, 
   3.7585176308444514`*^9}, {3.7995544296280746`*^9, 3.799554449433928*^9}, {
   3.7996050390454545`*^9, 3.7996050949846444`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pianopts", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "y", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "x", ",", " ", "xmin3d", ",", " ", "xmax3d", ",", " ", "passo"}], "}"}],
      ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "y", ",", " ", "ymin3d", ",", " ", "ymax3d", ",", " ", "passo"}], 
      "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584517173948603`*^9, 3.758451736337632*^9}, 
   3.7585175959122066`*^9, {3.7585176308464546`*^9, 3.7585176308474655`*^9}, {
   3.7995544355462923`*^9, 3.799554436090897*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "graphic", " ", "representation", " ", "of", " ", "the", " ", "defined", 
   " ", "grid"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799605107229374*^9, 3.7996051339497194`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"piano", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{"Graphics3D", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"LightGray", ",", " ", 
            RowBox[{"Line", "[", "#", "]"}]}], "}"}], " ", "&"}], ",", " ", 
         "pianopts"}], "]"}], ",", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Gray", ",", " ", 
            RowBox[{"Line", "[", "#", "]"}]}], "}"}], " ", "&"}], ",", " ", 
         RowBox[{"Transpose", "[", "pianopts", "]"}]}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.75845183820993*^9, 3.7584518427129583`*^9}, {
   3.7584532312645607`*^9, 3.758453231852436*^9}, 3.7585175959122066`*^9, {
   3.758517630849468*^9, 3.758517630849468*^9}, {3.799554441389098*^9, 
   3.7995544422715807`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Base", "Subsection",
 CellChangeTimes->{{3.799605657930059*^9, 3.7996056749619045`*^9}, 
   3.799605731042144*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"sphere", " ", "representing", " ", "L5"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799605682144755*^9, 3.7996057065110683`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rbase", " ", "=", " ", "0.08"}], ";"}]], "Input",
 CellChangeTimes->{{3.7996058165351706`*^9, 3.7996058253416543`*^9}, 
   3.7996059881553683`*^9, {3.7996060262169495`*^9, 3.799606027250187*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"base", " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Gray", ",", " ", 
      RowBox[{"Opacity", "[", "0.9", "]"}], ",", " ", 
      RowBox[{"Specularity", "[", 
       RowBox[{"White", ",", " ", "30"}], "]"}], ",", " ", 
      RowBox[{"Sphere", "[", 
       RowBox[{"L5Pos", ",", " ", "rbase"}], "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7996057939614596`*^9, 3.7996058951325936`*^9}, {
  3.7996059896664653`*^9, 3.7996059905383673`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Robot", "Subsection",
 CellChangeTimes->{{3.758444861892532*^9, 3.7584448692895813`*^9}, {
   3.7585176308755302`*^9, 3.758517630876523*^9}, 3.7585180793097944`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Position", " ", "and", " ", "orientation", " ", "of", " ", "each", " ", 
   RowBox[{"joints", "'"}], " ", "node", " ", "of", " ", "the", " ", "ARM"}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799554816230855*^9, 3.7995548377576766`*^9}, {
  3.7996051488393087`*^9, 3.799605184974879*^9}}],

Cell[CellGroupData[{

Cell["Points evaluation", "Subsubsection",
 CellChangeTimes->{{3.758446247865548*^9, 3.758446258521407*^9}, {
   3.758517630877533*^9, 3.758517630878525*^9}, 3.758518083491593*^9, {
   3.7995552555332527`*^9, 3.7995552599581165`*^9}, {3.7996051938088098`*^9, 
   3.799605210640741*^9}, 3.7996054988895254`*^9, 3.800264642104937*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg1r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg1r", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.7995565410114927`*^9}, {
   3.799556671211336*^9, 3.799556671260236*^9}, 3.799560468663576*^9, 
   3.7995775192229996`*^9, 3.7995776259495974`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg2r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg2r", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.7995565448684535`*^9}, {
   3.799556685195239*^9, 3.7995566856639504`*^9}, 3.799560470491392*^9, 
   3.7995775206575146`*^9, 3.7995776239191456`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg3r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg3r", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.7995565673965254`*^9}, {
   3.7995566899731703`*^9, 3.7995566996699953`*^9}, {3.7995604723173823`*^9, 
   3.7995604737157855`*^9}, 3.7995775262938952`*^9, 3.799577621934637*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg4r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg4r", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.7995565718991165`*^9}, {
   3.7995566950520897`*^9, 3.799556695276327*^9}, 3.7995604756072955`*^9, 
   3.79957752887033*^9, 3.7995776188966045`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg5r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg5r", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.799556581565198*^9}, {
   3.7995567081012883`*^9, 3.7995567161973715`*^9}, 3.7995604769767256`*^9, 
   3.7995775304843326`*^9, 3.7995776167420025`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg6r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg6r", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.799556589897834*^9}, 
   3.799556717612341*^9, {3.799556747838355*^9, 3.7995567492761426`*^9}, 
   3.7995604784228716`*^9, 3.799577531655269*^9, 3.7995776125771427`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg7r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg7r", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799554991959058*^9, 3.799554994062825*^9}, 
   3.7995550787365417`*^9, {3.7995554495409145`*^9, 3.7995554570830665`*^9}, {
   3.7995565967351284`*^9, 3.7995566171654387`*^9}, {3.7995567195720625`*^9, 
   3.799556721225299*^9}, {3.7995567540917625`*^9, 3.79955675560159*^9}, 
   3.7995604798484488`*^9, {3.799577532583293*^9, 3.799577536215905*^9}, 
   3.7995776100567117`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg8r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg8r", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995549963258677`*^9, 3.7995549976060557`*^9}, 
   3.7995550821907005`*^9, {3.799555462468993*^9, 3.799555467926289*^9}, {
   3.7995566202532516`*^9, 3.7995566492262435`*^9}, {3.7995567237260084`*^9, 
   3.799556727850706*^9}, {3.799556760956691*^9, 3.799556761769518*^9}, 
   3.7995604815912666`*^9, 3.7995775376006823`*^9, 3.7995776030322933`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg9r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg9r", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799554999873102*^9, 3.799555003002037*^9}, 
   3.7995550853181353`*^9, {3.799555474222129*^9, 3.7995554791602144`*^9}, {
   3.799556644787017*^9, 3.79955665377149*^9}, {3.799556732028022*^9, 
   3.799556734134289*^9}, {3.7995567688698463`*^9, 3.799556769437339*^9}, 
   3.79956048324568*^9, 3.799577540253996*^9, 3.799577599208655*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg10r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg10r", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995550051530223`*^9, 3.7995550084579816`*^9}, 
   3.7995550874084764`*^9, {3.7995554846984434`*^9, 3.7995554910566845`*^9}, {
   3.7995566582029877`*^9, 3.79955666132306*^9}, {3.799556736318052*^9, 
   3.799556739483471*^9}, {3.7995567735893188`*^9, 3.799556779484175*^9}, 
   3.7995604852224417`*^9, {3.7995775415654893`*^9, 3.79957756653226*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"giuntir", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"{", "\n", "   ", 
    RowBox[{"L5Pos", ",", "\n", "   ", 
     RowBox[{"dg1r", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg2r", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg3r", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg4r", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg5r", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg6r", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg7r", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg8r", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg9r", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg10r", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}]}], "   ", "\[IndentingNewLine]", "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7266847189129505`*^9, 3.7266847442080164`*^9}, 
   3.726684883508539*^9, 3.7266849404597073`*^9, {3.726687033640834*^9, 
   3.72668714196062*^9}, {3.7268232711901693`*^9, 3.7268232712001743`*^9}, 
   3.7269299954040565`*^9, {3.7273759569210653`*^9, 3.7273759743165703`*^9}, {
   3.7274259089096193`*^9, 3.7274259098192263`*^9}, {3.758444920013405*^9, 
   3.7584449288456044`*^9}, 3.7584465676851788`*^9, {3.758446844547414*^9, 
   3.758446869258989*^9}, {3.758446991947087*^9, 3.7584470205952835`*^9}, {
   3.758447058610038*^9, 3.7584470691545696`*^9}, {3.7584471225465937`*^9, 
   3.7584471547716303`*^9}, 3.7584472067868776`*^9, {3.7584483481362257`*^9, 
   3.758448416080258*^9}, {3.758449561751462*^9, 3.758449563152675*^9}, 
   3.758517595917224*^9, {3.7585176308825407`*^9, 3.758517630883542*^9}, 
   3.7995549648837996`*^9, {3.7995567933209324`*^9, 3.7995569855554695`*^9}, 
   3.7995570751555014`*^9, 3.7995589784813333`*^9, {3.7995775461670456`*^9, 
   3.799577592407588*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Tube", "Subsubsection",
 CellChangeTimes->{{3.7584505491958447`*^9, 3.7584505539578123`*^9}, {
   3.758517630884544*^9, 3.7585176308855357`*^9}, 3.7585181048915405`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Tube", " ", "insertion", " ", "between", " ", "two", " ", "consecutive", 
   " ", "joints", " ", "in", " ", "order", " ", "to", " ", "represent", " ", 
   "the", " ", "link"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7995548425748663`*^9, 3.7995548693294554`*^9}, {
  3.799605250121704*^9, 3.799605348475289*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rrobot", " ", "=", " ", "0.05"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"human", " ", "like", " ", "arm", " ", "dimension"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.7584484414775977`*^9, 3.758448472022011*^9}, 
   3.7584490841496067`*^9, {3.7584494875167913`*^9, 3.758449516068557*^9}, {
   3.758449726725319*^9, 3.7584497268284807`*^9}, {3.7584534676166863`*^9, 
   3.7584534723908005`*^9}, 3.758453755991476*^9, 3.758517595917224*^9, {
   3.7585176308875384`*^9, 3.7585176308875384`*^9}, {3.7995573812945585`*^9, 
   3.7995573823916245`*^9}, {3.7995575064180517`*^9, 3.7995575333089833`*^9}, 
   3.799562017956095*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"robotr", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Cyan", ",", " ", 
      RowBox[{"Opacity", "[", "0.6", "]"}], ",", " ", 
      RowBox[{"Specularity", "[", 
       RowBox[{"White", ",", " ", "60"}], "]"}], ",", " ", 
      RowBox[{"CapForm", "[", "\"\<Butt\>\"", "]"}], ",", " ", 
      RowBox[{"Tube", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"giuntir", "[", 
          RowBox[{"{", 
           RowBox[{
           "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", 
            "q5", ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", 
            "q9", ",", " ", "q10"}], "}"}], "]"}], "}"}], ",", " ", 
        "rrobot"}], "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388387217459628*^9, 3.3883873142252536`*^9}, {
   3.3883873635065036`*^9, 3.388387395709628*^9}, {3.726603520596736*^9, 
   3.7266036163393707`*^9}, {3.726659704650152*^9, 3.726659715492388*^9}, {
   3.726668688970785*^9, 3.726668792453329*^9}, {3.7266745165912733`*^9, 
   3.72667451744084*^9}, {3.726685852337557*^9, 3.726685861840593*^9}, {
   3.7266863921225605`*^9, 3.726686393058156*^9}, {3.7266901939759064`*^9, 
   3.726690218520363*^9}, {3.7266905685987625`*^9, 3.726690589423765*^9}, {
   3.726830550951338*^9, 3.726830572289466*^9}, {3.7268306046048627`*^9, 
   3.726830607089507*^9}, {3.726830707060689*^9, 3.726830707800178*^9}, 
   3.726929994857152*^9, 3.758446571608865*^9, {3.758448390703678*^9, 
   3.7584484760148525`*^9}, {3.7584495947176375`*^9, 3.7584496055259*^9}, {
   3.75845045193303*^9, 3.7584504655404854`*^9}, {3.758451768682719*^9, 
   3.7584517734569283`*^9}, {3.758451846859063*^9, 3.7584518528825336`*^9}, {
   3.758451902946669*^9, 3.758451944402688*^9}, {3.75845201765088*^9, 
   3.7584521016889935`*^9}, {3.758452344571225*^9, 3.7584523454221473`*^9}, 
   3.7584545584158487`*^9, 3.7585175959182253`*^9, {3.7585176308895416`*^9, 
   3.7585176308895416`*^9}, {3.7995572087370386`*^9, 3.799557241622786*^9}, {
   3.79957881426075*^9, 3.7995788260549035`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Reference frames", "Subsection",
 CellChangeTimes->{{3.758454061371934*^9, 3.758454073822502*^9}, {
   3.758517630891545*^9, 3.758517630891545*^9}, 3.758518114296491*^9, {
   3.7996043520019464`*^9, 3.7996043606267147`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "three", " ", "different", " ", "reference", " ", "frames", " ", "will", 
    " ", "be", " ", 
    RowBox[{"plotted", ":", " ", "Base"}]}], ",", " ", 
   RowBox[{
    RowBox[{"Right", " ", "end"}], "-", 
    RowBox[{"effector", " ", "and", " ", "left", " ", "end"}], "-", 
    "effector"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7995577966021204`*^9, 3.7995578514236774`*^9}, {
  3.799557881720303*^9, 3.7995579174761887`*^9}, {3.7995579650326767`*^9, 
  3.7995579700338974`*^9}, {3.7996053658902574`*^9, 3.7996054235033293`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Reference", " ", "frame", " ", "representation"}], ",", " ", 
   RowBox[{"drawed", " ", "using", " ", 
    RowBox[{"(", 
     RowBox[{"0", ",", "0", ",", "0"}], ")"}], " ", "as", " ", "origin", " ", 
    "and", " ", 
    RowBox[{"(", 
     RowBox[{"x", ",", " ", "y", ",", " ", "z"}], ")"}], " ", "as", " ", 
    "axis", " ", 
    RowBox[{"directions", "."}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7995581676460257`*^9, 3.79955822512317*^9}, {
  3.799558280287505*^9, 3.799558332033263*^9}, {3.7996054392500286`*^9, 
  3.7996054770476027`*^9}, {3.7996055459101095`*^9, 3.7996056049993773`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"lf", " ", "=", " ", "0.25"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"reference", " ", "frame", " ", "axis", " ", "length"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"e1d", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"lf", ",", " ", "0", ",", " ", "0", ",", " ", "1"}], "}"}]}], ";",
   " ", 
  RowBox[{"e2d", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "lf", ",", " ", "0", ",", " ", "1"}], "}"}]}], ";",
   " ", 
  RowBox[{"e3d", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "0", ",", " ", "lf", ",", " ", "1"}], "}"}]}], ";",
   " ", 
  RowBox[{"Orig", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "0", ",", " ", "0", ",", " ", "1"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Ox", " ", "=", " ", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"#", ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"Orig", ",", " ", "e1d"}], "}"}], "]"}]}], ",", " ", 
       RowBox[{"-", "1"}]}], "]"}], "]"}], " ", "&"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Oy", " ", "=", " ", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"#", ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"Orig", ",", " ", "e2d"}], "}"}], "]"}]}], ",", " ", 
       RowBox[{"-", "1"}]}], "]"}], "]"}], " ", "&"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Oz", " ", "=", " ", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"#", ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"Orig", ",", " ", "e3d"}], "}"}], "]"}]}], ",", " ", 
       RowBox[{"-", "1"}]}], "]"}], "]"}], " ", "&"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Otot", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Ox", "[", "#", "]"}], ",", " ", 
      RowBox[{"Oy", "[", "#", "]"}], ",", " ", 
      RowBox[{"Oz", "[", "#", "]"}]}], "}"}], " ", "&"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7584540756592607`*^9, 3.7584541104512215`*^9, {3.75845417491347*^9, 
   3.758454175064698*^9}, {3.758454225591584*^9, 3.7584542412960377`*^9}, {
   3.7584543416649823`*^9, 3.7584543458242054`*^9}, {3.7584543786572523`*^9, 
   3.75845438956558*^9}, {3.758514291442034*^9, 3.758514291495659*^9}, 
   3.7585175959182253`*^9, {3.7585176308935475`*^9, 3.758517630894559*^9}, {
   3.7996036507707477`*^9, 3.79960365099415*^9}, {3.799605623698656*^9, 
   3.7996056353964677`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "\"\<Reference frame\>\"", " ", "representation", " ", "draws", " ", 
    RowBox[{"over", ":", " ", "base"}]}], ",", " ", 
   RowBox[{
    RowBox[{"right", " ", "end"}], "-", 
    RowBox[{"effector", " ", "and", " ", "left", " ", "end"}], "-", 
    "effector"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799558230450033*^9, 3.7995582724842033`*^9}, {
  3.799606173181046*^9, 3.7996062422515087`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rifg", " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", " ", "Thick", ",", " ", 
      RowBox[{"Line", " ", "/@", " ", 
       RowBox[{"Otot", "@", "Tg"}]}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758454146435915*^9, 3.758454153680745*^9}, {
   3.7584542206952753`*^9, 3.758454222366768*^9}, 3.758517595919227*^9, {
   3.758517630896552*^9, 3.758517630896552*^9}, 3.7995583471550026`*^9, {
   3.7995583793370485`*^9, 3.7995583807166047`*^9}, 3.7995592341587534`*^9, {
   3.7995593885140667`*^9, 3.799559389382522*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rifEEr", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", ":=", "  ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", "Thick", ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"Ox", "@", 
          RowBox[{"TgEEr", "[", 
           RowBox[{"{", 
            RowBox[{
            "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", 
             "q5", ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", 
             "q9", ",", " ", "q10"}], "}"}], "]"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", " ", "Thick", ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"Oy", "@", 
          RowBox[{"TgEEr", "[", 
           RowBox[{"{", 
            RowBox[{
            "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", 
             "q5", ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", 
             "q9", ",", " ", "q10"}], "}"}], "]"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", "Thick", ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"Oz", "@", 
          RowBox[{"TgEEr", "[", 
           RowBox[{"{", 
            RowBox[{
            "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", 
             "q5", ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", 
             "q9", ",", " ", "q10"}], "}"}], "]"}]}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758454223810932*^9, 3.7584542954229145`*^9}, 
   3.7584544912232094`*^9, {3.758454531264327*^9, 3.7584545328106346`*^9}, {
   3.7584548287423778`*^9, 3.758454837118907*^9}, {3.7584551234218874`*^9, 
   3.7584551272185493`*^9}, 3.758517595919227*^9, {3.7585176308985553`*^9, 
   3.7585176308995667`*^9}, {3.799558034121118*^9, 3.7995580752467394`*^9}, 
   3.799558367074365*^9, {3.799578839275694*^9, 3.799578850032714*^9}, {
   3.8000833706813717`*^9, 3.800083503025489*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"x", ":", " ", "red"}], ",", " ", 
   RowBox[{"y", ":", " ", "green"}], ",", " ", 
   RowBox[{"z", ":", " ", "blue"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7996062991155577`*^9, 3.7996063653108654`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"riftimeEEr", "[", "time_", "]"}], " ", ":=", " ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", " ", "Thick", ",", " ", 
         RowBox[{"Line", " ", "[", " ", 
          RowBox[{"Ox", "@", 
           RowBox[{"TEEr", "[", "time", "]"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Green", ",", " ", "Thick", ",", " ", 
         RowBox[{"Line", " ", "[", " ", 
          RowBox[{"Oy", "@", 
           RowBox[{"TEEr", "[", "time", "]"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", " ", "Thick", ",", " ", 
         RowBox[{"Line", " ", "[", " ", 
          RowBox[{"Oz", "@", 
           RowBox[{"TEEr", "[", "time", "]"}]}], "]"}]}], "}"}]}], "}"}], 
     "]"}]}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.7995983018200836`*^9, 3.799598385862299*^9}, {
  3.7996001058517942`*^9, 3.7996001062537394`*^9}, {3.799602771701958*^9, 
  3.7996027889106617`*^9}, {3.7996034061111298`*^9, 3.799603435052307*^9}, {
  3.7996034785594873`*^9, 3.79960349016494*^9}, {3.7996036333747563`*^9, 
  3.7996036350131326`*^9}, {3.7996063746484995`*^9, 3.7996063792027254`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Assiemi", "Subsection",
 CellChangeTimes->{{3.7584540466319327`*^9, 3.7584540564275503`*^9}, {
   3.758517630909581*^9, 3.758517630909581*^9}, 3.7585181411124277`*^9, 
   3.7995789998624763`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Put", " ", "all", " ", "defined", " ", "elements", " ", "together"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.799606406005705*^9, 3.7996064225276966`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"assiemer", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"base", ",", "rifg", ",", " ", 
     RowBox[{"rifEEr", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", " ", "piano", ",", " ", 
     RowBox[{"robotr", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.726668849273992*^9, 3.726668893109749*^9}, {
   3.7266689683834524`*^9, 3.726668970437522*^9}, {3.7266710865060577`*^9, 
   3.726671144960312*^9}, {3.726671462042482*^9, 3.726671466184244*^9}, {
   3.726673327873646*^9, 3.726673344795654*^9}, {3.7266733750708475`*^9, 
   3.7266733782829914`*^9}, {3.726673419669597*^9, 3.726673523753719*^9}, 
   3.7266735596886907`*^9, {3.7266736325943213`*^9, 3.726673671999606*^9}, {
   3.726674698332423*^9, 3.726674711439005*^9}, {3.7266752410774755`*^9, 
   3.7266752412450886`*^9}, {3.726675400366004*^9, 3.726675410987362*^9}, {
   3.726675538512786*^9, 3.726675562870107*^9}, {3.7266757251446867`*^9, 
   3.726675737221407*^9}, {3.72667962599102*^9, 3.726679626148626*^9}, 
   3.7266815179301023`*^9, {3.726681547954712*^9, 3.726681548139306*^9}, 
   3.7266815805046234`*^9, {3.7266816183076706`*^9, 3.7266816394174185`*^9}, {
   3.726681761461356*^9, 3.7266818009632635`*^9}, {3.7266828704116745`*^9, 
   3.72668287875696*^9}, {3.7266831172419806`*^9, 3.7266831199943943`*^9}, {
   3.7266839275827093`*^9, 3.7266839278218327`*^9}, {3.7266839735172997`*^9, 
   3.7266839736753826`*^9}, {3.726684027609081*^9, 3.726684028651618*^9}, {
   3.726689396547146*^9, 3.7266893981191783`*^9}, {3.7266894354917593`*^9, 
   3.726689463720324*^9}, {3.7266901981559563`*^9, 3.726690201384021*^9}, {
   3.7266902360141573`*^9, 3.7266902390222583`*^9}, {3.726690537558139*^9, 
   3.7266905478903875`*^9}, {3.7266905894357643`*^9, 
   3.7266905894357643`*^9}, {3.7266913409657493`*^9, 
   3.7266913494419203`*^9}, {3.7266918944867463`*^9, 3.726691895278776*^9}, {
   3.72669425698475*^9, 3.7266943026162233`*^9}, {3.726766971290201*^9, 
   3.726766974948645*^9}, {3.726922077783863*^9, 3.726922078487333*^9}, {
   3.726922243427335*^9, 3.7269222551541576`*^9}, {3.7584485081590123`*^9, 
   3.758448531677947*^9}, 3.758450262036567*^9, {3.7584528445294437`*^9, 
   3.758452846021093*^9}, {3.75845328284031*^9, 3.7584532846369896`*^9}, 
   3.758453618624933*^9, {3.758453868199692*^9, 3.7584538717549973`*^9}, {
   3.7584541668964834`*^9, 3.7584541685068884`*^9}, {3.758454300839019*^9, 
   3.758454306415342*^9}, 3.7584545125282917`*^9, {3.758454660959011*^9, 
   3.758454697238983*^9}, 3.758455117978707*^9, {3.7584619916617537`*^9, 
   3.7584619934574356`*^9}, 3.7585175959212294`*^9, {3.7585176309115844`*^9, 
   3.758517630912586*^9}, {3.799558505262986*^9, 3.799558533055313*^9}, {
   3.79955858344193*^9, 3.799558611634635*^9}, {3.799558644625424*^9, 
   3.7995586453546486`*^9}, {3.799558695849804*^9, 3.7995587142327876`*^9}, {
   3.799562350976088*^9, 3.799562358491709*^9}, 3.7995774965747547`*^9, {
   3.799577767333685*^9, 3.7995777706010094`*^9}, {3.799577813596859*^9, 
   3.799577815971959*^9}, {3.799605912027192*^9, 3.799605912331339*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Animation and 3D Plots", "Section",
 CellChangeTimes->{{3.7584504746517305`*^9, 3.7584504754715495`*^9}, {
   3.758450651427134*^9, 3.7584506581002417`*^9}, {3.7585176309206*^9, 
   3.75851763092159*^9}, 3.7585181474720097`*^9, {3.7995647031626077`*^9, 
   3.7995647087936797`*^9}, {3.799586643898427*^9, 3.7995866585513306`*^9}, {
   3.7999344494450493`*^9, 3.799934452263769*^9}, {3.80007264619711*^9, 
   3.80007266172479*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"riftimeEEr", "[", "time", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xmin3d", ",", " ", "xmax3d"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"ymin3d", ",", " ", "ymax3d"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"zmin3d", ",", " ", "zmax3d"}], "}"}]}], "}"}]}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Boxed", " ", "->", " ", "False"}], ",", " ", 
     RowBox[{"AxesLabel", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
       "}"}]}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"ViewPoint", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "t0", ",", " ", "\"\<Time\>\""}], "}"}], ",", "t0",
      ",", "tend"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.799598421320098*^9, 3.7995985562119446`*^9}, {
   3.799598596521023*^9, 3.7995986002454357`*^9}, {3.799599272621426*^9, 
   3.7995993431364336`*^9}, 3.7996020403117795`*^9, 3.7996024191982484`*^9, 
   3.7996025364974527`*^9, 3.799602590974831*^9, {3.799602658829427*^9, 
   3.7996026649579344`*^9}, {3.799606617073227*^9, 3.799606643460726*^9}, {
   3.7999006837722692`*^9, 3.7999007228429375`*^9}, {3.7999007568270483`*^9, 
   3.7999007829795017`*^9}, {3.799900998427977*^9, 3.7999010002997746`*^9}, {
   3.8000735276152616`*^9, 3.800073529078804*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`time$$ = Rational[1, 60], Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`time$$], 
       Rational[1, 60], "Time"}, 
      Rational[1, 60], 3}}, Typeset`size$$ = {774., {322., 333.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`time$1352243$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`time$$ = Rational[1, 60]}, 
      "ControllerVariables" :> {
        Hold[$CellContext`time$$, $CellContext`time$1352243$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        $CellContext`riftimeEEr[$CellContext`time$$], 
        PlotRange -> {{$CellContext`xmin3d, $CellContext`xmax3d}, \
{$CellContext`ymin3d, $CellContext`ymax3d}, {$CellContext`zmin3d, \
$CellContext`zmax3d}}, Boxed -> False, AxesLabel -> {"x", "y", "z"}, 
        ViewPoint -> {1, 1, 1}], "Specifications" :> {{{$CellContext`time$$, 
          Rational[1, 60], "Time"}, 
         Rational[1, 60], 3}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{872., {409., 421.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.800073531627876*^9, 3.800074861765897*^9, 
  3.8000772069619384`*^9, 3.800079412561638*^9, 3.8000803239608836`*^9, 
  3.800081838243891*^9, 3.800205454906562*^9, 3.8002056221613054`*^9, 
  3.800208722912893*^9, 3.800209029964881*^9, 3.8002095125352535`*^9, 
  3.800255442641942*^9, 3.800255473263584*^9, 3.800255828684458*^9, 
  3.8002652607492685`*^9, 3.800439071204295*^9, 3.800441914773921*^9, 
  3.802092635250804*^9, 3.8020934962005005`*^9, 3.8020944276211777`*^9, 
  3.8020950450963373`*^9, 3.8020956420992317`*^9, 3.8020968688840723`*^9, 
  3.802099502393592*^9, 3.8021042613172398`*^9, 3.8021094818981915`*^9, 
  3.80214679513136*^9, 3.8021473380417337`*^9, 3.8021478908988953`*^9, 
  3.8021555956546116`*^9, 3.8021567981471415`*^9, 3.8021576220264783`*^9, 
  3.802158290916873*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"assiemer", "[", 
       RowBox[{"{", 
        RowBox[{
        "q1r", ",", " ", "q2r", ",", " ", "q3r", ",", " ", "q4r", ",", " ", 
         "q5r", ",", " ", "q6r", ",", " ", "q7r", ",", " ", "q8r", ",", " ", 
         "q9r", ",", " ", "q10r"}], "}"}], "]"}], ",", " ", 
      RowBox[{"PlotRange", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin3d", ",", " ", "xmax3d"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"ymin3d", ",", " ", "ymax3d"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"zmin3d", ",", " ", "zmax3d"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"Boxed", " ", "->", " ", "False"}], ",", " ", 
      RowBox[{"AxesLabel", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
        "}"}]}], ",", " ", 
      RowBox[{"ViewPoint", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "2"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q1r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q2r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q3r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q4r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q5r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q6r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q7r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q8r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q9r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q10r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}]}], " ", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7995615384416866`*^9, 3.7995615389673147`*^9}, {
   3.7995640619450254`*^9, 3.799564070893553*^9}, {3.7995641479028344`*^9, 
   3.799564173867876*^9}, {3.799577803098279*^9, 3.7995778074605293`*^9}, 
   3.799577864872572*^9, {3.7995825805449653`*^9, 3.7995826105118427`*^9}, 
   3.7996059618338966`*^9, 3.799606110516128*^9, {3.8002554783292274`*^9, 
   3.8002554822022095`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "right", " ", "hand", " ", "animation", " ", "of", " ", "inverse", " ", 
   "kine", " ", "solution", " ", "and", " ", "desired", " ", "trajectory", 
   " ", "to", " ", "be", " ", "followed"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7999344574839635`*^9, 3.799934504282265*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"animationr", " ", "=", " ", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"Show", "[", "\n", "   ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"assiemer", " ", "[", 
        RowBox[{"qsolr", "[", "time", "]"}], "]"}], "}"}], ",", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{"ParametricPlot3D", "[", 
        RowBox[{
         RowBox[{"posr", "[", "k", "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"k", ",", " ", "t0", ",", " ", "time"}], "}"}], ",", "\n", 
         "     \t\t\t", 
         RowBox[{"PlotPoints", " ", "->", " ", "500"}], ",", "\n", 
         "     \t\t\t", 
         RowBox[{"MaxRecursion", " ", "->", " ", "13"}]}], "\n", 
        "     \t\t\t", "]"}], "}"}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Desired", " ", "Trajectory"}], " ", "*)"}], ",", "\n", "   ", 
      RowBox[{"PlotRange", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin3d", ",", " ", "xmax3d"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"ymin3d", ",", " ", "ymax3d"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"zmin3d", ",", " ", "zmax3d"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"Boxed", " ", "->", " ", "False"}], ",", " ", 
      RowBox[{"AxesLabel", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
        "}"}]}], ",", " ", 
      RowBox[{"ViewPoint", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0.5"}], "}"}]}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"time", ",", " ", 
      RowBox[{"t0", " ", "+", " ", "0.01"}], ",", " ", 
      RowBox[{"tend", " ", "-", " ", "0.01"}], ",", " ", "0.0001"}], "}"}]}], 
   "]"}], " "}]], "Input",
 CellChangeTimes->{{3.758450660493008*^9, 3.758450665333894*^9}, {
   3.7584507189000864`*^9, 3.7584507568909426`*^9}, {3.7584508307551413`*^9, 
   3.7584508325273056`*^9}, {3.7584508898116407`*^9, 
   3.7584509168272314`*^9}, {3.758452221746763*^9, 3.7584523248423505`*^9}, 
   3.758452469562991*^9, {3.7584554540702825`*^9, 3.7584554619740553`*^9}, {
   3.7584555647988544`*^9, 3.7584556334866343`*^9}, 3.7584556794953566`*^9, {
   3.758455725999753*^9, 3.7584557282791667`*^9}, 3.758455765135393*^9, 
   3.758459655825858*^9, {3.758459707466715*^9, 3.7584597092984505`*^9}, {
   3.7584622118968573`*^9, 3.7584622135352993`*^9}, {3.758462748942848*^9, 
   3.758462751693962*^9}, 3.758514149810066*^9, {3.758514249873308*^9, 
   3.7585142712175846`*^9}, {3.7585163893843803`*^9, 
   3.7585164024550133`*^9}, {3.7585170979334493`*^9, 
   3.7585171116366544`*^9}, {3.758517460445441*^9, 3.758517465232693*^9}, 
   3.7585175959242344`*^9, {3.7585176309235926`*^9, 3.7585176309235926`*^9}, {
   3.7585187414119415`*^9, 3.7585187418674216`*^9}, {3.7585193865541725`*^9, 
   3.75851939601441*^9}, {3.7585196669616184`*^9, 3.758519668570157*^9}, {
   3.7585197348267794`*^9, 3.758519771386014*^9}, {3.7585198146905413`*^9, 
   3.758519902719034*^9}, {3.7585199813302794`*^9, 3.758520004229389*^9}, {
   3.799930767806364*^9, 3.7999308056355867`*^9}, {3.7999308595044117`*^9, 
   3.7999308923598814`*^9}, {3.7999309294529963`*^9, 
   3.7999309691198783`*^9}, {3.7999311007828693`*^9, 
   3.7999311143317113`*^9}, {3.799931144362832*^9, 3.7999311492768984`*^9}, {
   3.799931299504156*^9, 3.7999313049177704`*^9}, {3.7999313361398125`*^9, 
   3.79993135163671*^9}, {3.7999313877994356`*^9, 3.7999314170988245`*^9}, {
   3.7999314644545035`*^9, 3.7999315459590054`*^9}, {3.79993415721865*^9, 
   3.7999341685021353`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`time$$ = 0.026666666666666665`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`time$$], 0.026666666666666665`, 2.99, 0.0001}}, 
    Typeset`size$$ = {774., {282., 292.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`time$1352260$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`time$$ = 0.026666666666666665`}, 
      "ControllerVariables" :> {
        Hold[$CellContext`time$$, $CellContext`time$1352260$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[{
         $CellContext`assiemer[
          $CellContext`qsolr[$CellContext`time$$]]}, {
         ParametricPlot3D[
          $CellContext`posr[$CellContext`k], {$CellContext`k, \
$CellContext`t0, $CellContext`time$$}, PlotPoints -> 500, MaxRecursion -> 
          13]}, PlotRange -> {{$CellContext`xmin3d, $CellContext`xmax3d}, \
{$CellContext`ymin3d, $CellContext`ymax3d}, {$CellContext`zmin3d, \
$CellContext`zmax3d}}, Boxed -> False, AxesLabel -> {"x", "y", "z"}, 
        ViewPoint -> {1, 1, 0.5}], 
      "Specifications" :> {{$CellContext`time$$, 0.026666666666666665`, 2.99, 
         0.0001, AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{872., {359., 371.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.799980578899299*^9, 3.7999806530355735`*^9, 
  3.8000748618317003`*^9, 3.800077207019596*^9, 3.800079412656926*^9, 
  3.8000803239954777`*^9, 3.8000818382910194`*^9, 3.800205455132179*^9, 
  3.8002056222716064`*^9, 3.8002087230422473`*^9, 3.8002090300611444`*^9, 
  3.800209512642062*^9, 3.800255442734194*^9, 3.80025582874362*^9, 
  3.80026526112925*^9, 3.8004390713045692`*^9, 3.8004419148591547`*^9, 
  3.802092635318654*^9, 3.8020934962962418`*^9, 3.8020944277049537`*^9, 
  3.8020950451850996`*^9, 3.802095642193015*^9, 3.8020968690706224`*^9, 
  3.8020995026070704`*^9, 3.80210426151081*^9, 3.802109482019861*^9, 
  3.802146795249102*^9, 3.802147338139474*^9, 3.8021478910081625`*^9, 
  3.802155595711532*^9, 3.80215679822444*^9, 3.8021576221002812`*^9, 
  3.8021582909907246`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Left Arm", "Subtitle",
 CellChangeTimes->{{3.80007154154753*^9, 3.8000715542942715`*^9}, 
   3.8000718855005713`*^9}],

Cell[CellGroupData[{

Cell["Hand Trajectory definition", "Section",
 CellChangeTimes->{{3.7993046058439083`*^9, 3.799304625874298*^9}, 
   3.799557331063614*^9, {3.799585650922355*^9, 3.7995856534037204`*^9}, {
   3.7995924103469706`*^9, 3.799592423571974*^9}, {3.7996038628718615`*^9, 
   3.799603872180266*^9}, {3.7996044805695863`*^9, 3.7996045061016693`*^9}, {
   3.8000715584111514`*^9, 3.8000715631547832`*^9}, {3.800258757647496*^9, 
   3.8002587583873353`*^9}, {3.8019840862621875`*^9, 3.8019840869581227`*^9}}],

Cell["\<\
We have DT data, 60 sample each second, so we have to interpolate between \
samples because a CT trajectory is needed inside inverse kinematic algorithm.\
\>", "Text",
 CellChangeTimes->{{3.799588054364394*^9, 3.7995881156312094`*^9}, {
   3.799604597028613*^9, 3.799604627350134*^9}, 3.8002585478085833`*^9}],

Cell[CellGroupData[{

Cell["Load Data", "Subsubsection",
 CellChangeTimes->{{3.800071964951279*^9, 3.800071971302886*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"skip", " ", "first", " ", 
   RowBox[{"row", ":", " ", 
    RowBox[{"data", " ", "description"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799589168301449*^9, 3.7995891978764114`*^9}, {
  3.800258939320729*^9, 3.8002589549461174`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"handl", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{"Handl", ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995884020995655`*^9, 3.799588497471877*^9}, {
   3.7995886044323397`*^9, 3.799588693871185*^9}, {3.799588727062657*^9, 
   3.799588732938038*^9}, {3.7995888330230017`*^9, 3.799588860627429*^9}, 
   3.7995889054086866`*^9, 3.799589074789773*^9, {3.799900268074106*^9, 
   3.7999002721061306`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"handvl", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{"Handvl", ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7999002175298605`*^9, 3.7999002201863947`*^9}, {
  3.799900270545802*^9, 3.7999002744656706`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"pos", " ", "and", " ", "quat", " ", "extraction"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.799589168301449*^9, 3.7995891978764114`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataposl", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "handl", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799588550365163*^9, 3.7995885890251837`*^9}, {
  3.7995887724611464`*^9, 3.7995887886241937`*^9}, {3.7995888212040577`*^9, 
  3.7995888220175467`*^9}, {3.7995889309417973`*^9, 3.799588941370019*^9}, {
  3.7995894920774455`*^9, 3.7995894924963255`*^9}, {3.799900276617899*^9, 
  3.7999002840580425`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataquatl", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "handl", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"4", ";;", "7"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995889499033623`*^9, 3.7995889877990217`*^9}, {
  3.7995894859694967`*^9, 3.799589489930626*^9}, {3.799900277793661*^9, 
  3.799900285778366*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"datavell", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "handvl", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799588550365163*^9, 3.7995885890251837`*^9}, {
  3.7995887724611464`*^9, 3.7995887886241937`*^9}, {3.7995888212040577`*^9, 
  3.7995888220175467`*^9}, {3.7995889309417973`*^9, 3.799588941370019*^9}, {
  3.7995894920774455`*^9, 3.7995894924963255`*^9}, {3.7999001828839445`*^9, 
  3.799900200785821*^9}, {3.7999002805778227`*^9, 3.79990028692208*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataangvell", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "handvl", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"4", ";;", "6"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995889499033623`*^9, 3.7995889877990217`*^9}, {
   3.7995894859694967`*^9, 3.799589489930626*^9}, {3.7999001906099615`*^9, 
   3.7999002068899508`*^9}, {3.7999002820500317`*^9, 3.7999002879776587`*^9}, 
   3.7999003534670525`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Orientation", "Subsubsection",
 CellChangeTimes->{{3.799899607362062*^9, 3.7998996287744894`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"quat", " ", "interpolation", " ", "using", " ", "slerp"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.79958803139232*^9, 3.799588048964197*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"quatl", "[", "time_", "]"}], "=", "  ", "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"time", "\[GreaterEqual]", "tend"}], ",", " ", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"time2", " ", "=", " ", 
      RowBox[{"tend", "-", "0.001"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"Re", "[", 
      RowBox[{"Slerp", "[", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", 
          RowBox[{"Floor", "[", 
           RowBox[{"time2", "*", "samplerate"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"t", "=", 
          RowBox[{
           RowBox[{"time2", "*", " ", "samplerate"}], " ", "-", "i"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"dataquatl", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        "\t\t", 
        RowBox[{"dataquatl", "[", 
         RowBox[{"[", " ", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}], "]"}]}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"Re", "[", 
     RowBox[{"Slerp", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"time", "*", "samplerate"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"t", "=", 
         RowBox[{
          RowBox[{"time", " ", "*", " ", "samplerate"}], " ", "-", "i"}]}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"dataquatl", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"dataquatl", "[", 
        RowBox[{"[", " ", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7995894761710243`*^9, 3.799589502411525*^9}, {
   3.7995895535063667`*^9, 3.7995896795450687`*^9}, {3.799589762211838*^9, 
   3.799589833011608*^9}, {3.7995898693688555`*^9, 3.799589877777122*^9}, {
   3.7995899580985603`*^9, 3.799590052811866*^9}, {3.799590127247675*^9, 
   3.799590194329986*^9}, {3.799590282635967*^9, 3.799590302586648*^9}, {
   3.7995904317718596`*^9, 3.799590535861517*^9}, 3.799590566707635*^9, {
   3.7995906332200336`*^9, 3.7995906465985146`*^9}, {3.799590877400994*^9, 
   3.7995910269642973`*^9}, {3.79959106322342*^9, 3.799591068054925*^9}, {
   3.799591124003354*^9, 3.799591124855937*^9}, 3.7995922105951996`*^9, {
   3.7995922663008738`*^9, 3.7995922823955956`*^9}, {3.799598854873976*^9, 
   3.799598863326732*^9}, 3.799979685035762*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"time", "\[GreaterEqual]", "3"}], ",", 
   RowBox[{
    RowBox[{"time2", "=", 
     RowBox[{"tend", "-", "0.001`"}]}], ";", 
    RowBox[{"Re", "[", 
     RowBox[{"Slerp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"time2", " ", "samplerate"}], "]"}]}], ";", 
        RowBox[{"t", "=", 
         RowBox[{
          RowBox[{"time2", " ", "samplerate"}], "-", "i"}]}], ";", 
        RowBox[{
        "dataquatl", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
        ",", 
       RowBox[{"dataquatl", "\[LeftDoubleBracket]", 
        RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], "]"}],
      "]"}]}], ",", 
   RowBox[{"Re", "[", 
    RowBox[{"Slerp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time", " ", "samplerate"}], "]"}]}], ";", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time", " ", "samplerate"}], "-", "i"}]}], ";", 
       RowBox[{
       "dataquatl", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"dataquatl", "\[LeftDoubleBracket]", 
       RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], "]"}], 
    "]"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.800265262021738*^9, 3.80043907139132*^9, 3.800441915021114*^9, 
   3.8019813347628727`*^9, 3.8019835478732743`*^9, {3.8019840889230747`*^9, 
   3.801984092214176*^9}, 3.80198462715256*^9, 3.8019886463204527`*^9, 
   3.801989057658139*^9, 3.8019895479990234`*^9, 3.802001148628807*^9, 
   3.8020926354782577`*^9, 3.8020934964757624`*^9, 3.802094427878791*^9, 
   3.8020950453697014`*^9, 3.8020956423646064`*^9, 3.8020968695504737`*^9, 
   3.8020995031446195`*^9, 3.802104261867636*^9, 3.8021094822110553`*^9, 
   3.8021467954817047`*^9, 3.8021473382985544`*^9, 3.802147891297552*^9, 
   3.802155595835131*^9, 3.8021567984628024`*^9, 3.8021576222688303`*^9, 
   3.8021582911549397`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Position", "Subsubsection",
 CellChangeTimes->{{3.7998996361214857`*^9, 3.7998996438753633`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"position", " ", "linear", " ", "interpolation"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.799589449382847*^9, 3.7995894561919575`*^9}, {
  3.7995911826974335`*^9, 3.799591184586772*^9}, {3.8002590408018503`*^9, 
  3.8002590414900026`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"posl", "[", "time_", "]"}], "=", "  ", "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"time", "\[GreaterEqual]", "tend"}], ",", " ", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"time2", " ", "=", " ", 
      RowBox[{"tend", "-", "0.001"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"time2", "*", "samplerate"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"t", "=", 
         RowBox[{
          RowBox[{"time2", "*", " ", "samplerate"}], " ", "-", "i"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"dataposl", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"dataposl", "[", 
        RowBox[{"[", " ", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time", "*", "samplerate"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time", " ", "*", " ", "samplerate"}], " ", "-", "i"}]}], 
       ";", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"dataposl", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"dataposl", "[", 
       RowBox[{"[", " ", 
        RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7995894761710243`*^9, 3.799589502411525*^9}, {
   3.7995895535063667`*^9, 3.7995896795450687`*^9}, {3.799589762211838*^9, 
   3.799589833011608*^9}, {3.7995898693688555`*^9, 3.799589877777122*^9}, {
   3.7995899580985603`*^9, 3.799590052811866*^9}, {3.799590127247675*^9, 
   3.799590194329986*^9}, {3.799590282635967*^9, 3.799590302586648*^9}, {
   3.7995904317718596`*^9, 3.799590535861517*^9}, 3.799590566707635*^9, {
   3.7995906332200336`*^9, 3.7995906465985146`*^9}, {3.799590877400994*^9, 
   3.7995910269642973`*^9}, {3.79959106322342*^9, 3.799591068054925*^9}, {
   3.799591124003354*^9, 3.7995911458632956`*^9}, {3.799592047956257*^9, 
   3.7995920660904913`*^9}, {3.7995922964536724`*^9, 3.799592310587088*^9}, 
   3.7999028436234694`*^9, 3.799905171931676*^9, 3.7999796876597166`*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"time", "\[GreaterEqual]", "3"}], ",", 
   RowBox[{
    RowBox[{"time2", "=", 
     RowBox[{"tend", "-", "0.001`"}]}], ";", 
    RowBox[{"InterpLin", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time2", " ", "samplerate"}], "]"}]}], ";", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time2", " ", "samplerate"}], "-", "i"}]}], ";", 
       RowBox[{
       "dataposl", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"dataposl", "\[LeftDoubleBracket]", 
       RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], 
     "]"}]}], ",", 
   RowBox[{"InterpLin", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{"time", " ", "samplerate"}], "]"}]}], ";", 
      RowBox[{"t", "=", 
       RowBox[{
        RowBox[{"time", " ", "samplerate"}], "-", "i"}]}], ";", 
      RowBox[{
      "dataposl", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
     ",", 
     RowBox[{"dataposl", "\[LeftDoubleBracket]", 
      RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], "]"}]}],
   "]"}]], "Output",
 CellChangeTimes->{
  3.8002652621523895`*^9, 3.800439071418394*^9, 3.8004419150411687`*^9, 
   3.801981334803985*^9, 3.8019835479068666`*^9, {3.8019840889631834`*^9, 
   3.80198409227384*^9}, 3.8019846271861515`*^9, 3.8019886463435154`*^9, 
   3.8019890576822042`*^9, 3.8019895480215855`*^9, 3.8020011486548786`*^9, 
   3.8020926355191264`*^9, 3.8020934965114346`*^9, 3.8020944279236765`*^9, 
   3.802095045410592*^9, 3.8020956423984814`*^9, 3.8020968696212816`*^9, 
   3.8020995032653112`*^9, 3.8021042619680367`*^9, 3.8021094822519855`*^9, 
   3.8021467955365334`*^9, 3.802147338335456*^9, 3.8021478913325186`*^9, 
   3.802155595864092*^9, 3.8021567985036926`*^9, 3.8021576223077803`*^9, 
   3.802158291196827*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Homogeneous Transform", "Subsubsection",
 CellChangeTimes->{{3.7998997395542235`*^9, 3.799899750743788*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"RotX", "[", 
    RowBox[{
     RowBox[{"-", "Pi"}], "/", "2"}], "]"}], ":", " ", 
   RowBox[{
   "to", " ", "reorient", " ", "data", " ", "from", " ", "local", " ", 
    "Xsens", " ", "frame", " ", 
    RowBox[{"(", 
     RowBox[{"IMU", " ", "frame"}], ")"}], " ", "to", " ", "global", " ", 
    "frame"}]}], "  ", "*)"}]], "Input",
 CellChangeTimes->{{3.7996000241628237`*^9, 3.799600062579359*^9}, {
  3.799604706775385*^9, 3.799604740100288*^9}, {3.799604772908438*^9, 
  3.7996048196097355`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"REEl", "[", "time_", "]"}], " ", "=", 
   RowBox[{
    RowBox[{"QuatToMat", "[", 
     RowBox[{"quatl", "[", "time", "]"}], "]"}], ".", 
    RowBox[{"RotX", "[", 
     RowBox[{
      RowBox[{"-", "Pi"}], "/", "2"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799926110072509*^9, 3.7999261379104223`*^9}, 
   3.7999796904188757`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TEEl", "[", "time_", "]"}], " ", "=", " ", 
    RowBox[{"RPToHomogeneous", "[", 
     RowBox[{
      RowBox[{"REEl", "[", "time", "]"}], ",", 
      RowBox[{"posl", "[", "time", "]"}]}], "]"}]}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.7995980388835707`*^9, 3.7995980440614824`*^9}, {
   3.7995991466378365`*^9, 3.7995991541079454`*^9}, {3.799599929262398*^9, 
   3.7995999472135625`*^9}, {3.7996000086224403`*^9, 3.7996000159383893`*^9}, 
   3.799600074693929*^9, {3.7996023007688084`*^9, 3.799602313640631*^9}, {
   3.799926133795458*^9, 3.799926148398514*^9}, 3.799979691082876*^9}],

Cell[BoxData[
 TemplateBox[{
  "Screws","wrongDimensions",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"RPToHomogeneous:\\\\\\\"\\\"}]\\): \
Dimensions of input matrices incorrect.\"",2,2340,13,26451647099608986995,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8002652623480597`*^9, 3.8004390714915943`*^9, 3.8004419150662365`*^9, 
   3.80198133485713*^9, 3.8019835479499874`*^9, {3.8019840890183353`*^9, 
   3.8019840923736115`*^9}, 3.8019846272859383`*^9, 3.8019886464107*^9, 
   3.80198905771329*^9, 3.801989548050665*^9, 3.8020011486959906`*^9, 
   3.802092635570987*^9, 3.8020934966102285`*^9, 3.8020944279730186`*^9, 
   3.802095045502346*^9, 3.8020956424533806`*^9, 3.80209686972301*^9, 
   3.8020995034640694`*^9, 3.8021042620727143`*^9, 3.802109482345188*^9, 
   3.8021467956053905`*^9, 3.802147338389351*^9, 3.8021478913986235`*^9, 
   3.8021555959059954`*^9, 3.802156798581485*^9, 3.8021576223646517`*^9, 
   3.8021582912512913`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"If\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"time\\\", \\\"\[GreaterEqual]\\\", \
\\\"3\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"time2\\\", \\\"=\\\", \
RowBox[{\\\"tend\\\", \\\"-\\\", \\\"0.001`\\\"}]}], \\\";\\\", \
RowBox[{\\\"InterpLin\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \\\"t\\\"}], \\\"]\\\"}]}], \
\\\",\\\", RowBox[{\\\"InterpLin\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"i\\\", \\\"=\\\", RowBox[{\\\"Floor\\\", \
\\\"[\\\", RowBox[{\\\"time\\\", \\\" \\\", \\\"samplerate\\\"}], \
\\\"]\\\"}]}], \\\";\\\", RowBox[{\\\"t\\\", \\\"=\\\", \
RowBox[{RowBox[{\\\"time\\\", \\\" \\\", \\\"samplerate\\\"}], \\\"-\\\", \
\\\"i\\\"}]}], \\\";\\\", RowBox[{\\\"dataposl\\\", \
\\\"\[LeftDoubleBracket]\\\", \\\"i\\\", \\\"\[RightDoubleBracket]\\\"}]}], \
\\\",\\\", RowBox[{\\\"dataposl\\\", \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\
\"i\\\", \\\"+\\\", \\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
\\\"t\\\"}], \\\"]\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\) cannot be transposed.\
\"",2,2340,14,26451647099608986995,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8002652623480597`*^9, 3.8004390714915943`*^9, 3.8004419150662365`*^9, 
   3.80198133485713*^9, 3.8019835479499874`*^9, {3.8019840890183353`*^9, 
   3.8019840923736115`*^9}, 3.8019846272859383`*^9, 3.8019886464107*^9, 
   3.80198905771329*^9, 3.801989548050665*^9, 3.8020011486959906`*^9, 
   3.802092635570987*^9, 3.8020934966102285`*^9, 3.8020944279730186`*^9, 
   3.802095045502346*^9, 3.8020956424533806`*^9, 3.80209686972301*^9, 
   3.8020995034640694`*^9, 3.8021042620727143`*^9, 3.802109482345188*^9, 
   3.8021467956053905`*^9, 3.802147338389351*^9, 3.8021478913986235`*^9, 
   3.8021555959059954`*^9, 3.802156798581485*^9, 3.8021576223646517`*^9, 
   3.8021582912532864`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Angular velocity", "Subsubsection",
 CellChangeTimes->{{3.7998996522428703`*^9, 3.7998996654214745`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"angular", " ", "velocity", " ", "linear", " ", "interpolation"}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799589449382847*^9, 3.7995894561919575`*^9}, {
  3.7995911826974335`*^9, 3.799591184586772*^9}, {3.799899814993404*^9, 
  3.799899821104529*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"angvell", "[", "time_", "]"}], "=", "  ", "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"time", "\[GreaterEqual]", "tend"}], ",", " ", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"time2", " ", "=", " ", 
      RowBox[{"tend", "-", "0.001"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"time2", "*", "samplerate"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"t", "=", 
         RowBox[{
          RowBox[{"time2", "*", " ", "samplerate"}], " ", "-", "i"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"dataangvell", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"dataangvell", "[", 
        RowBox[{"[", " ", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time", "*", "samplerate"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time", " ", "*", " ", "samplerate"}], " ", "-", "i"}]}], 
       ";", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"dataangvell", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"dataangvell", "[", 
       RowBox[{"[", " ", 
        RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7995894761710243`*^9, 3.799589502411525*^9}, {
   3.7995895535063667`*^9, 3.7995896795450687`*^9}, {3.799589762211838*^9, 
   3.799589833011608*^9}, {3.7995898693688555`*^9, 3.799589877777122*^9}, {
   3.7995899580985603`*^9, 3.799590052811866*^9}, {3.799590127247675*^9, 
   3.799590194329986*^9}, {3.799590282635967*^9, 3.799590302586648*^9}, {
   3.7995904317718596`*^9, 3.799590535861517*^9}, 3.799590566707635*^9, {
   3.7995906332200336`*^9, 3.7995906465985146`*^9}, {3.799590877400994*^9, 
   3.7995910269642973`*^9}, {3.79959106322342*^9, 3.799591068054925*^9}, {
   3.799591124003354*^9, 3.7995911458632956`*^9}, {3.799592047956257*^9, 
   3.7995920660904913`*^9}, {3.799729817387885*^9, 3.7997298231183705`*^9}, {
   3.799729854098565*^9, 3.799729859955495*^9}, {3.7998998369699306`*^9, 
   3.79989983841738*^9}, {3.7998998828978395`*^9, 3.799899910089052*^9}, {
   3.7999000912337933`*^9, 3.799900104146101*^9}, 3.799979693027808*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"time", "\[GreaterEqual]", "3"}], ",", 
   RowBox[{
    RowBox[{"time2", "=", 
     RowBox[{"tend", "-", "0.001`"}]}], ";", 
    RowBox[{"InterpLin", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time2", " ", "samplerate"}], "]"}]}], ";", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time2", " ", "samplerate"}], "-", "i"}]}], ";", 
       RowBox[{
       "dataangvell", "\[LeftDoubleBracket]", "i", 
        "\[RightDoubleBracket]"}]}], ",", 
      RowBox[{"dataangvell", "\[LeftDoubleBracket]", 
       RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], 
     "]"}]}], ",", 
   RowBox[{"InterpLin", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{"time", " ", "samplerate"}], "]"}]}], ";", 
      RowBox[{"t", "=", 
       RowBox[{
        RowBox[{"time", " ", "samplerate"}], "-", "i"}]}], ";", 
      RowBox[{
      "dataangvell", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
      ",", 
     RowBox[{"dataangvell", "\[LeftDoubleBracket]", 
      RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], "]"}]}],
   "]"}]], "Output",
 CellChangeTimes->{
  3.8002652625652847`*^9, 3.8004390715146575`*^9, 3.8004419150903025`*^9, 
   3.80198133490125*^9, 3.8019835479956083`*^9, {3.8019840890744886`*^9, 
   3.8019840924583654`*^9}, 3.801984627319029*^9, 3.801988646436269*^9, 
   3.801989057743372*^9, 3.8019895480767355`*^9, 3.802001148736101*^9, 
   3.802092635623*^9, 3.8020934966660614`*^9, 3.8020944280627522`*^9, 
   3.802095045560193*^9, 3.8020956425510798`*^9, 3.802096869861641*^9, 
   3.8020995036440845`*^9, 3.802104262187563*^9, 3.80210948239605*^9, 
   3.802146795660261*^9, 3.802147338430242*^9, 3.8021478914354887`*^9, 
   3.802155595937854*^9, 3.8021567986323485`*^9, 3.802157622447353*^9, 
   3.8021582912931643`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Linear velocity", "Subsubsection",
 CellChangeTimes->{{3.7998999310113134`*^9, 3.7998999489112716`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"linear", " ", "velocity", " ", "linear", " ", "interpolation"}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799589449382847*^9, 3.7995894561919575`*^9}, {
  3.7995911826974335`*^9, 3.799591184586772*^9}, {3.799899814993404*^9, 
  3.799899821104529*^9}, {3.799899964617754*^9, 3.7998999826092443`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"vell", "[", "time_", "]"}], "=", "  ", "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"time", "\[GreaterEqual]", "tend"}], ",", " ", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"time2", " ", "=", " ", 
      RowBox[{"tend", "-", "0.001"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"time2", "*", "samplerate"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"t", "=", 
         RowBox[{
          RowBox[{"time2", "*", " ", "samplerate"}], " ", "-", "i"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"datavell", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"datavell", "[", 
        RowBox[{"[", " ", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time", "*", "samplerate"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time", " ", "*", " ", "samplerate"}], " ", "-", "i"}]}], 
       ";", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"datavell", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"datavell", "[", 
       RowBox[{"[", " ", 
        RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7995894761710243`*^9, 3.799589502411525*^9}, {
   3.7995895535063667`*^9, 3.7995896795450687`*^9}, {3.799589762211838*^9, 
   3.799589833011608*^9}, {3.7995898693688555`*^9, 3.799589877777122*^9}, {
   3.7995899580985603`*^9, 3.799590052811866*^9}, {3.799590127247675*^9, 
   3.799590194329986*^9}, {3.799590282635967*^9, 3.799590302586648*^9}, {
   3.7995904317718596`*^9, 3.799590535861517*^9}, 3.799590566707635*^9, {
   3.7995906332200336`*^9, 3.7995906465985146`*^9}, {3.799590877400994*^9, 
   3.7995910269642973`*^9}, {3.79959106322342*^9, 3.799591068054925*^9}, {
   3.799591124003354*^9, 3.7995911458632956`*^9}, {3.799592047956257*^9, 
   3.7995920660904913`*^9}, {3.799729817387885*^9, 3.7997298231183705`*^9}, {
   3.799729854098565*^9, 3.799729859955495*^9}, {3.7998998369699306`*^9, 
   3.79989983841738*^9}, {3.7998998828978395`*^9, 3.799899910089052*^9}, {
   3.799899975514155*^9, 3.799899997137985*^9}, {3.7999000738177223`*^9, 
   3.799900083969921*^9}, 3.7999796955957737`*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"time", "\[GreaterEqual]", "3"}], ",", 
   RowBox[{
    RowBox[{"time2", "=", 
     RowBox[{"tend", "-", "0.001`"}]}], ";", 
    RowBox[{"InterpLin", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time2", " ", "samplerate"}], "]"}]}], ";", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time2", " ", "samplerate"}], "-", "i"}]}], ";", 
       RowBox[{
       "datavell", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"datavell", "\[LeftDoubleBracket]", 
       RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], 
     "]"}]}], ",", 
   RowBox[{"InterpLin", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{"time", " ", "samplerate"}], "]"}]}], ";", 
      RowBox[{"t", "=", 
       RowBox[{
        RowBox[{"time", " ", "samplerate"}], "-", "i"}]}], ";", 
      RowBox[{
      "datavell", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
     ",", 
     RowBox[{"datavell", "\[LeftDoubleBracket]", 
      RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], "]"}]}],
   "]"}]], "Output",
 CellChangeTimes->{
  3.8002652627028885`*^9, 3.800439071544238*^9, 3.8004419151103573`*^9, 
   3.8019813349383526`*^9, 3.8019835480317073`*^9, {3.801984089116102*^9, 
   3.8019840925290594`*^9}, 3.801984627346605*^9, 3.8019886464583287`*^9, 
   3.801989057768441*^9, 3.801989548099798*^9, 3.802001148773703*^9, 
   3.8020926356618953`*^9, 3.8020934967009687`*^9, 3.802094428104644*^9, 
   3.802095045596095*^9, 3.8020956425860157`*^9, 3.80209686997651*^9, 
   3.8020995037598257`*^9, 3.80210426226202*^9, 3.802109482438953*^9, 
   3.8021467956971626`*^9, 3.8021473384841194`*^9, 3.8021478914895678`*^9, 
   3.80215559596877*^9, 3.8021567986732388`*^9, 3.80215762248625*^9, 
   3.802158291372955*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["10R construction Denavit Hartenberg", "Section",
 CellChangeTimes->{{3.7993041148775673`*^9, 3.799304162433352*^9}, {
   3.7993043060564065`*^9, 3.799304331079752*^9}, 3.799557327337248*^9, {
   3.7995856588272266`*^9, 3.7995856603022757`*^9}, {3.800071723834988*^9, 
   3.8000717242428465`*^9}, {3.8000724347563934`*^9, 3.8000724350129337`*^9}, 
   3.800263017405557*^9}],

Cell[CellGroupData[{

Cell["Parameters", "Subsection",
 CellChangeTimes->{{3.799306023953418*^9, 3.799306036759206*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Parameters", " ", "assignment", " ", "using", " ", "loaded", " ", "data"}],
   " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7995856685788174`*^9, 3.799585703199294*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"L5Rot", " ", "=", " ", 
   RowBox[{"RotX", "[", 
    RowBox[{
     RowBox[{"-", "Pi"}], "/", "2"}], "]"}]}], ";"}]], "Input",
 FontWeight->"Plain"],

Cell[BoxData[
 RowBox[{
  RowBox[{"L5Pos", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"parl", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
     RowBox[{
      RowBox[{"parl", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"parl", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7993076792813435`*^9, 3.7993077244854803`*^9}, {
  3.799553928094157*^9, 3.799553948790646*^9}, {3.7995753642162533`*^9, 
  3.7995753867156816`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tg0", " ", "=", " ", 
   RowBox[{"RPToHomogeneous", "[", 
    RowBox[{"L5Rot", ",", " ", "L5Pos"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7993072083421474`*^9, 3.799307215450121*^9}, {
  3.7993073106798744`*^9, 3.7993073114887123`*^9}, {3.799307446798936*^9, 
  3.7993074588786383`*^9}, {3.799307653650872*^9, 3.7993076689310904`*^9}, {
  3.79930773106895*^9, 3.799307737930604*^9}, {3.799307775423293*^9, 
  3.7993077902377434`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tg", " ", "=", " ", 
   RowBox[{"RPToHomogeneous", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "3", "]"}], ",", " ", "L5Pos"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.799559288794838*^9, 3.799559317452064*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Theta]l", "=", 
   RowBox[{
    RowBox[{"parl", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "6", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799309004745397*^9, 3.7993090080424423`*^9}, {
   3.7993097246693325`*^9, 3.799309729541622*^9}, 3.7993098833797307`*^9, {
   3.799310298087306*^9, 3.799310303669343*^9}, {3.7995753092215815`*^9, 
   3.799575314856491*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a3l", "=", 
   RowBox[{
    RowBox[{"parl", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799309734670747*^9, 3.799309736419035*^9}, {
   3.799309810524946*^9, 3.7993098108642745`*^9}, 3.7993098861018877`*^9, {
   3.799310271594725*^9, 3.7993102748139467`*^9}, {3.7995753196517982`*^9, 
   3.799575329287796*^9}, {3.8019813618927855`*^9, 3.8019813674696426`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d3l", "=", 
   RowBox[{"-", 
    RowBox[{
     RowBox[{"parl", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", "5", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799309767785523*^9, 3.7993097698203316`*^9}, {
   3.7993098150729113`*^9, 3.7993098153466926`*^9}, 3.799309888775135*^9, {
   3.799310260868473*^9, 3.799310264633499*^9}, {3.7995753219774237`*^9, 
   3.7995753316290007`*^9}, {3.8019813749327216`*^9, 3.8019813775728827`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d6l", "=", 
   RowBox[{
    RowBox[{"parl", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "7", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7993097747130246`*^9, 3.7993097768896027`*^9}, {
   3.799309818445693*^9, 3.7993098187319317`*^9}, 3.7993098912793026`*^9, {
   3.7993102803893538`*^9, 3.799310282965793*^9}, {3.7995753241617513`*^9, 
   3.799575333919882*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d8l", "=", 
   RowBox[{
    RowBox[{"parl", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "8", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7993097786922617`*^9, 3.7993097805788403`*^9}, {
   3.7993098213901277`*^9, 3.7993098216954536`*^9}, 3.7993098937125983`*^9, {
   3.799310287123352*^9, 3.7993102900010414`*^9}, {3.799575325958853*^9, 
   3.799575336491181*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d10l", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.7993097829815545`*^9, 3.7993097854809685`*^9}, {
   3.799309824641467*^9, 3.799309824968631*^9}, 3.7993098984317255`*^9, 
   3.7993102182780647`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Denavit Hartenberg Table and EE transform", "Subsection",
 CellChangeTimes->{{3.7993060400554314`*^9, 3.7993060937009387`*^9}, 
   3.799585950860078*^9}],

Cell["\<\
Note: \[OpenCurlyDoubleQuote]g\[CloseCurlyDoubleQuote] frame is the provided \
global frame in which the data are expressed.\
\>", "Text",
 CellChangeTimes->{{3.799306072839709*^9, 3.7993060797572145`*^9}, {
  3.799306352245037*^9, 3.7993063598876524`*^9}, {3.799585930337002*^9, 
  3.7995859392221937`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]3l", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "Pi"}], "/", "2"}], " ", "-", " ", "\[Theta]l"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]4l", " ", "=", " ", 
   RowBox[{
    RowBox[{"Pi", "/", "2"}], " ", "+", " ", "\[Theta]l"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.799307747635585*^9, 3.7993077840722284`*^9}, {
  3.7993081590781226`*^9, 3.7993082206215734`*^9}, {3.799308263643032*^9, 
  3.799308295352331*^9}, {3.7993089794492397`*^9, 3.799308997023697*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Denavit", " ", "Hartenberg", " ", "Table", " ", "for", " ", "left", " ", 
   "arm"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7995860199064674`*^9, 3.7995860203063984`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"DH", " ", "order", " ", 
    RowBox[{"is", ":", " ", "a"}]}], ",", " ", "alpha", ",", " ", "d", ",", 
   " ", "theta"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7993063629573965`*^9, 3.799306378558683*^9}, {
  3.7995865495069675`*^9, 3.7995865538666253`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T01l", "[", "q1_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", "q1", ",", 
      "\"\<R\>\""}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764862097219008*^9, 3.764862154836344*^9}, {
   3.764862208885091*^9, 3.7648622289428053`*^9}, {3.764909784415634*^9, 
   3.764909784962381*^9}, 3.7651022406737347`*^9, 3.799306009146008*^9, {
   3.799307200248787*^9, 3.799307201551299*^9}, 3.799307818158717*^9, {
   3.7993079220209455`*^9, 3.799307931652195*^9}, {3.7993079805285664`*^9, 
   3.799307990640476*^9}, {3.799308042745163*^9, 3.799308044934311*^9}, 
   3.7993090418122163`*^9},
 ExpressionUUID -> "c291e399-0c6c-4bae-afcc-6b9ec38c2a96"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T12l", "[", "q2_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"Pi", "/", "2"}], ",", "0", ",", 
      RowBox[{"q2", " ", "+", " ", 
       RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.764862253702861*^9, 3.764862282325665*^9}, {
   3.764909790736429*^9, 3.764909791443843*^9}, 3.765102271340701*^9, 
   3.7993078225509005`*^9, {3.7993079363416557`*^9, 3.79930794045573*^9}, {
   3.7993079848050785`*^9, 3.7993080016141367`*^9}, {3.7993080512245016`*^9, 
   3.799308053923278*^9}, 3.7993090428629665`*^9, {3.799309106400958*^9, 
   3.79930911362148*^9}, 3.79930926198204*^9},
 ExpressionUUID -> "84243484-b146-4646-8fe1-09f283de623b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T23l", "[", "q3_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"a3l", ",", 
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "2"}], ",", "d3l", ",", 
      RowBox[{"q3", " ", "+", " ", "\[Theta]3l"}], ",", "\"\<R\>\""}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.76486228807624*^9, 3.764862329372554*^9}, {
   3.7649097986295967`*^9, 3.7649097993263817`*^9}, 3.765102274537818*^9, {
   3.799307825489117*^9, 3.7993078257244153`*^9}, {3.7993078723348637`*^9, 
   3.7993078730538692`*^9}, {3.7993079432402143`*^9, 3.799307975269594*^9}, 
   3.7993080052734003`*^9, {3.7993080566310363`*^9, 3.7993080795637603`*^9}, 
   3.7993089899049873`*^9, 3.799309043836769*^9, {3.799309192379014*^9, 
   3.7993091964693813`*^9}, 3.799309267138609*^9},
 ExpressionUUID -> "c131592d-325c-4219-a5a6-5f8e28c79dd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T34l", "[", "q4_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Alpha]4l", ",", "0", ",", 
      RowBox[{"q4", " ", "-", " ", 
       RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.764862320226762*^9, 3.764862324062711*^9}, {
   3.7648623546291513`*^9, 3.764862379868434*^9}, {3.764904568969067*^9, 
   3.764904574856801*^9}, {3.764909801460581*^9, 3.764909802131589*^9}, 
   3.76510227733145*^9, 3.7993078291761966`*^9, {3.7993080119076138`*^9, 
   3.79930801745179*^9}, {3.7993080815314665`*^9, 3.7993081024695497`*^9}, 
   3.799308992292861*^9, 3.7993090446954184`*^9, {3.7993093098413563`*^9, 
   3.7993093100595975`*^9}},
 ExpressionUUID -> "ad4684fc-7ddd-4b63-9126-3f395283cb31"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T45l", "[", "q5_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", 
      RowBox[{"q5", " ", "-", " ", 
       RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.764862097219008*^9, 3.764862154836344*^9}, {
   3.764862208885091*^9, 3.7648622289428053`*^9}, {3.764909784415634*^9, 
   3.764909784962381*^9}, 3.7651022406737347`*^9, 3.799306009146008*^9, {
   3.799307068629629*^9, 3.799307079159524*^9}, 3.7993078313184595`*^9, {
   3.7993080202932673`*^9, 3.799308020704167*^9}, {3.799308106937532*^9, 
   3.799308110068211*^9}, 3.799309046077712*^9},
 ExpressionUUID -> "c291e399-0c6c-4bae-afcc-6b9ec38c2a96"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T56l", "[", "q6_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "2"}], ",", "d6l", ",", 
      RowBox[{"q6", " ", "+", " ", "Pi"}], ",", "\"\<R\>\""}], "}"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.764862253702861*^9, 3.764862282325665*^9}, {
   3.764909790736429*^9, 3.764909791443843*^9}, 3.765102271340701*^9, {
   3.799307086010206*^9, 3.7993070896005735`*^9}, 3.7993078341589055`*^9, {
   3.799307879287269*^9, 3.799307879892585*^9}, 3.7993080237070665`*^9, {
   3.79930811297945*^9, 3.799308113498988*^9}, 3.7993090478065815`*^9, 
   3.799309202415119*^9, {3.7993092733884883`*^9, 3.7993092753731484`*^9}, {
   3.7993093158912754`*^9, 3.799309317540571*^9}},
 ExpressionUUID -> "84243484-b146-4646-8fe1-09f283de623b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T67l", "[", "q7_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", 
      RowBox[{"q7", " ", "+", " ", "Pi"}], ",", "\"\<R\>\""}], "}"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.76486228807624*^9, 3.764862329372554*^9}, {
   3.7649097986295967`*^9, 3.7649097993263817`*^9}, 3.765102274537818*^9, {
   3.7993070922774024`*^9, 3.799307095690277*^9}, 3.799307837733356*^9, 
   3.799308026549467*^9, {3.79930811698972*^9, 3.7993081371607256`*^9}, 
   3.799309048793573*^9, 3.799309277323365*^9},
 ExpressionUUID -> "c131592d-325c-4219-a5a6-5f8e28c79dd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T78l", "[", "q8_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"Pi", "/", "2"}], ",", "d8l", ",", "q8", ",", "\"\<R\>\""}], 
     "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764862320226762*^9, 3.764862324062711*^9}, {
   3.7648623546291513`*^9, 3.764862379868434*^9}, {3.764904568969067*^9, 
   3.764904574856801*^9}, {3.764909801460581*^9, 3.764909802131589*^9}, 
   3.76510227733145*^9, {3.799307101596485*^9, 3.799307104871729*^9}, 
   3.799307840017273*^9, {3.7993078852761908`*^9, 3.7993078858626223`*^9}, {
   3.7993080286299047`*^9, 3.7993080288912764`*^9}, {3.7993081229826794`*^9, 
   3.7993081233417196`*^9}, 3.7993090502827187`*^9, 3.7993092050565553`*^9, 
   3.799309281341172*^9},
 ExpressionUUID -> "ad4684fc-7ddd-4b63-9126-3f395283cb31"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T89l", "[", "q9_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", 
      RowBox[{"q9", " ", "+", " ", 
       RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.76486228807624*^9, 3.764862329372554*^9}, {
   3.7649097986295967`*^9, 3.7649097993263817`*^9}, 3.765102274537818*^9, {
   3.7993070922774024`*^9, 3.7993071253031373`*^9}, 3.7993078429185133`*^9, 
   3.7993080318153872`*^9, {3.799308125521854*^9, 3.79930814279174*^9}, 
   3.799309051517418*^9, 3.7993092896556206`*^9},
 ExpressionUUID -> "c131592d-325c-4219-a5a6-5f8e28c79dd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T910l", "[", "q10_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"Pi", "/", "2"}], ",", "d10l", ",", 
      RowBox[{"q10", " ", "+", " ", 
       RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.764862320226762*^9, 3.764862324062711*^9}, {
   3.7648623546291513`*^9, 3.764862379868434*^9}, {3.764904568969067*^9, 
   3.764904574856801*^9}, {3.764909801460581*^9, 3.764909802131589*^9}, 
   3.76510227733145*^9, {3.799307101596485*^9, 3.799307137393798*^9}, 
   3.7993078490949993`*^9, {3.7993078902459087`*^9, 3.7993078913849025`*^9}, 
   3.7993080344114466`*^9, {3.799308128970621*^9, 3.799308147761381*^9}, 
   3.799309053268966*^9, 3.7993092073231077`*^9},
 ExpressionUUID -> "ad4684fc-7ddd-4b63-9126-3f395283cb31"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"EE", " ", 
   RowBox[{"transform", ":", " ", 
    RowBox[{"left", " ", "hand"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.800262807359222*^9, 3.8002628076839724`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TgEEl", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], "=", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01l", "[", "q1", "]"}], ".", 
    RowBox[{"T12l", "[", "q2", "]"}], ".", 
    RowBox[{"T23l", "[", "q3", "]"}], ".", 
    RowBox[{"T34l", "[", "q4", "]"}], ".", 
    RowBox[{"T45l", "[", "q5", "]"}], ".", 
    RowBox[{"T56l", "[", "q6", "]"}], ".", 
    RowBox[{"T67l", "[", "q7", "]"}], ".", 
    RowBox[{"T78l", "[", "q8", "]"}], ".", 
    RowBox[{"T89l", "[", "q9", "]"}], ".", 
    RowBox[{"T910l", "[", "q10", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7649048499309*^9, 3.764904919871928*^9}, {
   3.76490498496495*^9, 3.764904987106889*^9}, {3.764909812358943*^9, 
   3.764909817212101*^9}, 3.765102396993044*^9, {3.765103393948989*^9, 
   3.7651033990461187`*^9}, {3.7993083457225885`*^9, 
   3.7993083788350563`*^9}, {3.799309336572989*^9, 3.7993093475029087`*^9}, {
   3.799309454916582*^9, 3.799309513518671*^9}, {3.799310438176403*^9, 
   3.799310440395547*^9}, {3.799577366395856*^9, 3.7995773696480274`*^9}},
 ExpressionUUID -> "2369f496-18c4-4174-952a-6edb1bd994ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"posEEl", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], "=", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"TgEEl", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7", 
       ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.764909826652611*^9, 3.76490985170117*^9}, {
   3.7649099304712543`*^9, 3.7649099525931063`*^9}, {3.765017061742051*^9, 
   3.765017062927095*^9}, 3.7651035167512217`*^9, {3.799309539125784*^9, 
   3.799309559565507*^9}, {3.799309607067504*^9, 3.7993096214692*^9}, {
   3.799577373130739*^9, 3.799577384793432*^9}},
 ExpressionUUID -> "d5c2ca86-dbd9-4c21-8413-5cedd59cc621"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"orEEl", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], "=", 
   RowBox[{"RigidOrientation", "[", 
    RowBox[{"TgEEl", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7", 
       ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7649099559516773`*^9, 3.764909993246737*^9}, {
   3.765017068392355*^9, 3.765017069772504*^9}, 3.7651035919272947`*^9, {
   3.765108682861401*^9, 3.7651086865075808`*^9}, 3.799309543123068*^9, {
   3.799309657026682*^9, 3.799309689169126*^9}, {3.799577378254465*^9, 
   3.799577391130149*^9}},
 ExpressionUUID -> "4e8cfabd-ac4d-47d6-acd4-26bbeb13b8f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TgEElInv", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidInverse", "[", 
    RowBox[{"TgEEl", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7", 
       ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8002083437900157`*^9, 3.800208420788727*^9}, {
  3.800208966030167*^9, 3.800208975805916*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"orEElInv", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], "=", 
   RowBox[{"RigidOrientation", "[", 
    RowBox[{"TgEElInv", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7", 
       ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7649099559516773`*^9, 3.764909993246737*^9}, {
   3.765017068392355*^9, 3.765017069772504*^9}, 3.7651035919272947`*^9, {
   3.765108682861401*^9, 3.7651086865075808`*^9}, 3.7993095341632147`*^9, {
   3.7993096505533214`*^9, 3.7993096824823303`*^9}, {3.7995766344319406`*^9, 
   3.799576665908189*^9}, {3.8002079984520226`*^9, 3.800208003403652*^9}, {
   3.8002083359732447`*^9, 3.8002083656050525`*^9}, {3.800208967662177*^9, 
   3.8002089727578173`*^9}},
 ExpressionUUID -> "4e8cfabd-ac4d-47d6-acd4-26bbeb13b8f2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Jacobian", "Subsection",
 CellChangeTimes->{{3.799909533647818*^9, 3.799909551667117*^9}}],

Cell[CellGroupData[{

Cell["DH table", "Subsubsection",
 CellChangeTimes->{{3.8002581083575053`*^9, 3.8002581194867487`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DHtablel", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", "q1", ",", 
       "\"\<R\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "0", ",", 
       RowBox[{"q2", " ", "+", " ", 
        RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"a3l", ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", "d3l", ",", 
       RowBox[{"q3", " ", "+", " ", "\[Theta]3l"}], ",", "\"\<R\>\""}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\[Alpha]4l", ",", "0", ",", 
       RowBox[{"q4", " ", "-", " ", 
        RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", 
       RowBox[{"q5", " ", "-", " ", 
        RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", "d6l", ",", 
       RowBox[{"q6", " ", "+", " ", "Pi"}], ",", "\"\<R\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", 
       RowBox[{"q7", " ", "+", " ", "Pi"}], ",", "\"\<R\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "d8l", ",", "q8", ",", "\"\<R\>\""}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", 
       RowBox[{"q9", " ", "+", " ", 
        RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "d10l", ",", 
       RowBox[{"q10", " ", "+", " ", 
        RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7999102056047955`*^9, 3.7999104014855003`*^9}, {
  3.799910966262005*^9, 3.799911072630342*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Jacobian", "Subsubsection",
 CellChangeTimes->{{3.7999096438158216`*^9, 3.7999096671773973`*^9}, {
  3.8000720606998506`*^9, 3.8000720620758114`*^9}}],

Cell["\<\
DHJacobBase::usage = \"DHJacobBase[DHtable, Tb0] computes the DH spatial \
Jacobian for the supplied DH table DHtable, w.r.t. a base frame Sb (both \
origin and orientation are considered) \\nwhere the displacement from Sb to \
S0 is expressed by the homogeneous matrix Tb0.\"\
\>", "Text",
 CellChangeTimes->{{3.7999099564181485`*^9, 3.7999099564191604`*^9}, {
  3.7999113420303617`*^9, 3.799911358100662*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Definition", " ", "of", " ", "geometric", " ", "arm", " ", "Jacobian", " ",
    "from", " ", "DH", " ", "parametrization"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799909556783244*^9, 3.7999096292829437`*^9}, {
  3.799911372861762*^9, 3.7999113741176367`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Jacl", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"DHJacobBase", "[", 
    RowBox[{
     RowBox[{"DHtablel", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7",
         ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], ",", " ", "Tg0"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7999104158319073`*^9, 3.7999105107248716`*^9}, {
  3.799911155374753*^9, 3.7999111582140036`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"sanity", " ", "check"}], "-", " ", 
   RowBox[{
   "we", " ", "obtain", " ", "linear", " ", "and", " ", "angular", " ", 
    "velocity", " ", "of", " ", "hand", " ", "wrt", " ", "our", " ", "global",
     " ", "frame"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7999109146348124`*^9, 3.7999109219493265`*^9}, {
  3.7999111037491584`*^9, 3.799911143357724*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Jacl", "[", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0"}], "}"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7999105194829373`*^9, 3.799910539228326*^9}, {
   3.7999105896606455`*^9, 3.799910639660932*^9}, {3.7999107824293222`*^9, 
   3.799910835965353*^9}, {3.79991089278183*^9, 3.799910910540705*^9}, {
   3.7999111610612774`*^9, 3.799911187685505*^9}, {3.7999112373576565`*^9, 
   3.799911239598017*^9}, {3.799911271350062*^9, 3.7999112735741444`*^9}, 
   3.799911330726458*^9, 3.800262921758827*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Homogeneous Transform", "Subsection",
 CellChangeTimes->{{3.799555533156518*^9, 3.7995555957242374`*^9}, {
   3.7995866876817417`*^9, 3.7995866903239403`*^9}, 3.8000721807003856`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Tgil", " ", "=", " ", 
   RowBox[{
   "homogeneous", " ", "transformation", " ", "from", " ", "global", " ", 
    "frame", " ", "to", " ", "\"\<i\>\"", " ", "frame"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{3.799586792600286*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg1l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01l", "[", "q1", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, 
   3.7995558948012996`*^9, {3.79955627134354*^9, 3.7995562719526386`*^9}, 
   3.799556321123409*^9, 3.799577439006912*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg2l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01l", "[", "q1", "]"}], ".", 
    RowBox[{"T12l", "[", "q2", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, {
   3.7995558948012996`*^9, 3.7995559000448437`*^9}, {3.799556275495283*^9, 
   3.7995562758024745`*^9}, {3.7995563248297462`*^9, 3.799556328036211*^9}, 
   3.7995774410408683`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg3l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01l", "[", "q1", "]"}], ".", 
    RowBox[{"T12l", "[", "q2", "]"}], ".", 
    RowBox[{"T23l", "[", "q3", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, {
   3.7995558948012996`*^9, 3.799555902567129*^9}, {3.799556278611049*^9, 
   3.7995562789178567`*^9}, {3.799556341666999*^9, 3.799556344668812*^9}, 
   3.7995774431137624`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg4l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01l", "[", "q1", "]"}], ".", 
    RowBox[{"T12l", "[", "q2", "]"}], ".", 
    RowBox[{"T23l", "[", "q3", "]"}], ".", 
    RowBox[{"T34l", "[", "q4", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, {
   3.7995558948012996`*^9, 3.7995559052319837`*^9}, {3.7995562825856285`*^9, 
   3.799556282837793*^9}, {3.799556346652701*^9, 3.7995563519956827`*^9}, 
   3.7995774452558546`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg5l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01l", "[", "q1", "]"}], ".", 
    RowBox[{"T12l", "[", "q2", "]"}], ".", 
    RowBox[{"T23l", "[", "q3", "]"}], ".", 
    RowBox[{"T34l", "[", "q4", "]"}], ".", 
    RowBox[{"T45l", "[", "q5", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, {
   3.7995558948012996`*^9, 3.7995559083368616`*^9}, 3.799556288649446*^9, {
   3.7995563538089714`*^9, 3.7995563608635597`*^9}, 3.799577449789962*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg6l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01l", "[", "q1", "]"}], ".", 
    RowBox[{"T12l", "[", "q2", "]"}], ".", 
    RowBox[{"T23l", "[", "q3", "]"}], ".", 
    RowBox[{"T34l", "[", "q4", "]"}], ".", 
    RowBox[{"T45l", "[", "q5", "]"}], ".", 
    RowBox[{"T56l", "[", "q6", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, {
   3.7995558948012996`*^9, 3.799555910715434*^9}, 3.799556305662797*^9, {
   3.7995563625123305`*^9, 3.799556374959717*^9}, 3.7995774595025268`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg7l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01l", "[", "q1", "]"}], ".", 
    RowBox[{"T12l", "[", "q2", "]"}], ".", 
    RowBox[{"T23l", "[", "q3", "]"}], ".", 
    RowBox[{"T34l", "[", "q4", "]"}], ".", 
    RowBox[{"T45l", "[", "q5", "]"}], ".", 
    RowBox[{"T56l", "[", "q6", "]"}], ".", 
    RowBox[{"T67l", "[", "q7", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799554991959058*^9, 3.799554994062825*^9}, 
   3.7995550787365417`*^9, {3.7995554495409145`*^9, 3.7995554570830665`*^9}, {
   3.799555850829101*^9, 3.799555865884227*^9}, {3.7995559190669622`*^9, 
   3.7995559279420056`*^9}, {3.7995559615460043`*^9, 3.7995559626672993`*^9}, 
   3.7995563065611324`*^9, {3.7995563775072985`*^9, 3.7995563869028854`*^9}, 
   3.7995774621669683`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg8l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01l", "[", "q1", "]"}], ".", 
    RowBox[{"T12l", "[", "q2", "]"}], ".", 
    RowBox[{"T23l", "[", "q3", "]"}], ".", 
    RowBox[{"T34l", "[", "q4", "]"}], ".", 
    RowBox[{"T45l", "[", "q5", "]"}], ".", 
    RowBox[{"T56l", "[", "q6", "]"}], ".", 
    RowBox[{"T67l", "[", "q7", "]"}], ".", 
    RowBox[{"T78l", "[", "q8", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995549963258677`*^9, 3.7995549976060557`*^9}, 
   3.7995550821907005`*^9, {3.799555462468993*^9, 3.799555467926289*^9}, {
   3.799555954295529*^9, 3.799555978332964*^9}, 3.7995563076216607`*^9, {
   3.799556389103084*^9, 3.799556407098979*^9}, 3.7995774650005407`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg9l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01l", "[", "q1", "]"}], ".", 
    RowBox[{"T12l", "[", "q2", "]"}], ".", 
    RowBox[{"T23l", "[", "q3", "]"}], ".", 
    RowBox[{"T34l", "[", "q4", "]"}], ".", 
    RowBox[{"T45l", "[", "q5", "]"}], ".", 
    RowBox[{"T56l", "[", "q6", "]"}], ".", 
    RowBox[{"T67l", "[", "q7", "]"}], ".", 
    RowBox[{"T78l", "[", "q8", "]"}], ".", 
    RowBox[{"T89l", "[", "q9", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799554999873102*^9, 3.799555003002037*^9}, 
   3.7995550853181353`*^9, {3.799555474222129*^9, 3.7995554791602144`*^9}, {
   3.799555982078133*^9, 3.799556004516265*^9}, 3.799556308878832*^9, {
   3.7995564105620365`*^9, 3.7995564276320915`*^9}, 3.799577471657524*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Tg10l", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
       ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
      "}"}], "]"}], " ", "=", " ", 
    RowBox[{"Tg0", ".", 
     RowBox[{"T01l", "[", "q1", "]"}], ".", 
     RowBox[{"T12l", "[", "q2", "]"}], ".", 
     RowBox[{"T23l", "[", "q3", "]"}], ".", 
     RowBox[{"T34l", "[", "q4", "]"}], ".", 
     RowBox[{"T45l", "[", "q5", "]"}], ".", 
     RowBox[{"T56l", "[", "q6", "]"}], ".", 
     RowBox[{"T67l", "[", "q7", "]"}], ".", 
     RowBox[{"T78l", "[", "q8", "]"}], ".", 
     RowBox[{"T89l", "[", "q9", "]"}], ".", 
     RowBox[{"T910l", "[", "q10", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7995550051530223`*^9, 3.7995550084579816`*^9}, 
   3.7995550874084764`*^9, {3.7995554846984434`*^9, 3.7995554910566845`*^9}, {
   3.7995560089095345`*^9, 3.7995560206108074`*^9}, 3.7995563101302137`*^9, {
   3.7995564299915876`*^9, 3.7995564514426527`*^9}, {3.799560770191704*^9, 
   3.79956077346033*^9}, 3.7995774751839743`*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Inverse Kinematic : CLIK with constrains", "Section",
 CellChangeTimes->{{3.7993043705938053`*^9, 3.7993044075199327`*^9}, {
   3.799304438798328*^9, 3.799304451515282*^9}, {3.799564595024484*^9, 
   3.799564623184705*^9}, {3.7996044948207045`*^9, 3.7996045007478943`*^9}, {
   3.799604969301017*^9, 3.799604981653998*^9}, {3.799932596325004*^9, 
   3.799932611481658*^9}, {3.80007238260435*^9, 3.8000723827882776`*^9}, 
   3.800263028973736*^9}],

Cell[CellGroupData[{

Cell["Functional definition", "Subsection",
 CellChangeTimes->{{3.7993043447169266`*^9, 3.7993043672337227`*^9}, {
  3.799586676453062*^9, 3.7995866785166917`*^9}, {3.7996049314263735`*^9, 
  3.7996049537926455`*^9}, {3.799932526089204*^9, 3.7999325266902523`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Weight", " ", "matrix", " ", "inside", " ", "functional", " ", "def"}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799911523910018*^9, 3.7999115450945272`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Jwl", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Inverse", "[", "W", "]"}], ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Jacl", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7",
         ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], "]"}], ".", 
    RowBox[{"Inverse", "[", 
     RowBox[{
      RowBox[{"Jacl", "[", 
       RowBox[{"{", 
        RowBox[{
        "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", 
         "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], ".", 
      RowBox[{"Inverse", "[", "W", "]"}], ".", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Jacl", "[", 
        RowBox[{"{", 
         RowBox[{
         "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", 
          "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], "]"}]}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7999265837256794`*^9, 3.799926587637516*^9}, {
   3.7999267290913353`*^9, 3.799926884750101*^9}, 3.7999290176589165`*^9, 
   3.799929075721654*^9, {3.799929244917117*^9, 3.799929246884748*^9}, {
   3.7999293271602325`*^9, 3.799929370684943*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Position and orientation error of the end-effector", "Subsection",
 CellChangeTimes->{{3.669901455657922*^9, 3.6699014811971664`*^9}, {
  3.7999327425681486`*^9, 3.7999327480109615`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Position", " ", "error"}], " ", "=", " ", 
   RowBox[{
   "difference", " ", "between", " ", "the", " ", "desired", " ", "position", 
    " ", "of", " ", "the", " ", "EE", " ", "over", " ", "the", " ", "ideal", 
    " ", "trajectory", " ", "to", " ", "be", " ", "followed", " ", "and", " ",
     "the", " ", "position", " ", "of", " ", "the", " ", "EE", " ", "over", 
    " ", "the", " ", "real", " ", "trajectory", " ", "that", " ", "it", " ", 
    "perform", " ", "depending", " ", "on", " ", "joint", " ", "angles"}]}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7583843731790433`*^9, 3.758384391547526*^9}, 
   3.758517595732815*^9, {3.758517630742379*^9, 3.7585176307428803`*^9}, {
   3.80026310574586*^9, 3.8002632381764402`*^9}, {3.800263289349341*^9, 
   3.8002632996469026`*^9}, {3.8002633334955616`*^9, 3.8002634150070686`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "posl", " ", "is", " ", "the", " ", "desired", " ", "position", " ", "of", 
    " ", "the", " ", "EE"}], ",", " ", 
   RowBox[{
   "posEEl", " ", "is", " ", "the", " ", "position", " ", "of", " ", "EE", 
    " ", "coming", " ", "from", " ", "direct", " ", "kinematic", " ", 
    "solution", " ", "using", " ", "joint", " ", "angles"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7996787615495386`*^9, 3.7996788256322327`*^9}, {
  3.7999255452270713`*^9, 3.7999255596266346`*^9}, {3.79993169605285*^9, 
  3.79993169883074*^9}, {3.799932269768146*^9, 3.7999323633002615`*^9}, {
  3.7999324586481266`*^9, 3.7999324620144434`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ePl", "[", 
    RowBox[{"time_", ",", 
     RowBox[{"{", 
      RowBox[{
      "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
       ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
      "}"}]}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"posl", "[", "time", "]"}], "-", 
     RowBox[{"posEEl", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7",
         ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}]}], ")"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.388311363518482*^9, 3.388311369027895*^9}, {
   3.3883117682455077`*^9, 3.3883118370321207`*^9}, {3.3883119051312776`*^9, 
   3.388311912586855*^9}, {3.388312997558428*^9, 3.388313003981845*^9}, {
   3.3883142201999006`*^9, 3.388314221055314*^9}, {3.6698048930469093`*^9, 
   3.669804912695345*^9}, {3.669901156960788*^9, 3.6699011857448387`*^9}, {
   3.7999252602993326`*^9, 3.7999252692377605`*^9}, {3.7999253082413626`*^9, 
   3.799925316950251*^9}, 3.799925362104393*^9, {3.7999254915457883`*^9, 
   3.7999255483755445`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Orientation", " ", "error", " ", "is", " ", "computed", " ", "using", " ", 
   "quaternions", " ", "by", " ", "imposing", " ", "that", " ", "the", " ", 
   "product", "  ", "between", " ", "the", " ", "quaternion", " ", 
   "describing", " ", "the", " ", "desired", " ", "orientation", " ", "and", 
   " ", "the", " ", "quaternion", " ", "that", " ", "describe", " ", "the", 
   " ", "inverse", " ", "of", " ", "the", " ", "actual", " ", "orientation", 
   " ", "of", " ", "the", " ", "EE", " ", 
   RowBox[{"(", 
    RowBox[{"depending", " ", "on", " ", "joint", " ", "angles"}], ")"}], " ",
    "is", " ", "equal", " ", "to", " ", "the", " ", "Identity", " ", 
   "matrix"}], " ", "*)"}]], "Input",
 CellChangeTimes->{
  3.7585175957338166`*^9, {3.758517630746891*^9, 3.7585176307473927`*^9}, {
   3.8002634701912365`*^9, 3.8002636562948656`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "REEl", " ", "is", " ", "the", " ", "desired", " ", "orientation", " ", 
    "of", " ", "the", " ", "EE"}], ",", " ", 
   RowBox[{
   "orEEl", " ", "is", " ", "the", " ", "orientation", " ", "of", " ", "EE", 
    " ", "coming", " ", "from", " ", "direct", " ", "kinematic", " ", 
    "solution", " ", "using", " ", "joint", " ", "angles"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7996787615495386`*^9, 3.7996788256322327`*^9}, {
  3.7999255452270713`*^9, 3.7999255596266346`*^9}, {3.79993169605285*^9, 
  3.79993169883074*^9}, {3.799932269768146*^9, 3.7999323633002615`*^9}, {
  3.799932479021308*^9, 3.7999325131412463`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eOl", "[", 
    RowBox[{"time_", ",", 
     RowBox[{"{", 
      RowBox[{
      "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
       ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
      "}"}]}], "]"}], ":=", 
   RowBox[{"QuatVectPart", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"REEl", "[", "time", "]"}], ".", 
      RowBox[{"orEElInv", "[", 
       RowBox[{"{", 
        RowBox[{
        "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", 
         "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}]}], ")"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388485969619128*^9, 3.388485990650378*^9}, {
   3.388486608587878*^9, 3.3884866126035037`*^9}, 3.6698048668730593`*^9, {
   3.7999259073452373`*^9, 3.799925959893572*^9}, {3.799926044080681*^9, 
   3.7999260445957108`*^9}, {3.7999262314346294`*^9, 
   3.7999262351857553`*^9}, {3.7999262726727357`*^9, 
   3.7999262844495373`*^9}, {3.800208992590139*^9, 3.800208994773611*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Gain matrices of the trajectory tracking law and qdot", "Subsection",
 CellChangeTimes->{{3.388313341285452*^9, 3.3883133579923897`*^9}, {
  3.669901892953491*^9, 3.6699019016427064`*^9}, {3.6699019430853024`*^9, 
  3.6699019561893253`*^9}, {3.799926326331081*^9, 3.799926356859374*^9}, {
  3.8000724640365973`*^9, 3.800072466532675*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "Proportional", " ", "Gain", " ", "constant", " ", "defined", " ", 
    "inside", " ", "Loading", " ", "Data", " ", "and", " ", "Parameters"}], 
   "-", 
   RowBox[{"Parameters", " ", "for", " ", "both", " ", "arm"}], "-", 
   RowBox[{"Gains", " ", "for", " ", "CLIK"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799911523910018*^9, 3.7999115450945272`*^9}, {
  3.8002638941796017`*^9, 3.800263967435726*^9}, {3.8002641343730316`*^9, 
  3.8002641363184595`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"KP", "=", 
   RowBox[{"kp", " ", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388313360710966*^9, 3.3883134221728525`*^9}, {
   3.388320537269215*^9, 3.3883205374039717`*^9}, {3.388320941997217*^9, 
   3.388320942165175*^9}, {3.3883214153848867`*^9, 3.388321415480584*^9}, {
   3.388321752326212*^9, 3.3883217528544984`*^9}, {3.3883769440061464`*^9, 
   3.3883769441467714`*^9}, {3.38837928302395*^9, 3.38837928321145*^9}, {
   3.388387707896041*^9, 3.388387708255416*^9}, {3.3883898752242265`*^9, 
   3.388389875527918*^9}, {3.388483562464546*^9, 3.388483562542671*^9}, {
   3.388751692888836*^9, 3.388751693160302*^9}, {3.388752359018076*^9, 
   3.3887523594975367`*^9}, {3.388752519172864*^9, 3.3887525193720703`*^9}, {
   3.7999263621401215`*^9, 3.7999263622019815`*^9}, 3.7999264251173625`*^9, {
   3.7999803502366147`*^9, 3.79998035947952*^9}, {3.7999807077734175`*^9, 
   3.799980707901066*^9}, {3.8000753665061307`*^9, 3.800075366586261*^9}, {
   3.8000801117633233`*^9, 3.8000801120509377`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"KO", "=", 
   RowBox[{"ko", " ", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388313416904635*^9, 3.388313440307434*^9}, {
   3.3883205432678547`*^9, 3.3883205436682196`*^9}, {3.388320947061346*^9, 
   3.3883209472127037`*^9}, {3.799926365052382*^9, 3.7999263651281266`*^9}, 
   3.799926427268155*^9, 3.7999803573250685`*^9, {3.8000801149874477`*^9, 
   3.800080115050621*^9}}],

Cell[TextData[{
 "Control law: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox[
     UnderscriptBox["q", "_"], "."], "=", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["J", "w"], "R"], "(", GridBox[{
       {
        RowBox[{
         SubscriptBox[
          UnderscriptBox["v", "_"], "des"], "+", 
         RowBox[{
          SubscriptBox["K", "P"], 
          SubscriptBox[
           UnderscriptBox["e", "_"], "P"]}]}]},
       {
        RowBox[{
         SubscriptBox[
          UnderscriptBox["\[Omega]", "_"], "des"], "+", 
         RowBox[{
          SubscriptBox["K", "O"], 
          SubscriptBox[
           UnderscriptBox["e", "_"], "O"]}]}]}
      }], ")"}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.3883135856252813`*^9, 3.38831360111843*^9}, {
  3.388747584037561*^9, 3.3887476182023664`*^9}, {3.669901960635333*^9, 
  3.6699019686849475`*^9}, {3.6700618821679993`*^9, 3.6700619233208714`*^9}, {
  3.670061984582179*^9, 3.670062052801099*^9}, {3.7999317806138387`*^9, 
  3.7999318075638685`*^9}, {3.7999803334205704`*^9, 3.7999803389875364`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   OverscriptBox[
    UnderscriptBox["q", "_"], "."], "=", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["J", "W"], "R"], "(", GridBox[{
       {
        RowBox[{
         SubscriptBox[
          UnderscriptBox["v", "_"], "des"], "+", 
         RowBox[{
          SubscriptBox["K", "P"], 
          SubscriptBox[
           UnderscriptBox["e", "_"], "P"]}]}]},
       {
        RowBox[{
         SubscriptBox[
          UnderscriptBox["\[Omega]", "_"], "des"], "+", 
         RowBox[{
          SubscriptBox["K", "O"], 
          SubscriptBox[
           UnderscriptBox["e", "_"], "O"]}]}]}
      }], ")"}], "+", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"I", "-", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["J", "w"], "R"], 
         SubscriptBox["J", "w"]}]}], ")"}], " ", "\\", "gradq"}], " ", 
     RowBox[{"H", "(", "q", ")"}]}]}]}], TraditionalForm]], "Text",
 CellChangeTimes->{
  3.8019832115418406`*^9, {3.8020921779361935`*^9, 3.8020921825199423`*^9}, {
   3.8020922530504155`*^9, 3.802092259609458*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "funzione", " ", "scalare", " ", "ALE", " ", "scrivimi", " ", "in", " ", 
   "inglese", " ", "ti", " ", "voglio", " ", "bene"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8019825862556953`*^9, 3.801982602133591*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Hl", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", " ", "1"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", "nangoliH"}], ")"}]}], ")"}], " ", "*", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q1", "-", "q1c"}], ")"}], "/", 
         RowBox[{"(", "RANGEq1", ")"}]}], ")"}], "^", "2"}], " ", "+", " ", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q2", "-", " ", "q2c"}], ")"}], "/", 
         RowBox[{"(", "RANGEq2", ")"}]}], ")"}], "^", "2"}], " ", "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q3", "-", "q3c"}], ")"}], "/", 
         RowBox[{"(", "RANGEq3", ")"}]}], ")"}], "^", "2"}], "  ", "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q4", "-", "q4c"}], ")"}], "/", 
         RowBox[{"(", "RANGEq4", ")"}]}], ")"}], "^", "2"}], "  ", "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q5", "-", "q5c"}], ")"}], "/", 
         RowBox[{"(", "RANGEq5", ")"}]}], ")"}], "^", "2"}], "  ", "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q6", "-", "q6c"}], ")"}], "/", 
         RowBox[{"(", "RANGEq6", ")"}]}], ")"}], "^", "2"}], "  ", "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q7", "-", "q7c"}], ")"}], "/", 
         RowBox[{"(", "RANGEq7", ")"}]}], ")"}], "^", "2"}], "  ", "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q8", "-", "q8c"}], ")"}], "/", 
         RowBox[{"(", "RANGEq8", ")"}]}], ")"}], "^", "2"}], "  ", "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q9", "-", "q9c"}], ")"}], "/", 
         RowBox[{"(", "RANGEq9", ")"}]}], ")"}], "^", "2"}], "  ", "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q10", "-", "q10c"}], ")"}], "/", 
         RowBox[{"(", "RANGEq10", ")"}]}], ")"}], "^", "2"}]}], " ", 
     ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.801977743324507*^9, 3.8019778434975553`*^9}, 
   3.801978197169995*^9, {3.8019782805377674`*^9, 3.8019782861554794`*^9}, 
   3.801979154243162*^9, 3.8019796223070493`*^9, {3.8019820834056487`*^9, 
   3.801982096132546*^9}, {3.801982204261421*^9, 3.80198224396527*^9}, {
   3.801982329414282*^9, 3.8019823321744504`*^9}, 3.8019824898710103`*^9, {
   3.8019834324226637`*^9, 3.8019834993905373`*^9}, {3.8019885978900414`*^9, 
   3.801988603025817*^9}, {3.8020011212531424`*^9, 3.802001125028287*^9}, {
   3.802088560058618*^9, 3.8020885691162214`*^9}, {3.802088600897732*^9, 
   3.802088717835994*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "mettere", " ", "cose", " ", "in", " ", "piu`", " ", "dentro", " ", "H"}], 
   ",", " ", 
   RowBox[{
   "magari", " ", "con", " ", "dei", " ", "pesi", " ", "associati"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.802005786961296*^9, 3.8020057986033*^9}, {
  3.8020058297639046`*^9, 3.8020058420118685`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gradHl", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Hl", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7",
         ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7",
         ",", "q8", ",", "q9", ",", "q10"}], "}"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.801978104113341*^9, 3.8019782475935974`*^9}, {
   3.801979150994837*^9, 3.8019791706041603`*^9}, {3.8019792233395576`*^9, 
   3.801979225258745*^9}, 3.801979623084062*^9, {3.8019823584945273`*^9, 
   3.8019823594134645`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"qpl", "[", 
    RowBox[{"time_", ",", 
     RowBox[{"{", 
      RowBox[{
      "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
       ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
      "}"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k0", "=", "5"}], ",", "J", ",", "pseudoJ", ",", 
       "nullJprojector", ",", "qpd"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"Jacl", "[", 
        RowBox[{"{", 
         RowBox[{
         "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", 
          "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pseudoJ", "=", 
       RowBox[{"Jwl", "[", 
        RowBox[{"{", 
         RowBox[{
         "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", 
          "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nullJprojector", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "10", "]"}], "-", 
         RowBox[{"pseudoJ", ".", "J"}]}], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"qpd", " ", "=", " ", 
       RowBox[{"k0", " ", 
        RowBox[{"gradHl", "[", 
         RowBox[{"{", 
          RowBox[{
          "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", 
           "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pseudoJ", ".", 
        RowBox[{"(", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"vell", "[", "time", "]"}], "+", 
            RowBox[{"KP", ".", 
             RowBox[{"ePl", "[", 
              RowBox[{"time", ",", 
               RowBox[{"{", 
                RowBox[{
                "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", 
                 ",", "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}]}], 
              "]"}]}]}], ",", 
           RowBox[{
            RowBox[{"angvell", "[", "time", "]"}], "+", 
            RowBox[{"KO", ".", 
             RowBox[{"eOl", "[", 
              RowBox[{"time", ",", 
               RowBox[{"{", 
                RowBox[{
                "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", 
                 ",", "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}]}], 
              "]"}]}]}]}], "]"}], ")"}]}], " ", "+", " ", 
       RowBox[{"nullJprojector", ".", "qpd"}]}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388313603754004*^9, 3.388313687552352*^9}, {
   3.3883140204792852`*^9, 3.3883140504451404`*^9}, {3.3883140906105385`*^9, 
   3.38831418094753*^9}, {3.3883142420149107`*^9, 3.3883142518463125`*^9}, {
   3.3883145305394125`*^9, 3.3883145679891644`*^9}, {3.388321829194339*^9, 
   3.3883218441845903`*^9}, {3.388321911388297*^9, 3.388321917259015*^9}, {
   3.388489216765004*^9, 3.3884892562414684`*^9}, {3.3884893736008434`*^9, 
   3.3884893955383434`*^9}, {3.388749269863255*^9, 3.388749279518887*^9}, {
   3.3887497010221825`*^9, 3.3887497043647423`*^9}, 3.669804941313795*^9, {
   3.799926456054603*^9, 3.799926539095886*^9}, {3.799926924657916*^9, 
   3.7999269260121827`*^9}, {3.79992699489312*^9, 3.799927085589289*^9}, {
   3.7999289315546017`*^9, 3.7999289413518944`*^9}, {3.79992916865453*^9, 
   3.799929173141063*^9}, {3.7999295008476*^9, 3.7999295110428314`*^9}, {
   3.8019785839501343`*^9, 3.801978586643591*^9}, 3.8019786415051455`*^9, {
   3.8019786877194977`*^9, 3.8019786921149015`*^9}, {3.801978811968875*^9, 
   3.801978897034504*^9}, {3.801979046250758*^9, 3.8019791432103977`*^9}, {
   3.8019793496603746`*^9, 3.801979375163555*^9}, 3.801979439555063*^9, 
   3.801982361375595*^9, {3.8021465751868935`*^9, 3.802146575881546*^9}, 
   3.8021476572769537`*^9, 3.8021553533158617`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qpl", "[", 
  RowBox[{"2", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7999289447586966`*^9, 3.799928994064047*^9}, 
   3.799929162719632*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "26.050209689146993`"}], ",", 
   RowBox[{"-", "13.227809990206973`"}], ",", "1.8236533357014073`", ",", 
   RowBox[{"-", "9.953847067456426`"}], ",", "16.496859002490766`", ",", 
   RowBox[{"-", "6.364937831261567`"}], ",", 
   RowBox[{"-", "5.0648267944712755`"}], ",", 
   RowBox[{"-", "4.255081142551557`"}], ",", 
   RowBox[{"-", "11.456805513852384`"}], ",", 
   RowBox[{"-", "29.630489831701233`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7999292136672015`*^9, 3.799929465453414*^9, 3.799929516948886*^9, {
   3.799979705587844*^9, 3.799979710556862*^9}, 3.7999801951236396`*^9, 
   3.7999803692309184`*^9, 3.800075372659088*^9, 3.800077208132784*^9, 
   3.8000773033920393`*^9, 3.800079439645579*^9, 3.800080324908976*^9, 
   3.800081839229045*^9, 3.800209559657793*^9, 3.8002558300853014`*^9, 
   3.800265265871502*^9, 3.8004390723861375`*^9, 3.800441915917117*^9, 
   3.8019835494304776`*^9, 3.8019840939319344`*^9, 3.8019846285284815`*^9, 
   3.801988647334916*^9, 3.8019890587086163`*^9, 3.8019895489902835`*^9, 
   3.8020011498882504`*^9, 3.802092636851066*^9, 3.8020934980501194`*^9, 
   3.8020944293508654`*^9, 3.8020950468444505`*^9, 3.8020956437805643`*^9, 
   3.8020968737926292`*^9, 3.802099506890468*^9, 3.802104265168535*^9, 
   3.802109483859002*^9, 3.802146796947929*^9, 3.802147339780158*^9, 
   3.802147892882699*^9, 3.802155596968556*^9, 3.8021568002913637`*^9, 
   3.8021576238055964`*^9, 3.8021582926672063`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"vell", " ", "=", " ", 
   RowBox[{
    RowBox[{"linear", " ", "velocity", " ", "from", " ", "data", " ", 
     RowBox[{"(", 
      RowBox[{"real", " ", "values"}], ")"}], "\[IndentingNewLine]", 
     "angvell"}], " ", "=", " ", 
    RowBox[{"linear", " ", "velocity", " ", "from", " ", "data", " ", 
     RowBox[{"(", 
      RowBox[{"real", " ", "values"}], ")"}]}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7999271376964397`*^9, 3.7999272018443213`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integration of the kinematics", "Subsection",
 CellChangeTimes->{{3.388484805902046*^9, 3.388484817667671*^9}, {
  3.388485027370796*^9, 3.388485039636421*^9}, {3.669902114316833*^9, 
  3.669902131491274*^9}, {3.7999322214194775`*^9, 3.7999322276083364`*^9}}],

Cell["Time horizon", "Text",
 CellChangeTimes->{{3.388750751508658*^9, 3.3887507634991016`*^9}, {
  3.6699023375992365`*^9, 3.669902343654047*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"t0", "=", 
   RowBox[{"1", "/", "samplerate"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7999009647634892`*^9, 3.7999009696913867`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsubsection",
 CellChangeTimes->{{3.799931916982396*^9, 3.799931926487735*^9}, {
  3.800072366556286*^9, 3.800072367780327*^9}}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Differential", " ", "equation", " ", "resolution"}], " ", ",", 
    " ", 
    RowBox[{"with", " ", "given", " ", "initial", " ", "condition"}]}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.800264210334044*^9, 3.800264233260801*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"soll", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Equal", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"q", "[", "time", "]"}], ",", "time"}], "]"}], ",", 
          RowBox[{"qpl", "[", 
           RowBox[{"time", ",", 
            RowBox[{"q", "[", "time", "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"Equal", "[", 
         RowBox[{
          RowBox[{"q", "[", "t0", "]"}], ",", "q0l"}], "]"}]}], "}"}], "]"}], 
     ",", "q", ",", 
     RowBox[{"{", 
      RowBox[{"time", ",", 
       RowBox[{"t0", "+", " ", "0.01"}], ",", 
       RowBox[{"tend", "-", " ", "0.01"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388485150683296*^9, 3.388485195636421*^9}, {
   3.388485412839546*^9, 3.388485425667671*^9}, {3.388485527573921*^9, 
   3.388485542511421*^9}, {3.388485583761421*^9, 3.388485588667671*^9}, {
   3.388485837362441*^9, 3.388485877409316*^9}, {3.38848687364633*^9, 
   3.3884869285057044`*^9}, {3.3884880517125616`*^9, 
   3.3884880819469366`*^9}, {3.388488418701748*^9, 3.388488436529873*^9}, {
   3.3884895251964703`*^9, 3.3884895254152203`*^9}, {3.3887477709132957`*^9, 
   3.3887477830394726`*^9}, {3.388748104301137*^9, 3.388748214630013*^9}, {
   3.3887482714330177`*^9, 3.3887482768164625`*^9}, {3.388750054648963*^9, 
   3.3887501125700607`*^9}, {3.388750200514627*^9, 3.388750204745802*^9}, {
   3.3887502580939493`*^9, 3.388750259341916*^9}, 3.669805013954338*^9, {
   3.669901869145849*^9, 3.6699018709866524`*^9}, 3.6699021731277466`*^9, 
   3.6699024170873766`*^9, 3.669902500180066*^9, {3.799927506220837*^9, 
   3.7999275087434263`*^9}, {3.799927542008089*^9, 3.799927568546587*^9}, {
   3.7999276805383396`*^9, 3.799927751527281*^9}, {3.7999289009932137`*^9, 
   3.799928914224619*^9}, 3.8000772918221483`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"qsoll", "[", "time_", "]"}], "=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"q", "[", "time", "]"}], "/.", 
     RowBox[{"soll", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388750404220339*^9, 3.388750420039639*^9}, {
   3.3887504706037855`*^9, 3.3887504712033567`*^9}, {3.3887506575644755`*^9, 
   3.3887506792105513`*^9}, {3.388750730879119*^9, 3.388750732388788*^9}, 
   3.6698050201319485`*^9, {3.7999279255397797`*^9, 3.7999279381543274`*^9}, 
   3.799930487058312*^9, 3.8000794334340754`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "7", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "9", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "10", "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"time", ",", 
     RowBox[{"t0", "+", " ", "0.01"}], ",", 
     RowBox[{"tend", "-", " ", "0.01"}]}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "[", "s", "]"}], ",", " ", 
      RowBox[{"q", "[", "rad", "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q1\>\"", ",", " ", "\"\<q2\>\"", ",", " ", "\"\<q3\>\"", ",", " ", 
      "\"\<q4\>\"", ",", " ", "\"\<q5\>\"", ",", " ", "\"\<q6\>\"", ",", " ", 
      "\"\<q7\>\"", ",", " ", "\"\<q8\>\"", ",", " ", "\"\<q9\>\"", ",", " ", 
      "\"\<q10\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758443792821266*^9, 3.758443795038574*^9}, 
   3.7585175957573547`*^9, {3.758517630772461*^9, 3.7585176307729626`*^9}, {
   3.799930517891491*^9, 3.799930609091443*^9}, {3.7999306456064987`*^9, 
   3.7999306681464467`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
fnt6GnC/ahk70mWU3QyvN323+IH7bfjt0+f9SptBc0F67vM+Juiyr7cV1zXD
Atqu/16RCXkzIU3S7Gb4MnHHJUIZ94u/jDrSvhZAmd2asJ8JR7gvfCv42AI/
OBx0W4AJ/4LsYfxHC5gRw969QPh9eL2+SDS0QJelT53lISaIr0v6HD6D7zfT
flCnxYSm8HzVCs5WaO8rE/HTZsJjwYq85fWt0Mz7rVBVhwlLQiMfbJVboeXQ
J4/Qw0z4GL20N/FwK/gWqczKH2HCjc18WU1mrRAWwClYi83aqpB+2LkVZM4X
71g8ip8Xp7XLza8VXL+UPvfTZYKO+MnknKhWWOUel82rx4QcCZfEbQWt0KDh
scKpz4TryQFi5r/w/W7Xdrpgi+2KfR3CaoW732Z292Iz096J/BhsBX4Lvzxd
AyaE7v4SuzDXCuNgciIFWyeTJiy/qg3kRfxSlrEX5bqibITbYO/nVRaGx5jw
IZu9/tWuNvhq1L0+CvvaPtKzerU2+PnJPLQRe1vuen4evTZ4eIHLnfc4Hk9Z
8gmyaIONQRxvD2CHFKiucbneBtLrusouYGvv1wvOvNcGif6z7x5gLxZacvcF
4vFidaUeY2cfvOm/ObYNGm1UeJ5jX/3qzmWS3gYOErayUdii6Im3fyG+LkK5
HoytNshv7EBtg1eyWze5YJ94HCFyrqUNbgaA0mlsO+WNw0d/t8HgeL3yHuyA
tpi8fYttYJJO/jqL55/oLeK1lacdx/HKow/YxTJxhqs2t4MODxGssJl08S3T
0u0Azp4FBGy269vB9v3tYL/nfk4kXi9eMancCr122GtrTBDBlvyV5vnRoh2U
HIRdIvD6IzvZ46+vt4NzTdrYMt4/yw3vNwXea4fE0GDtM9iOxQoDdwPb4W4e
95k0vN9PLuXmnI9ph/suuluHcTyUffhsoPS5HUpOEU5o4HjpOH1QeFtlO3Re
p7wzwfG1sPK1j7u5HYJ9yhxP4fiTMyxz75xvB+8gtd8qOF51Z4/oU1d1AP9W
Fe51OJ4vvqwUyhPuAEnHX3nNOP6f/6a9D1LrgLpEiQoNDRxf4SZuTrod8LTh
aBVLHZ9X1Rp0rU53gOWj6qfWB5jA4d/crezaAYUVCzPaqjied/QJdhd0QOSA
RO8hfN71odp0Vf3qgF3am0pOyTEh7s5wRj6rAyISX82dxefXhpLxwyFzHeC0
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
YT0=
          "]]}, Annotation[#, "Charting`Private`Tag$1419086#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$1419086#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Q20NbPgfb1JVtw==
          "]]}, Annotation[#, "Charting`Private`Tag$1419086#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/w9feAwS
          "]]}, Annotation[#, "Charting`Private`Tag$1419086#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV22k4lF8bAPCxqyTZichOErKF3E8qkZLKFuWvRJKkxVIUIRJKihApJWuU
JSKeEGbGLvtujH3Ivg7e837q+l3NzHPOvZ3zfLDv6u3zDowEAkGVmUD4/7/B
aoMVT03eQadMVzL2lIKn25PvVerGw2V3gaVK5NrIXEmW/Qlwd+G3pVEQBeea
fRoQyJYI/EE3vp4KRv9vEfXxqN1HeEM7+PdwCAU349G+ggklQ+TfBrPWMAp+
LSxg4EhoJuy8P29r+5qCL0p6FV5m/Ao81VVHypCDil0iHj34CqoWSm8k31Dw
1AlzrOR6FugoLlSOIHtI8ZrulfgGaYw1BKdoCl7kP5KdsPkdNM5ffWAVS8H1
IfR2fEE+GJ9XXht/T8E9j0hMK63kA98dziWDRAqeqfPTpUzrB4yJ45qfkPm1
Rm+M/PwBPdOkTxc/UPBx5WPXlH8VANOD5ZTSjxQ8QmLd6s/vn3DfKZ3q8pmC
97Pc1KeRSoBh2WPTJI2C8zIzlj3eXgrFApomMciGjLGw27gULjOcuzCInLNZ
patRWwrXL2UH3k1H+1uW0PSrxyGLkun9KoOCv70/xfd8/DcUqn2LLftKwfUc
k7fvnS4Hhh9ckxI5FHxMLiHiGEcFLJeykRyQIyff8N9QqICdBR+rUpFH3QIl
8hwr4I2octvBXLReb3vtU/0VsCDnU3Q8j4IPRuxz9mj8A6W+9c+Df1DwsAtC
M++m/4DNi+fbm5E1+Hd7lHFUgotGHl2kgII/f0fw5zCqBO7kSeU8ZNUv/bFJ
ZZUgtEf3Na2QggcWJ5Dqc6ogg7ct5kUxBVd6HHV2obEK/srL1o4gd2DhrUL/
quBmdmk1/KLgilU+g9f2V8M5p+z1eeTWRpvVtU/VAIK6rddKKbjMiJC8bBQR
rqkJRdwoo+Akruhnvp5kEGSRFqBXU3DtvW4ZO6PIYGpT+deFiPK3/1T9uxwy
3MmqLO9DfmGwyVM4RYbTfe58VSRUbz6OiTP2NWDix531sYaCV4Vg5Y+f1EB1
QdXePbUUXPOt8DBHYg28VPN/HoUsnFOvIN9VAzVvg3+/qKPgA6MaP66Y1oLs
g1fmGQ0U/PwiV+e/W7WQJ7tTWqeRglcwTq4/Cq2FL+LvD9YjfxFNPBpXVQtj
4dwRG00U/OYFtrpm3TrwJYgUPm6h4D12g//srOtAJetzqnQrBTdxLeb+51kH
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
Xxz/00nUHxXMp6PR+fU/1cM9Tg==
          "]]}, Annotation[#, "Charting`Private`Tag$1419086#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$1419086#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVmnc41e8bx885znFQiYiShpGSEdmt+0mlpKymSCEjyg5JCGVWyCgR+dpU
ZJbqCNl77+y9j3UGfp/fP1yv6/P5PM+9nvt539d1hIxtdE0JOBzOE/vz//++
8gMlLzQ/wJYGc/RiLIuSZlLl8PdkNIzX6blo9mdRakKzRUgSMfDTi/Prvs4s
CtfCC28fcixYvvfga6rCnt8I/3Tm3ifgZNud4fgli3KN57gR2p0Ik2dCHg08
zqLcD/LuPxWYAW/o3x6IsmRRVCHQJjo/F35G6G0e2J1JOW2WyLFvthiaDCj/
ifRlUMYPxwSf3VoCMnYFVf1NGZTQqTC+B0dKYPTx1Keo8gzKmK2PcI5ZCdRr
Pu8byMygBD81OX7pXwlwfk78ouqVQRkIFrJ0aigF+ZwmMbcDGRSfwpjKum9l
MMCXNEK6nE6Rdg/XWmoog0HKPj220+mUDvSqdfdcGYz0PTRfPZpOkSxzG7gv
UQ5ynE3Z0TzplNYGfRr9v3K4zGfxYktXGkVsdLf4ofAKuBlT2uhvkkap5Irw
83CugonAcPNF81TK8X226dvCq6A2OiHR+WYqJUPiUt2Hb1XwSH9AqVMtlfJa
bYOnYKYKNOYLHsgdTKVcczOLnTephqaTjb90+lMo/WOKeUbaNfCnpcqCTTOF
orvM1Tn3qAa4hj2v2B9PoZQQphjPAmsgIdD6TLBYCiVpb+yZqLIaWHSKvjKz
nkyxukqubTpZC4TIiFDN1GTKyu/2obPidUB/JuThuZhEsajJYm1Sq4O7doI7
UjqTKJ2dgeL37tdB2sVVMipKovxcAhu32DpQeiT3siowifL8SAo9Z2c9hHMI
KPkIJlEWlbz2npWrB8HGB3esNhMp988boEbtejBvMLBpHkikqN3jejkTWA91
cXe/SSUmUlg1frLx4Btgm2zBPkWxRApFR1yga3sDcAp6L3OQEikutyIkPu1r
AEY/v9DsYAJlwtRW8+jJBriq2Bwz/SGBUuMpGqbh3ACnek92HWBJoITkBe33
mcG+X14NHEqJpwxPxLUGrjeAXtR4D+NxPEV5b27g222N0Ecey5JUjaf0e/eu
xks1goen9IXetk8UGR3phj+PGiG/8fgrq9k4io+P6svKZ41Q5Bt6LyczjtKR
f+Nk46tG8FS/3hZuF0fx2OeR0v+5EZ43HPCw7Iul1E3Ve27ONIJN0JLg35wY
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
5i3D4qnQferW1AQI1waYzZcTkfXmbrG33RMw5HdbPbmaiCpGWjb/Fk6AGY7O
ubOZiDysXx83dpsAqznlqPkBzN8Id3opfgKcavMykzeJyHWlWnqBexwmg7MV
0/Ek9EhGo+cFYRwMr2X+/MJCQtujlVbFqWOg1p1akUsmIS+KWdebljHgm4ju
L9lOQi6/9uw1jxyDfKI3V/9+EpLbyKn6LTIGaye0bHchEio49sTW/+YoPNzU
WNmjSkK/eEfUeS+PQn/xRbf950go9LHyiSI0ChXqqn5iF0no6d+nq2ZHRuH9
TYU4eW0SKh2/aPhoYwSOO+xp0L5HQnw1nzPepIzA07Sxo/6eJLRLLb+QgB+B
w8e0XC29SKi5XYZFfnUY2r7nlWr4kFDsyfvN92eGQabyhR6nHwkJWx/IzO8c
huExEe+3b0jIRPHZ+5qsYbh88F5bzEcSCnJ+1nDUcBj2xnW4fftJQinhU9c+
Zw9B1SFU/vY3Zv+g8MiLlCFw+ZrM/biIhN67p/XbxgxB02+nJKVSEmL+0LGy
9R2Cl728DT+rSahcJpfwS38IZgV0RMq7SMj65fddYixDQAmvrOxeI6EDRN8x
gt4g7FLdjMmmY/5NxJSqaA2C/ay8fSCThPaMhz1xOj8IYhfiBE7gWNFRpqEl
XXYQgtacrKLIrGhg/z/2t1sH4Za+6DY9Plb0vNox4mzFAMwf8NBuk2NFu3i5
l/FXBuBAhnx7gzUrOvXj9U4+037YdnqT0mDLitSOGPRI3ekHen1lSoM9K9pt
/vTQxev90EI1dG1wYkU35DIPPDvfD74n/Pc2uLMioTnF4sKD/TBb1WtS/5oV
rciOCr+v/Ae/Jl7O135hRYMcH1SM//RB2lOdztpMVpQkkmqal9kHEdsEi2u/
saLRFrVdwnF9YCub9bY2jxVdqmjYJufRB6JPuhVrf7Mil/jYuLFTfRDEJvOs
po4V6U+SbHwKe+H2oU726llW1PhkQLCgsgc8n3Hmp8yzoh03ZftO/eyBpOaz
918usiKj/cYPFr/0wKLHl99nVljRxOs393rDesC/w9uhYJ0VmUs1lj007oEC
f+nexK1kJCdwZr8xoQf6/pkEeHOSUcIlFevPK91AVHyvZMRFRhEB0mssU92g
PcgSKshLRi5DQZm8Ld0wdrxT7e0eMrK4/vN2Z0o38E17Z3oeIaPj47KGkbe7
4aTq9zuGkmRUWkuZv6/TDcbvZjlOSpPRB4uo5ssXu+HLOT3TVVkyAg1JrfuK
3XA+RlrAWoWM8sivBcJ4u8GSalKucYKMONwSXxVu7YZg9feO4qfIiPmknChI
6oaeZZb6YURGlCCjfreVLnDU7PTWv0hGnekKxY7dXRCVwCmrcomM0tu8QwRa
u6CIfraP7zIZbUnjcBip64KtyV+Um7TI6G0Vv8FgcRckbHrPXLxJRjnmG6mX
Mrqg6vr3KDE9MhpYE3mxnNQF8+mzF4j6ZCQVuSJa/On/vyvQi6cYktEfvib3
75Fd0JwpfVPRjIwu+ThcX/Tpgtd3JUM1LMjoQU4KjubRBZc4j9TesyQjY53e
xt1Pu6DY6uDZQGsyMhWfKoy364JMMcGj/U5k1JzUKpFwtwuCotnJAb5kxOuV
+Gz9dBdc1CCrxvqTEavCI23JE13AQic+ywkkI1FR7pdmSl3gehNH7XtDRiZf
FlVoR7vgwY7VPrl3ZPRVd1nFQ6gL1PyG83pTyOh0yn+iR8ldQFAaXFhMIyN+
VfyQLLELfo38k2T7TEZNCs9JqvgukD/bHX8si4wqD0t/esnoBJGNxte+38lI
XPIKj998J/Rl1FdGF5KR1hL9W89MJ0Tp1xK//SKjuMU5nORUJ+z4XuHa84eM
lHH3AgJGOgHnSDGTrcLy6Vz8XL6zE34K//qkVkNGMdVktcHWTnBu/NGjX0dG
uUdHfjk1dcKsdJ7uyyYyIvKbb+pUd0Jab/arDy1kdNk1Yj2yvBPMgrIqMtvI
KGTvV56Skk7oncg43d2F5YOWp15e2Anv3qU9me8hI4lXvzpi8zvh2oWUHNI/
Mto7d+K1fU4ncK0kzgkMYPlPJlENsec1Cf8dkRnC6jmX/UxBUSf4Xf1ken6E
jIR3nwvmbeiEs4TYuNtjZLR9jj2eiPmzkRndbTNBRm+6tTl2bnbCj7tRfC+m
yMja8LB0/d4u+B9+ANa6
          "]]}, Annotation[#, "Charting`Private`Tag$1419086#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
xfzCCg==
          "]]}, Annotation[#, "Charting`Private`Tag$1419086#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$1419086#9"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
IZbvSJE6NUCDb7BXntLVQvwfeKF5lw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1419086#10"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        RowBox[{"0.4000000000000057`", "\[InvisibleApplication]", 
          RowBox[{"(", "s", ")"}]}], TraditionalForm], 
       FormBox[
        RowBox[{"q", "(", "rad", ")"}], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.026666666666666665`, 2.99}, {-1.7385575353116227`, 
      1.7615206612928367`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"q1\"", "\"q2\"", "\"q3\"", "\"q4\"", "\"q5\"", "\"q6\"", "\"q7\"", 
       "\"q8\"", "\"q9\"", "\"q10\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellOpen->False,
 CellChangeTimes->{3.7999306143494363`*^9, 3.7999306825402374`*^9, 
  3.7999797075568137`*^9, 3.8000755811007676`*^9, 3.8000772085699787`*^9, 
  3.8000775232113256`*^9, 3.8000796626482716`*^9, 3.800080546282995*^9, 
  3.8000820747217426`*^9, 3.800209997257622*^9, 3.800256071233099*^9, 
  3.8002655397237043`*^9, 3.8004393719495325`*^9, 3.8004421830344067`*^9, 
  3.80198387832699*^9, 3.8019844162776184`*^9, 3.8019849520111966`*^9, 
  3.801988972286105*^9, 3.80198940160056*^9, 3.8019898810009346`*^9, 
  3.8020014745512047`*^9, 3.8020928926130033`*^9, 3.802093752267644*^9, 
  3.8020946767233844`*^9, 3.8020953097541084`*^9, 3.8020958835990825`*^9, 
  3.8020971983971415`*^9, 3.802099896211588*^9, 3.8021046395958567`*^9, 
  3.8021097449451985`*^9, 3.802147037066841*^9, 3.8021475644270077`*^9, 
  3.8021481495078864`*^9, 3.8021558513692536`*^9, 3.8021570760746937`*^9, 
  3.802157896962311*^9, 3.802158593350836*^9}]
}, Open  ]],

Cell["qua si vedono i picchi di errore che si registrano sotto", "Text",
 CellChangeTimes->{{3.800257939194236*^9, 3.800257987905402*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hand error", "Subsubsection",
 CellChangeTimes->{{3.7584440538903522`*^9, 3.7584440704590893`*^9}, {
   3.758517630794376*^9, 3.758517630794376*^9}, 3.7585180154418917`*^9, {
   3.799932927054405*^9, 3.7999329335715075`*^9}, {3.7999332248933783`*^9, 
   3.7999332258475437`*^9}, {3.8000723709244223`*^9, 3.800072372324107*^9}, 
   3.8000755158259587`*^9, {3.8002643287382174`*^9, 3.800264338724165*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ErrPOSsoll", "[", "time_", "]"}], " ", "=", " ", 
   RowBox[{"ePl", "[", 
    RowBox[{"time", ",", " ", 
     RowBox[{"qsoll", "[", "time", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6817951909469123`*^9, 3.6817951918969135`*^9}, {
   3.681795261985012*^9, 3.681795262225013*^9}, {3.7252759958163743`*^9, 
   3.725276022920084*^9}, 3.758517595825554*^9, {3.758517630796379*^9, 
   3.758517630796379*^9}, {3.799932939497407*^9, 3.799932993707328*^9}, {
   3.799933228706691*^9, 3.79993323810767*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ErrPOSsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"ErrPOSsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"ErrPOSsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"time", ",", " ", 
     RowBox[{"t0", "+", "0.01"}], ",", " ", 
     RowBox[{"tend", "-", "0.2"}]}], "}"}], ",", " ", 
   RowBox[{"PlotStyle", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", " ", "Blue", ",", " ", "Green"}], "}"}]}], ",", 
   " ", 
   RowBox[{"ImageSize", " ", "->", " ", "Large"}], ",", " ", 
   RowBox[{"PlotRange", " ", "->", " ", "All"}], ",", " ", 
   RowBox[{"TargetUnits", " ", "->", " ", 
    RowBox[{"{", " ", 
     RowBox[{"\"\<Seconds\>\"", ",", " ", "\"\<Meters\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"AxesLabel", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "[", "s", "]"}], ",", " ", 
      RowBox[{"ep", "[", "m", "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<ep(x)\>\"", ",", " ", "\"\<ep(y)\>\"", ",", " ", "\"\<ep(z)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6817943475327263`*^9, 3.681794355063737*^9}, {
   3.681794477554909*^9, 3.681794504248947*^9}, {3.681795265236017*^9, 
   3.681795270536024*^9}, {3.682355352744567*^9, 3.6823554355027122`*^9}, {
   3.682355485859601*^9, 3.682355492895213*^9}, {3.682355556293724*^9, 
   3.6823555599285307`*^9}, {3.682356089660661*^9, 3.682356095463872*^9}, {
   3.725271692932171*^9, 3.7252717149928355`*^9}, {3.7252760390439005`*^9, 
   3.725276044393941*^9}, 3.758517595825554*^9, {3.758517630798382*^9, 
   3.7585176307993937`*^9}, {3.7999329990613146`*^9, 3.799933019036232*^9}, {
   3.799933241478352*^9, 3.7999332475626726`*^9}, {3.799934102294941*^9, 
   3.7999341088578014`*^9}, {3.800443012751566*^9, 3.8004430314473715`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
F3jw//Wdbzm+Wh7X/0l86DHt+lH6c2cNHQx2Zk9k5tD2Q2lJ8Sg9yLSczT6S
S6sXdTJkbA00wVaRb69o15+fku6udUAhIW1epbT5cmz2NUygUD5zcaqc5v8O
l5xhBk/N/btPVNHG/9uap7wRUsredczWonPdz11cvxla1ZWDT72j3T8ZrKET
W4ChNEt8vhGd3nZYbo4FVNTYuvxa0QVnFn9psYF3SVDor3b0eNzllkdbIV1l
WjKgi7Y+5lN1u/+DjldOPb97aeMjOJqrt4FGkaLMv0H09k8TWzS4wUcx89Ol
Udr5cj15jHM7ZBWwXKN8Q4+M+NCt54ONLyc/r5lDO9b59LLuAG25vdevzKPP
C9ZxCQuCX16dwrpFtMInzjHdndD34v4N5hX0nadlRfFCwCK9RTmS7juh6Oa5
bH4nDPrPA4c2rUVPHRhMYhCFAMmJm9FM6Bjpt8zU3fA0x0GVdSPaeuA4R4wY
9IvXjsRtQUdeCQ35Ig5sT+Vi2Leit529/KdTHAzF0tUTtqHtX5ltmRKD89mb
vnJwo39F+/4TFYPnohfi7vKiO4tHrCN3w9CjcU2eHeioTl1t9t2wTcT+W8ou
2njbCnYQBZOH1fF8oujNzyzP3RCFS0Ky2uni6ISxVKYAUcjPSp3cIY3WEqd3
vywKYzs3JmbKoU984TfNEQXuzHO6QkpoSt0av++iYC74dfqhKrriHE+u1W4I
vW97V1QT/fje6/GG3VAkUKX/RBvN5EJPf1AMJtKk58T1v9O+58PG14sDH/+9
5GdUWt5yILtBHKxTmanSe9DjHWVWmRJwlTfgR645zUFaM9GS8Dpl9J6c9Xfa
+/ZWZowUzPDYGBfYocsXR5ecpUEwuWJBcS9t//d/0v8nCfbcUumv9qMnpgXE
OiXg+t3kPaou6JFgSesxcSjjXL/4+jBa4WGQt7g4zCX6Z2h4oJd5dqhnisEu
jhGzci80i3199h4xcEyw+k1O0PovCXwuKAaR/0FW5Sl03dw9HWExqIiXsNQ7
gw5TEom1FYOFrUl/agLQTrJuX56KgeitdY8MA9G5rvReYuKwn+2MdX0Q2nOy
/UazOMTEDv0zvoxWMQgtSZCAGhbL7IartPpqq0dCJGEp+o2tWQS6IzuG/6YU
SGwRp7TcROuPvo0slgaXqDtPLWPRdH8uioXIQPwmRoe2eLRt/dskBVmojzxN
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
9z/9b1W8OdbPtKnlrGfAvaP9vUtWeH2/h5vt1uLvW3Ery2E7rL/LNuOL9yu4
/5H0dwesrwt+2LeSAW8ECy08t2K9SMyK+zwMULW8HPjGDevP3Hv/Fe/3hYjo
JFNPXF9hhd1+Dgb8LttfUbUd6+eP81ovY4DNV88uJR+s/2h9KwR/j25vsFq4
5ofzxfg+xS6aAs8WivjaAKxXrmMzxue/55S06dl9zOfz6HQsnrfnlQL+/w5g
v87LN95PTMH0bON0ayTWdyZGvtpnCjee3BOhRWN9bpvA2m2mwDZ+jTw4jblE
q0mzBf5+eRyLzU7A/bGTfn8ZUzBUUhPafwXrd71/vWqIDld3bDQYysL6lU8/
bHlLh7kUnu2u1zF/3GHRV0+Hqn+fC0ghukGX930+HbReZ+iseoDzlr7Y6gfT
4dKyWI+Yh5jPy/KO4O/bOOVw5Ew17pe71b7PjQ53r9k19tdjXrMc/y2Hv4cH
l7mUtWHO3nOjS5AO8QWjYTLvcP1rQ3ryPHT40dOXldHFvJ5Yh7wlGhTSq76c
/IT1YVuV1vykAVdo/vKpQax/mB23bIAGfsXJygFfsf5vUqvQexo86z/h8HEY
678KJdjh75/02n1HHH9jvf3otYJ6Gpyy9MhoHMV6477vunU0fN81f6I/gXmQ
h0lfEw1MyrUG7kxPMf97VrIb+699leCQmsfcIPdPVzsNljbwy6ctTjH/+4kc
zS4aeG9ZsFnBNk2iJL9ohfbRQLSqM+UvN7rV92PdNxq83K1UU86L5vZnp/ym
QYRQ9LfgVdOk9mmx8+VxGnwMUdYfFZrGf7+U2Qv+w/W0Yz792oz1PZXuWgL4
ff2lm7tYAS3y8uvqdXRgvayqsVcF++N6LQbx93/XRE/MsDb2p34rLJWmg/Q9
dYWvplhfejI6RI8OHbtinfIt0D6560rw/eL06r7jvjboh0ZHvuDvzdfguNeD
TtOE+vat2jY7OqRKfJy57orz9ujtS3fC95U2Tcmd29B9Dza9x+dZqPbp8Kdd
6L1XH7n50MGtXys72w/7s0/FXvWnw/Kkc01eATg/2SHh0z46PCL9o6JBaLna
h9KH6BDwR3tDbzDW//CV3RtKhw058fSrR3Be5N+T5fi+1GI3EOgRhv4g+KMu
jA7HF3VS10dg/+ZPImtxntKdBOiKwuvPGj3SuYMOvV6D39NisH72Px62rXQ4
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
qN2M9q2dufxUHqh/z/BkyaFDeZrlKjdDePTD5eEKzP2NHHB1kIIKgV/crkpo
t30PL8ltgpFrYtxaKuiuJ4WlXEIgp+bAJaCGjjqmUZfIC7vgFOeIOvN5+C4r
qflbk2n3gKNFE81yKXVes964s+87e6E2unajxY+0gZpV+0TYT1OY/V2fCkd/
11gt2C7bpce8nz1iSi6jNafjo9iIAbM/rzFT50eNxke2mXlDplsFv1/tqvmo
dvp3lTHTO35ea28zjj/FNXSEypx3ek1r0rixbufZLg0aetVV5WXsbOSLHO+r
P3Tm+oc+H9vGS5KPXagvZqAL0wyKxAQJebXq4R5z5vVVdV17uYH8Er90Z7Ml
2mJZ04KQBMk4tDZvyArtX3nylLgMMWtMy7hmw+wv1Dc4Lk/GhTcketmhnVn8
WmVVSM7ezJgN9ujG7Iq/ierEpkYs/L0D8/kxbuSraZGZVdf3pzihd90QipzQ
Ifk+Uv85bEXTfM686tYjjg/yPfhc0VazG/K2UMgSt5x9ixv6a/JSgpA2Kd52
ixHngeb1u3tVX5O431EyYHiif618ufy+OuFkLVVj82aedx1enVNq5J6T+mbY
zjzPDsH6dFWyo+CeyPGd6ImdGqPrVQjvrLaAng9aKXZSMkaZPLSu4pzyZZqb
xB9TJn7Z+gvlfujv/506PKdMVo9Vj+33Rze8rGPMqxCgk29KAWiekQFiqEYC
U5/2Du9lnqehj2d01Mn6YXp7wT70jGz45B4N0mjQ2OSzH+3x+LdshyY5dMHi
iXgwOjt9YvCgNhEfeFHed5D5+QxJHqFTSKumbeGVw8zzfcNYi6FHws+8znIN
YT4vq8VHhw2IbLfDJcFQ5nnelre12oB0KHbEtYUx72fNvZpzuuRkpEvkhWPo
w99dltdpE5W2rkPWEejUVGqPlybpkdq2h/sEcz/n1dg91ElsSJ/3syjmeREV
5flPlWg1b3eOjmZ+fsDka6MS6RcZtCQxaK0ToVHtCuR8kC9ZOM28vsaZ4Sh5
ov/0q9bDWHTmf7lKLXLk25o9CiFnmfO+rL52S46k+P3cpBmP/nzN0nm9PDF5
uG/taALz/h6Y2SugQEZWjPKUXEDHhOxedl6RXPU+yBKQhE7/63XkjDKxKJuY
3JzMXP/8WP2MKplcdvTn0CXmPMPmk/vVSa7LbP+1y+jNO8slNmiSLUXHOr3S
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

          "]]}, Annotation[#, "Charting`Private`Tag$1419208#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
OHHRlQxQaRZ8acTclm1N6YIrmS8sXvjyDvNDJ+65Yc6wR8JgbAh9anL8WrIr
EabPjB2bQRt4+EbnuhK1J5u7x/7heAblxaEXrsRqb6LQONMHoPp0081+zJV4
M9H7jW9B561pJrLuIaHl50rHt3+AyKd9tjv195Ar3osr46po4aJEi8A95Psy
615OE6x/ut0rrmwPMU+RrDWwR78qbTu7sofkyBsJHfFGj+fdfWflRqheu52/
GYD2NbLfcdeNeHgFfWqMwH5T1QdMyt1I9d9E/fkraO2GtYo0N8JzPe+OYCZa
8+iNe7Fu5JTci1WLIvR5VcuccDfS/nJg7+ka7Kc6MLH3nBuR3bdYm/0WczfV
qeAoNxK7xCrcPoC5zrRAWqIbGbsmGb78DfMzCfcCs9yIoazRZ4m/aEXxpspq
N5LR5GbgwNgHkX0nmgT73cjS3qDMiC3oTS6GbmtuxOlP4tojiT6cL65BXtqd
lCblefapY34r5onTHneySeZFHd0OzAdNWVKuuBP/xgFhZUfMS2rWipvdySuP
xfC9vpivX2A9xuBBRH+zDsWdwjyc4e8tKw8ScVUSKqLQ3aPcVMkeZFDK6O5o
EnrrBoEfNzyIVoPb+qYsdEXGIscBD5LiHrRP9zH2013cQKfjQX4sJpJDdehV
v9L/uD3I7it5W1Pa0HFy+2wX3clDyRcR9YNooZNi8v3uZMOLgaHpKcp+hbI+
N7gTX7dF4PuHedjfdPkn7qR+gTVrB3M/1lf9Hr3vTgQTJalO8fVDZA+VQFua
OwmVMPLKlMI8O6jr+Q130kPc6ls00S1v6SJS3InKniCRP2ZYf080firVnVz5
mRgp5oy5vnn4hwx38j0hb9jmAOYZGgf5ct2J2fYXhueCML+23zqh1J3cqxvI
yv8P/fgnDSOub91lkaonGe1zVerYe3fi8YPVm/oe+kF/8f4cd1IVL/lC/gn2
OynY1WXkTrjFjba51aMXLcdnxtxIQK1b1MUOrD8YL38a74dW56CR0s+YO0YF
Seu6Een5RKOhGcyDVX3bZvaQUdEX1FosAxBZ+mhlg/ceYlAz4L1fAK08QpS2
7SHpTosvkmTQwR9kgsddydIsq2it9gBQLd8azy1yJY6xkhe+WaD/0u6+ccaV
lGwzGt3sin60e53H0pWwPnczNj6E46tFc6kFXcmrmUSa9Bi05XR/8FsXInop
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
bmZIUmaG06Ra0cZvvz2LNSSN/UfVUrvRGx/uv9ZlSOq6NfP+G0CPlfAeETYi
VW00/CdH0JrXfO/OG5LS122XPSfRTzfVe+8xJIUvbq3vnEPLZIWWPACS+9z3
lPZv9L1PoQ+qDEhWucK4xCr6FS+rzXd9kvb4rws33Sy+j8xHHdDWJykFTS3U
G9Hcv/c+zdEjV+5f1Z/jQDf0vGGX1SOxd9xKBnnRPGe5nN/qkgs3t4u1bEVn
DloFReuS89fmb1RKoKu67/k76ZLQhOeMD+TRx5P/aujrklMxF8OS1dCTJpu+
6eiSoxF2sxG6lPHXt6ZZ65KDZwS9jxmjZXTlDwbpEq/Ar91ulmiNBxnninWJ
27FSMwtbtEe8Icc/XeJ46Hy1ugu6VKnefY8esfG2kBPzRH9nas9p1iNW7lx3
2Q9Q1rNryNhCn5g6feZYO4LWqf1Md0qPGNgURE+dQntuWK89pEu0LIP+9J1B
uw5uORChQ1RMwP9VJLrsqca9Sm0ip8/86ekldPKPxu+btImEZo9N9hX0BrZE
lmgtIqKc1XDlBjr2/d3WzVqEX/aI+rkM9MT83HKDJuHerpF/+D56oIopKF6T
bNpKLeDyED3aPyJyRJMw8bUmmj5Bh7cMLfpqEjqum1QqVWgfoz+LgZpkjcUn
cCtB83cXS6RpkqUN8hMsr9DG95ju9miSn1RLrsut6MHvX6K2a5Hp5Ya3X7vR
5/yFF2K1yMRiokHPAJrKmXv7uhYZnnV90jCCFheZs72kTQYmxcRLJtE0y3FV
Ijrk/ehs6p05yv1xdm/TNR3SPljNlPAb7Z+b/GWLNmnujT4XuopmUV/59FKT
NHbazB2gm8P3/95nTGkapK6F38dhI3pWyqc7WZ1UNY2/N+REDwS3VRSrkdK6
EnMFPrSFLC9Mq5LCqrBnAiLo9vRGeitVYuMq+/XnFbQjU1XTsjyZtni9PzgV
ffZeMf0pWRKv7Tv69w6aivXxurE0kZRZ33f+AVrh5asLhyVJE3/6J6oidO9o
TvPIduK9UdM9ugxdFUVjni9O1v519THUoBvYTgRUi5H06ePOCY3oW2yN3Rxi
ROsT8/tNb9GtDQzuxaKkpy3XLrkLPeExtJwgSk7VGXdsHkAX3qkvzBMl7I8/
77o9gi52SyhbEyVFd8+2CH5DG8ZeOHNFjFgl8VhkzaPLDrsdcBQnk5GlL8WW
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
fXy0+4Xc0E6wl3hmBo8+bhIosPZ0AXdpH1Ne1sObbK4HNbmDW8YHTv3Sw8mn
z6VQPefI39fKHq7Qw2NPQsoq95B+beusuaSHtw96tqn5gfMjrrq5wuenmO1K
TgCpVx7ALq+H2e31pQUPgsOYq9Tg8/XAeTlqwmHST/8Jm1d6+F0Fb+C/I2AN
xuA/M3pYcXQ18WgYuH2HSfEGfXxRevTxwAlwnE+3CEUfDzj/+LrrFPjj4+xC
B31MTaifb4wGT1zo73fTx3mvnoqbnwM3FPoZOutjhqkcVH4BXD9bvcFKH+9V
SPZTSQCnPspi0NDH1R6n4rKTwL/VlBygnxuuBBbypYC/efkG9+jh6FqXzxev
gYMTuV4U6+Ff8+bTS2ngI2GRV47qYRM1TeGQDNLvA3e2qevhWz6Sxn1Z4J9U
VsseXbyUyr7H7Q6YIpD9/jLcx/fz5xrywepZxXLaurjyX/89VAD+7HTo9hcd
LKzV/OFpIfgyk/BCvA4OD8Djio/BolWbpc/q4G8ZRXyZpWC/oEPDcF91Pt/U
4ykH/8ihPnXRwdcY4zxin4NlzosMacH3Jf2w6IUqsHY9QxerDt4ZtDc3qBps
6Mgy3qKNS3Ls6rtrwTYmtw5kaGPub8Yjzm/BY3nnb7tr4+B1ylzvP5D+K5zs
4tbGjVuEtLZ8Ah9nFjlSrYXVjjG6PvkCpqKqjINaOPHe5En5b+Akx+/5XFp4
5OevrJttpN9XJhqKNuMCi8qBs11gBWl//zZNzBpxd91cLzh5S59dgCYOKLqq
fnAQXDkfH9O5Cb/pPrOzc5jcx+chrYMaWE7w8HHHMVJP9MD0gDo+b+Nxs34S
3Lu+tMpUHb7PbX1lNAP2nNlY9VsNm5Xq9DyaBwc8Tcw9q4ZzBmWYNy6DL6Zf
5+FWw2ti3Mo3VsEx0btSUlSxt/3K9vUM8/D5JFl6i0UVS1S2pk6zgR1fOVk1
K+OP+9VopRxgFb7OCVFlfFr43O+jPGC2/xitXJVwZ7i60aQwmEuacfGRAk5W
OO/3WBw8mTy19aM8Rq1tScEbwDwcawrdcjhHN7ZrVAF86ZmixZgsdhj4wVak
Anavv+PwWwbTX9+kdUgDLMesfvaHNC6lXtitogU2YY2mxG/AvjM/Y4d1wdWs
WsnXpTBfvuajAkOww8bZQUYpXOt08fv+LWR+Q4laF0kcxthBp2gGrmKPiU+S
wHJPN6sMUsECyZxnH4jjFt84p7vW4I+Tks+KxfAFvl9R/tvBsbp37DNEsV6N
1r2NDuAW/3NuR0Tw4NH4z71OJJ/913tNYZwm07lwxw1cdGl7YYcg3vpFW3bv
bnBO5WRbmAAu0OwK6/IF0320fXaYF7t362RnB4A1N22QzOHG61IuvfU6SPzI
b82CA79A3ZMSwWBp2/9i37HhgxO6Yh1HwRFPlbo1mLHY7USLW8fBlYkcvRH0
uMGuJ8jjJLh7R6L2uVVa1KpemuhpUu+7OufICk3tURJuiwGbLsX1ryzROrx6
h27Ekv7M6IbQFmiXOQ343OJJPzuNwrXmaJRXl42Fksj8niYVntO08aA+/29X
wCXPjquZTtKyJQyTU6/Nk79P59KPh2n2H5MrnG6QfN2svOheWomqEXtzNtlv
tL3iuTKaT/sV7f9ySX5b3CbbdxTexAFPh3sk/kL4s2kn5dhIyuNPxWR8Yf2i
7l+KbMZg2+UnJH6gR9dhjvLVxoRhxzNyvm+eF91YpsQu/qfK8ZzkO1KyYumQ
zoPfzg1VpB/sygkKDKjffUv0pWqyv1yTwzN06Drbtfs2dWT9upfFW9coVpVD
TWzvwD5+ftd4Vylz+ylLbxvAKcj+y40Vyj3h1I1xn8n5/Ve36r9McXs7vN3q
K/jIZoEbx5cobCdQOPN3Ml6kU+7tIqVS4frtup/ELzgKXBcpga0j7853kvmc
qPIyixTRi6ZT5r3kfH58NpNbpHzQTRNnGCTnc5j/iNciJXLgD/X1MNnvnfu8
HxYpqtfNgmPGyHwfHjIFLlE6qDduoL/kfCpuyeguU5JmRqtXZ0j9lvAtm1Yo
W/LNR14tkP4WNT5y/kdp/qlPt2WFPG/PW9cnrlICedWFqtZIvR89OX1rlNWt
smrGjAvgwEW+jmVKarSw+QsWMB19Hu/teYrKMw53Q3Zw0+pYd/Y0pfoPfXAl
J4l7uU4+maCMuo/eLBcAxwSEOvX3UM5d6XmsKwI2Ndh5SPs7RaS+9U2ZOMlX
vL6lvp7yaKWhXXsDsY9ofVMoxUL79d9SWeL3R+1l6mhtB8pZtRTI+HJGl7qv
tOCcQsknyiQuus2ruYOWwZlm81iTuGTj18RBmiY1cY+GDthnc+4/9RFafWTM
8WJ9sHSomuGlMZrnk+OJasYL5PflKpTvnKRN/T54p5BCXJ5vRvtLi5fyqVAx
J/nCfpwc0zQpF5fGB5bEybKv1GdoZYm2fUo2YJ6kCy5KszSbGrR4fzsxY9Il
kTla54IOt6IDqcf3/cPqHC1sk4r8PSfST7oTZ9rnaTmZAjvzPUh/aq71nFyk
LYQPF+QEgnPkp7OcV2jJxZ20DUFkP7PCzQsrNLn+ry3ZIaTfxrtQ2j+aw04a
XVY4sW1816tV2mDcUyGJSLK+9KBM6zVaFK1A7dZpMn693J3GNRrfbJa52Fmw
e5ntaQU6fF/1mvvNWHC6/miyHx028Y0PFoknXscRmU2Hm9NPx95IBAdeLI2z
pMOBn49lCF0h/S86Y/p6jbbKHFhy/Srpb1VoPvsaLdXEq14gjdhdODhglaYS
6thx7SZZD11C69d/tOoHW6f4ssCai+xyjv9ort0mbFdzyPoHVXK6V2ijQlpS
vPngaoGO7OgV2rkdijop9xfIfw/rOam6QhOJlbDlLiT1xe7+N7hMK37B65P8
iOzPSNv+8TLN/C9LOGcpuOTad6kLy7Q2xZXEpGek36IB4fuXacHef++sf07m
25rV6LJMY7o+WHGpitQTfVlsv0zLaGhvXFdN9se745nzMk2T4UtffC2Zf635
vP8yrd6gfpH1LamvwPw8epnmGfKSO+4D2U9I00zuMm3qbok8yydynvfEztKW
afEdd40vfCH5ImVbPy7TpPhv7WT6RvaXm5g5vUx7apOy/3wbGW+6lKu9QstY
Hju3owOckrG1/Brsv3hbtnD3//f31JnrH+3AngfPe/rI/SpFO3Lh/HlZvxX+
JvvZ/uCE3SrNoNZ/8vgfMn/Tdcy7RttwvGa96QSpf62N788ajUVRWpF9GtxW
zlAZRIfH206bt8yBHVjF5sfo8LdL7V7ZS2CDHKav8HlRZWJ4MnAVHKF46zsH
A84fT0vVYliEfu3Znf6AASfmzDxeYQYbhDqV2zHiY46ODfXrwJU6AV+XGbEH
U8lgCifYVOBBRgkTNivnZNjNC3Yfyrpux4yVAg9JyguCY1qNLyQzYR6x9wYT
ImT8aFfzOCOeb1Bwfi4BXnBaYwxmxJ2nY0POS5P5t/mWsDPi+k29l3bIgeOD
v6XUMuDiHnRPWAlccjrO5wYDTr2W9bpHFZxeVv0zlgFHWS53FG4C85jYv7vE
gP3m3ReOa5P1dT6VLGDAtg/K+U31yfro935vZ8BauwU2sRuDu6un/soxYlHO
Y7YtFLBI7P3Ac4yYDn/el20OptObtZtmxENH1M8GWpH9hK98CmfCn2UTM7Vs
wW0jVvwczLi8ZahiZQeJ9+4KKGXG2RetvtbvBEc8iK8NZMEXDfLHU1zAQxvG
k/hY8eERevbdu8BsDdL9vCzYOXOPvLwXGa/ZSGfGjE3sXplO+JD4ie1bcpnw
Rjpxz+f+i+TPh+a82MyE2UsjTpwPJPkWG33HGPGUX+vVHUGkXw7Lel8Z8Q9B
nUfCR8CBduKOPYy4+u1/73tCwdJdqTOCTLjg5ER/4QmS33dyTwgTvqK6gy78
FPhI3s53f5hw+K+H4qZnwDn50ukJzNj7Cps++3myX6bGo1tZsKVZgGPLRXB1
eP6HjaxYbbr2cPYl0i+XH6qSbFjgrkxCYDL4XZpXsNY6vOx6Jl/rKniyaonq
y4572X7hlevkfhmePFW4Hn94YdRef5PMt3Z3bJkDPwlKn0vJIvfjztmwYQ6c
LjXHu/sOWPPC918snDimyUld/u7/+xmKHDnx/nNPrCcKyHjrsdj3nNhOh9v/
eRHYYc/V2oNcWG8w6Mz5EnIftOn4dbixZPqHjB1lpD9fNOt5eTCTrVK5cCU4
zOPk81s8eHT5wpeel2T9dpwS+rz4a3HfaCEGMzl/V+zjxS/2mLGF15L7xEUV
us2HE2pXKOwN5P5ZDDy3EMBNO67m13wC68T9e68giIXaFNlPNYObznqlCQlh
T99XIdqtYGdlmxQ+YZw76vjtzw8SX6pUExPBQ+FDRvm/wKnz9INqoliDPjrH
s4c8P/3tHbaiOCyRn0VwgPS/9HTxflH8QvDBocYhcr5bBoyviWK6HMqXC6Nk
PP2n/o+i2EqlRY8yCVY7YcwgIIaTyg5kzk2D66JfTO0Xw82UNfrH86R/1Wab
34lhkfep+/cvk/v14oKGjjj2dlJp3LBG5k/W2F0ojkf2u6SnsCwhOv8XW4Ke
S2DNqZF/1uzgVPdb7vaSODwqxo+eC8z0x/TOuCSuYhF6/5wXzNHm8CtNCjP8
V6hxTBCsaStze+sGbC1ulqoiCt4++t2SThon321d7JUAx94ZyPeRxi2bgvbc
kgaXfm2uqpPGYi/o3zjJgasVR/bfl8Y+1BsqHErgqgZ2TR1pfO+TWkqdKpin
dZ9dygY86l4zG7UJnG8iP/9GCmv1ue3W1QaXzTW9YJPCEYfHqsf0yHxBFHZ3
SUybP6dwzwisE1O566kE3sbx6K+QOfijXkJDoji+mmbh9tkS7Hxv4DerOG6T
/lEVZwMu+bGeKVkMSxUGy5ruAPvsTn8iKYb9dZniFxzAgaka58pF8UN8c6zE
GTzEucriLoonbTY5HXAHGzwT76aHnzda6iplPMFNZamlT0VwlLeH1M894PRj
VzceFsE1QxPnr/qRfkUZjKmLYLbQC8O2+8F1tWZjT4Wx3T8xe8ZDpP8XDIdC
hXBqXEnZy2DwkQ6DMCSIf/JaiYUdI/PdPMcpJIClM9vPqIWTetyPleb5cFEJ
y7as00vk9ws4b/jOg6eMMktczpLxTmqbH3JjgzebhbgugK3nGV9WcOK6H549
0Ukkn9p0iIkds/tPWemnkP3vy5A1Z8MO43FFE9fAEddNo5NZcAfD0xM+t8j5
LFyMdGDEspetf4ncJvv91jJTR48DhTvNv+SC2XpYi+H7yaM7oQUJ95bI78t9
viv/H21GdR2X+UNSfz5u39clmlF5duhSMZnfwv6j9xItxlTnR+kTEg9sRrJL
tPoP7ymHnpH6q6eEWxZpnC578jc+J/dvTF3i+CLNICB17lYVcQwzJ9cizf/E
e2uBarK+zJNpNxdoV+JXM5JqyX0rK7QSWaC9uKk9xvQWTLe05fGledrgw0B0
+gPYAQ/Z/J2j8VZl/TfbSMYz/r62fY4W2MmqN9hC1mcsItM3Q0udMIn3bgOb
XljZsmGGhumO/WxtJ/0139G6c5o2wntfzb6L3Kfrl3aemqIJbeyIfttL5g8R
XZf5l2auw/sFDYK7GQ65lE3SDltabawcJvXUeiQTJmjprqeOa46R+byVe2+O
0er2l7wtmCT9Y35zNnWSNhkxICozQ9af8OLy+AxN/JJY0M15Mr+lCf/qAs3q
lj2Nd5mMl3U2qF+hHSuK5bm0Ci44cXJejg5nvXruy8CwDOuTeMpdT4/ffRov
i2QGG3R2l21lxBv+uu86xAHOKfN5+ZcZ2zIkF/Zxg+M/696XYMXh/LX/dvOD
pU8Uiauz4TtyC/YtQuACSfYNcuvwR1313O1iYJ4cvmcM7HjBynemThKs9OB0
z3t2vNH9htUWGbBDaM/DyPXY7sDH9Gdy4CHDB/RCHDgykv6PuhK4KXXoVSYH
vpeot+WeKokfdang5sRfMg9dkdq0TD4/zYpCOPFKcU5PmhaYrfxi5CtOrIS/
aXPrgd0rc2hzXNipif1inCF4tPTctCwPju5BbWsm4O2Suw694MEPp8JUIkzB
+ff/hZrz4m+MD6MmLUi+19HCl7yYTrDrU+BWEtfPLlbgw2oKAjI9tuBMKT+h
WD7spm8TussOrCNUF9XCh89ZR7/5shPsTF/sL8KPH+16KmzrAo49VbvDgR//
ODh0oMYdzMSfUxHFj5miJKuMPMGeXXKy2fxY87Ij19M9YAm9Wfpn/NgzO85H
1Q+cFGFR85ofxz2uKs0LIPVqJD/V8ePS6r9MEgfBK8sPU2j8uPOLglvqYbAc
773gx/x4Xd/uBxxHwWE9zDU3+LHOTMpybBhYwGC57wQ/9mGu3/HvBDmPu0ah
Vvw4UWj59vFT5H6sfgz8yYfLFTWnxqLJfB5hsof5cK/BPmrAOXI+rUKFq7zY
YPfnIdcEcv6qHLulePHg7bzNBjfAk/XFM7lc2E/NLGE5A5xu5D+Tx4m7Kzu7
adngI0p6s7kc+OcX0RTLe2Cfk1yet9ixm3fFb7aH5L6sZ59IXYdbRpzRx2Jy
nqeGfyTB++jEVNqVJyT/uIbGeVbcyJgy7viM5HtG/jvBgm1T1K2EnoNNTb65
HmLG9RINWT+qyH5aX1+dZ8QWDwJnM6vJ/ent3HuXHlfrsuzwqSMWHuboXqVt
qcnL3/iO3O+Qmi1FS7QXdmYrgw3g7iLK16I5Wtn+qMLDX8F0t6XMY8dpm2dE
GTd/J97Y0Jf/m/YopsJj5ie4us+gRaKHVnBzat2pXlJfhPEDRx1NXiFlL2WQ
5Kemer64SsktVX9OP0Lir5Zv33xLudUQGBj/l4wfXroR1kURcWep3jZL1pN0
9j+Lfkpqf54w9yJZT+nk+JUhCu9Rs5DmFeKm0ZTcUUryv87663QrcJ6UGKPA
Scr6S1FSu5jAKUeYnmlPU+KFxMIl2MAljS7FH2Yp5za5yOdxr5Df57WvwH+J
svZyKiqAH0wnGcUZtEKJsk5pURYG+9jN/ti6SllsUVcbEwN3t56bW1yjhO9t
OF8iRcbP0hRr6ND0WGB7qCyY55GwQxg9OhLJoq2vAJaefOUhwIBGWfIvLSmT
9dCPiOYxoAPXzHpfqZP1jp3YKsOIBjd0GZ7dTOY7pp15hRH5FkX9R9UFs5V2
N40zoi4DsWFWQ7C70ZlbiAl5vqkwbTABWzffuHWOCf3Y6ZKebAoueCMXXMmE
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
LjUfGyX3TYjRbAPkn3tt6zIOznLMNuVxRRL8CzX6k5Bvd0jSjdUVHcvTMBab
IueX1EphckXvtPc9XZmGfJk3rU9ZXJFk3S3VrlmI+8dKnuCCfOfmvNfzYFw8
ZSMO+f1sEvmLYMbppGk1VyR1HKVeXIbxuVdPGFu4ojDmcI4D/yA+QH9s1MsV
fbheFLttDeLPAjO/RbmiDQp9K+r0TKb/68jOw6ncugCAm7lCSBGSpMyizM45
6xxjgySXw9FNQilESSWOLlJpliGRKSTcRELJ8FaiSGigyRxlqAgNxr61vz9/
z97v+66991prew6e/NV/cvE8g8uXHpLkF2BGlPUUy2P+NNo4fB0XQJtlXnJR
Z4Pym5O72oRwvsoId0qaDYd8qjvviuD4NqeeDEGc/2vCOUUUrd7B/+2PMyjH
aDZzxdBhoQ5nedlwWG6nzQ4JfP6c7ctVomx4lpdUw5JEx3Fv7l2K7zdtNlKV
RofHHxdbg/MbBIqEZPD5rPypuo1saOKYqw0tRvPoBdljvCuGD2Q8kyV+fcQ7
HueH5sneWorPG94bqKNwvmj3xVgF9GPLOOPvbFC5uljk4DL09NTxY2ouEKJl
F+G8HF1enebp6QLNlVG/jVegD3rYFV9zgZV2FfvlV+L7b5S4J6a7wJcM6O5Q
xfH4P92Xd7lA6UTd5ozV6IRh/VBDF+Da2lXtVEfHmof0iLuA1dWXmqqa6Eef
6QHf2CA26pr8SYvEZ1n3rJ0NbRbdwvk66L0i57Pr2ZB+eddhvzXoMDWxG9Vs
2D080q+jj+7tLI6pZIMuI+jvsbXoVuODs7i+n5d+PywxQPOdCaxpZEPNwDG9
Q0ZouS7vMx/YcMpUMMPYBC1hfVVpnA0O58+KT5uiZ7wb6RJYT71S3CpztGp7
QsEaF+gxuDJ8jI6ubFDSYbtAXowShwVoy6r8C5FYPx05T/hZaN2w8uTbLmCi
p2VUb4F+w8td9skFeKJv58RYoZ3UzRRlXKHhjfGiTTbowxPTz0VdIU6rJlJ8
PZpV7LRC2BXc/rUaa9mAbmnJfyfiCiqvGt3jNqHbdEeqFrrC8Oqtz502k3hz
jsQruEJJ6Btz2S1otblaNW1XCG3eXvDOAR2SHGDNcgULlX65VEf0ekN6jZsr
LDjse8rdCZ13Rdk7xBVeN4z9UGajT4XNCqe4QuqyI94fXUj+SZSEU67gfWDu
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
IaRA
          "]]}, Annotation[#, "Charting`Private`Tag$1419208#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
o5sv9eMh8A7P25bdNDz8/lv/vlBw0Pu4PT9ouNozMubbyVHy/ejvTjEffPUj
o8zxsyQ+pb/b2wcH7knr/pcAHte/q5vvg01HhCLjU8CpzIy0BR8s6PdAlCMD
HPcgyH6XL14Z02rPyAXzvb6e+8AXd+9/ESZSBF5+1jHG7YfvTTnsuPeQ9O90
qcNHXxwbMPRcpRJcmXs7wtMXe88eOlJTBz6OVgK/+mCNIyvbTF6AT0wM7kr1
wezzsfj1a3CMjZmWhQ+eDubwd+kF//m0+SCHD25azGYfGgSL3vrIMU3DWcdk
nh4YA+s6Z0fA/sOXK3zmZ8BPpb6Nv6Rh2xNGzCcWwVnssSWdNCz1u7OM7je4
qveA3Gcabr94U5WZ/jM8j+wPlel8cBDvgYotG8GJTOOSMj6Y666yJh87uDHv
wNXdPrhKa+2p6HYw90Ah000f7PXypY6cAHht+xn+UR9Mcb9WqyoO/niszU/Z
FxdM0dBOOfAQbSrqki82j5BrMFEBP07YeWfaF88yrhjaaIPXiZuqh/ji5OtN
zS4G4Dsd2y1YfLGqZJLpHnPwKbEvIk98cH+FR+sBW/DEDD/jUR8cZSphGeQC
vpk6ZK3pg4X6vr+K2A0utfG0Z/fBzftqrWP2gtVsn4X8pGH/H/GdCYfALhoG
vNA/1vNO9qkhJF9sUgW4lEvobeYJsLbn4rNleP4KZpzyo8EdLT23Id+KSmXf
vTiwgc66JVUfnNV01q08EVzImCi71wfrO9oM1FwDtxVGvMv2wWOjPF7Ps8Cq
Nu8vjPjg+JDxj6/zwRrB0R0KvliO/tGevrtgplhx0/O+uCslauTTI3Dz0/WX
x3xxmLC532QV+NnKcX0rP8z9iHN8DoOz8+t9VPxwjf7Q/pUXZH92xl/afTGt
6+4UpQO8y3nzp2O+mIEWHrCxF8yrMpMh74vvzBnMcgyS+o21zyz6YMszbEd4
P4P3VzEvvvDB3za9nxOZBi+ole+744NTcwqCZb+DJ98MWKb5YHWFoEWVFfDD
zQ/5r/jggVqdY7r/wBupwp4pPvi0NeOy8YYxRDn4IvRirg8W+dgdYc0GvtGn
qV7tg18E5qw6c4HLRyRmP/rggD8Ho7z5wA+vVRnAeW+6rLa2XwTM89vgtYEv
LuOjiz4qDf4RXiUX44td7rXTRVDB2wpH1r30xavaN85Fa4Dzsv0X4f7ltPmt
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
DHfIeHFtIVZ53KP7SDWkhDjVPeWPDGaQ3tkx9ISsP2R0xF8Kq259ecC6lqz3
8U2PszjeS+dM96yZnMdMuXebME77Opwp1U7G0/x90/lw0/tA1fS3JJ/p+b7q
LbjurcadcwNk/XnPf0HrcNVret7gERIvdLR8vR6Xtby+7D1F5vfHGlG24vsN
N/7tmiPxE8bBD3fgwmd+IVo/iQ++SYyBny9PFMYl/pL1d5b3xorjzIe/XLkY
vkF9xxSjpiRxWnFzGx0LOHookfOxNE7MT9o5x/GNvF9Ujk1Df7M9Sge5wZQ/
R6XTZfHZ6+KibYL/t2h+tSw+lTJ/rVLiG/l9gNqr3bI44tIzptvyJN/PWs7z
Mjjk/IXIVFXiCLFratI48Iz9tzM6ZH42g1qYJN5/gt/nsCG43qanwUQc00In
33pYkPW7p+6ViGCPw2Wm5nZk/AR70n5B7HTg1FM1V7D+/jdZD7mxrY+5nKg3
cbuurT4HtvTk/I99H1nvR9R1PXps7PyJY+0Q8ckLQ/LsWM+2OHYmhIyfuq3x
gAdrWoQt958gcXrT1EkhrGyEAl5Ek/5stK6xE8NyO5k/Po4jLo5i55XEEhq9
tnmJZHwnpdxCGgsp5TYmXiP1qz3/My6DeWUPqUVlEb8zZPohi7nE1YsO5pP+
bMwri5LDmwTp+FzvkvU7vW+clcMbedqvGD8CC/lvFWSVwwyc1ynKVSR/9TlX
AVm8xuobKojJ+rX9ZnXSeGWD/ATrCzI+6WHxvCReoKy4rbaTfl3Wn3sqjmdX
G19NviX5S+XOCYjiiaUrer0DZL7tdLyIEB7+5vaocYTkZxOmS+PBA1OiYqVT
pL9c9ieVtuCe0W/p2XMkviHs6gIj7hh8uvHST7Kf0I23Qrbi1r7YqIi/JF5z
3Qq+nzR12c7tY5iD9RuZDlBFcF0br68jC3i4rPj7ihiuah7v0d8CFtol5Ccl
icvqSs0UeMAUJ9rW51L4flVkNZ8QOFqpRKRXGheWmcpvlCTxl1uNvGVw7n2O
3J/y4Ny2eZH9MjizcHDLmCpYX8FfbkEaX8u9c/6NDolbh3owSuPkzJCVOsP/
r++UfVcSX0zbeei+BRlfuvxsWBzHJjJ9yrAjFimVKhHFp+Pf2sW5kvWsRi22
C+OIszlNYd6kntNMV/X5cUjUQXXffcR5kUKZW3FguGqxbSCxZt/oeVa8P+gf
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
KZx/N98zT3SpIYXvnc6cQQ5KXXuwqkf9H163UFc=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1419208#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        RowBox[{"0.4000000000000057`", "\[InvisibleApplication]", 
          RowBox[{"(", "s", ")"}]}], TraditionalForm], 
       FormBox[
        RowBox[{"ep", "(", "m", ")"}], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ep(x)\"", "\"ep(y)\"", "\"ep(z)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.802156120921979*^9, 3.8021570789557076`*^9, 
  3.802157899695212*^9, 3.802158597399108*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ErrORsoll", "[", "time_", "]"}], " ", "=", " ", 
   RowBox[{"eOl", "[", 
    RowBox[{"time", ",", " ", 
     RowBox[{"qsoll", "[", "time", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.681795255964004*^9, 3.6817952578340063`*^9}, {
   3.725276057452697*^9, 3.7252760707155933`*^9}, 3.7585175958861685`*^9, {
   3.7585176308214164`*^9, 3.7585176308214164`*^9}, {3.7999330353514447`*^9, 
   3.7999330764925995`*^9}, {3.7999332536436195`*^9, 3.799933259159611*^9}, {
   3.800075521250341*^9, 3.800075522770512*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ErrORsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"ErrORsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"ErrORsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"time", ",", " ", 
     RowBox[{"t0", "+", "0.01"}], ",", " ", 
     RowBox[{"tend", "-", "0.2"}]}], "}"}], ",", " ", 
   RowBox[{"PlotStyle", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", " ", "Blue", ",", " ", "Green"}], "}"}]}], ",", 
   " ", 
   RowBox[{"ImageSize", " ", "->", " ", "Large"}], ",", " ", 
   RowBox[{"PlotRange", " ", "->", " ", "All"}], ",", " ", 
   RowBox[{"AxesLabel", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "[", "s", "]"}], ",", " ", 
      RowBox[{"eo", "[", "rad", "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<eo(x)\>\"", ",", " ", "\"\<eo(y)\>\"", ",", " ", "\"\<eo(z)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6817953070590754`*^9, 3.6817953132000847`*^9}, {
   3.68235566735032*^9, 3.6823556984255743`*^9}, {3.682356159377184*^9, 
   3.6823561666779966`*^9}, 3.7252717337834864`*^9, {3.725276081792498*^9, 
   3.7252760864665327`*^9}, 3.758517595887179*^9, {3.7585176308234196`*^9, 
   3.7585176308244314`*^9}, {3.7999330877326765`*^9, 
   3.7999331045464735`*^9}, {3.7999332617263618`*^9, 
   3.7999332677562733`*^9}, {3.7999341133357334`*^9, 3.799934120648039*^9}, 
   3.80044308535124*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
rTOVPCTmp9z7HNdykITMzfknuAm34lCC471y+L0UVFVJ4STBN0KTWGPKMeC2
jsVzdgfZUKqelpFbjtvviWlyESe5yvIzy6ajHL2yfCXizlxk7vRbwrRQjvGP
qSdVOrmI8yu9om9sFYhbkqoz5+MmPX005eaSFahfVVQa389NDMUSq9cfrwDH
3d5JbQ5uUuVu1fDFvgKF93IwUclF1FI2txrfqMB8lg/b7tNcJGMpp5MmogLF
Tr6CLgmcZJ+qe9+H9AocEePdt7ltB4m9t3NIv7ECvrvfz19u4SDcNZVjy9MV
sBK9v5/9/XYSvO3KdCxTJSZ+L6TLndxGGMwkfp4UrUT4utN16iXs5Pqb9t8L
qpW4XZU2+3IrG5kfCfj72qISdJ6sO/e4biaUfQq0xy+tvRejHhQ/w0T6fEbW
z4VWYvkKXXbwj/XE6PtzpvDESlxdJ8l2QZaWVNFqsB6tqkQ7SyPJK2Ukalq/
tk6NVCLh3bPhUze2k4zAWM7n66ogYOr2072Ol+xrPs0L/iq8D/9+5su4EInl
WSc0qlgFncveGd2louTJe5s9it5V+LldNyFu6z6ycWaL9ODjKhT/XJ/gmS9N
rsvlyT76UIVbkxI6G5wOEEoBn0pPXxUuhMUrkKtypG9jjdq9v1VQvsPzTXJK
nhjpXNOU5qzGxS3yZVLaCkStq1P3lk41pqT+ct1tUSQZQg8N97hWg+L7974w
nTLZ56Jo2nS3GjpVYV2jOw+T2K9jltfeVqPu72JdnqgK4VkIsxPNrcbPuTcu
6gIgIcpazrXt1UiklH9LoD9CNt7+7XbxVzWC3jyjnbugSq6Xx50VZKtBqlt7
hfx6dTLPauRbsbcGrps35IdeP0ooRuuvnNOqQc5dkVoZ6jHSF5Hit9O+BjJ5
otvV5TWJ0aCdf7FfDTxkOd/M+GiR6t1b73uE12BDlUCxVfRxctSr4PGO9Br8
i01kyck4QbLSzobkNdRA/V5hqHTufyROvS6cnakWPb/yDv4NPkl2PvCL/i5S
i8sOdvOxlqdISN2+d/aqtaCcFLpEz61DNu7o+cBiUQudFvlPaoU6xM/i8Ze0
i7XIeLZySl1SlyzEKH+zCq1Fc7Wg5rKnLnEbn0jfmFiL337jxl0fdMmAdHh2
UmUtpnK3hf/p0CUmF07km47UgjHApkZ3nR6RrIpa/ExXh8fpv+rHtPTIF/Ow
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
N/werPHE/JJ2Dz8/Wk/to3+1Pnvg/wGLiXoW
          "]]}, Annotation[#, "Charting`Private`Tag$1419305#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$1419305#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1419305#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        RowBox[{"0.9428858589772062`", "\[InvisibleApplication]", 
          RowBox[{"(", "s", ")"}]}], TraditionalForm], 
       FormBox[
        RowBox[{"eo", "(", "rad", ")"}], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"eo(x)\"", "\"eo(y)\"", "\"eo(z)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8021561597498765`*^9, 3.8021571007374606`*^9, 
  3.8021579210983706`*^9, 3.802158624256359*^9}]
}, Open  ]],

Cell["primo picco errore", "Text",
 CellChangeTimes->{{3.800257813408863*^9, 3.800257827625352*^9}}],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
ShF1katPtDHVbsMpeYp6GauvaGmEHos8h9GxA13ihr4V4d/6ChFpD4ghwenT
ru+6jEmZd92Uy80fO+1yN1TBcEIp4t2Ddjf3oJSZ7rGrj6aarLs2jKgLv2Hu
xE67Wr0lC07fd4+59sa+4pgP9alHYF22zWEmsK/QJ+4xt3enKOqTLES7k8/E
i0H+juzYY0nmMO4k1WVDkNC3Jcr7zomcrChMGU7/uKBuTY0uw3r/VBR43j/k
SobPn8AbtkxWAJvvOTvVGcCb/DRsTWRdDGcoXcpR960zy1cNPTaMoQu/Yc4k
SLu0liw4fb895jz87CiOSYs8H4DSY4ypR4g4JmBHoc+hx9yzLi8rGeo+Skss
7p/sHdmpx5LNYZxJqsuaAKFPQZxlphJ9Ha8kjCnObXipS/3bc9o13R7TI1qM
Xp92Lb+5sNly+N7N+EF397d8fbuGt4atiayLQQnhnFK9+mszXOlTllLO1cUN
Y+rCbpgzOaVdktP32WN6g6GylzjmUOSpPKXH+qkHpZpAcUzAXkKfU4+RddGW
thd3vSOWw/eh8nNkeY+lnMM4k1SXFd5Dn6ka789FbUDa5YwlydHfqOp+IWZR
we529TeIT9/qZ29a3VZWe1M9PYBrXctlU4x6s3h4ldLDlMBv1iVt2OKpas3s
NLYu2ojBnx+ag4/+eOqLU6KGSXThNmzZPqOU7Po0u4tcbIXJ+AWnL+wx5d7m
3fPzl6fmRU27yOM7UYhwcUzALkKf45DkdCGec7XfamOG119Iq8DtXf2nMwrU
YxHnMOXpsjqC39BnrsfT1WYtyLrcsWU5mm93Dfe6iJlUuLRruFjxdPu4v3H8
bb64ofKm9bKYjLkE6Z4+91HoZjiqMr5pjiUo4vSM9iMuaovH10UZpoawwHof
3/ZIoibS6F9/ZTZMrAu7YVPj+IY/lSSXoUopsuRFFbzTF/XYU4Ptz7Bm6S+b
9kVLu0g9tqjFuqhx0DgmIPvQ5+ftHNlki6u+fc/7Xtp1dojXQvat/uaUAvRY
jDnMZoeydJnKew1946pQrImioIiLlICAPc+5ffULGs5f6hrWj+fkUSHTrt/a
y/Dg7uw7b4uHdZNEueFRaN0lIs2lgvFLdP0XhKaSzfxHpSuyi4gaNvKIi/p9
UugyzqLn/Wrzqw1NXS/Pf1w6nLAkalOvg9dQ0p4RUBrmogu/YSQpDUW9p10i
438U5Z4+r4jUYHL1l1UDg6RdYhd7VGKxy9BxTEDmoc8pwoxHp2VdjuqzHibp
fHjec4gX5Gshu1d/dU7eeyzWHGZxDgXoEj709Q2aOnT7CS5tJ/OLOIzIgAAt
17l9fbzTP5c8FXp+1cvzu10Phzq/vEyu8VK9vjXLX13vHS/9TsXWF237G965
atafER++I272dEYRecMewccUeCLr8mjbogMqzUWa6eDX1VfaeV8WHj9cMZW2
lqU2zEEXQcNIUpLbZnmihyGlwPinkkxdOEWEBpOjvwiklKjv5GKk9SRDxzEB
mYc+5whDXueTr744wjSrT54/Vuo2n0QB6kfosahzmFJ0iRD65n0FnRx0bglY
OKdBsWkV3mTZQq4LegzmuGgMC9BlB9CkBE7AX/IkmPFDyh0A9fMEuoCDkTqL
YtPCm6Jj/uDRDHTJH6KUwAX4S56EM35ImT9QP0+gCzgaqbMoNi28KTpDXLSG
ReiSP0QpgQvwlzwJZ/yQMn+gfp5AF3A0UmdRbFp4U3TGb3fYdoMu+UOUErgA
f8mTcMYPKfMH6ucJdAFHI3UWxaaFN+UKdAGADvylGCDlkYH6eQJdQJ6kzqLY
tPCmXIEuANCBvxQDpDwyUD9PoAvIk9RZFJsW3pQr0AUAOvCXYoCURwbq5wl0
AXmSOotiMzT77iD0LW0PHwroAgAd+EsxQMojA/XzBLqADEmdRbFJ3WEAAAAA
AAAAwCN1FsVmaDYuYuQJdAGADvylGCDlkYH6xQApQWhSZ1FsWjyymyvQBQA6
8JdigJRHBuoXA6QEEUidRbFp4Rq5Al0AoAN/KQZIeWSgfjFAShCB1FkUmxau
kSvQBQA68JdigJRHBuoXA6QEEUidRbFp4Rq5Al0AoAN/KQZIeWSgfjFAShAB
RsJzu319fry/f594//i6Pe309fFdx8dXqLTr8nZ+eTmNvFTf3powrtE09fVc
nU7VtQlQpD6fdJxrel3VXKo618+VOteiJ5EuTb046Up50k8lek04RdrQ6j92
X57L1dYy2alIEJy+qAbK6TfXxzkrMTRS0MnawmoXo7KfOMZ3MX4tAkteF7mL
cW1C2aaF3YS+lqqLwMVcvJJ+Lm61BCFzR3aKlhIXE5nltrHxZexIIyU59kWX
ci4sGPgSS5kzxGTn6+O9T7Q+v263R371/qlMu94/n9Mxb7Rb17i8VqeX89tl
+ufleveSl9fGo2t0NldVJNt2KNIlRGIDrXuP6qeQzfJwfmsxE12XdnDtRQho
elc3D+99MKjmufYYUPRhJJb6XcOrh35TmKz02XA9/j4VaUYr8Jp6Cc5FAO/0
jSr3JqH+TdLJ68IUF6OyhzjW8l1MUovAksdmPPboqs1jtpZn6OPpInAxqVfy
zsWhllBk7sjiHhO5GH9EXjKE1Gu4SYqFBI7MmZDElXJEOPClljJnCInO7fNd
c2tLQey06+4Xp/Pb5s5v5x3V68WPazTn4QLEtbO6hpS2CIq0DgnR4FLEa0qR
0q7wunR0J/40YTYOvb00ijn2vZCyTCT1tTvVmvZqI/AQxM+eBJZZMhv26Xd/
12RKevkFnbw8qNutLQXZx7EOpotJapFYsubAfRlfxs8g+9DH10XgYiKvbLnn
Iq0lHLk7sqzHRC7GH5G3VXbFA05SLER3ZOaEJKKUj10kA196KXPGmub0ORc9
j4qbdtXfNhcf5ssU3Q/Xi+d7+h0CMwqbdjEv8UZJu+Looj2VRnuOhrO//2S/
5RFOfS3Kgcx02EZTwgMJYij3ZIbBx28tge6i7CCOCVyMXYvEkrU/BDR+EzsI
fbTyFAQuZiriei5ODfPCDhxZg6HHJC7mJuXj8ksOaVdiRyZOSB54lnIu6HAn
IK2UOeM7i4qadr11kr4++cXjp0sWUS5k2sUuFCPtiqOL4U637iSHSzAOz6dk
k3ZZHygIMvXcQdolu95tqiXYSecfxwQuxt5LYsmG25Nphvn8Q59kLw0CFzMU
cT4Xp4Z5IX9H1mG+QcJ1MScpl/e8M0i74jmy04TkgV8prT+ayEPKnDGmOP3j
hbyVMKKmXd2Tt9NlB8W94OliReooFy7tEkywY6RdcXSxP8n89KMtyln7Mnra
xXsy3keNaY6sgXv6sqeMTLUEvH2SfxwTuJigFkFxwQX3oOQf+tY49JLAxWxP
GLqdi0PDPJG/I6vhP/lprtFFylVukEHaFUdK5wnJcmefUroMfJlImTOmDEeQ
dQ1p18fXZs1D6pthBNqHa7wt7/Zut8U94tRRjpN2nevNijGm52olnsGvhUxc
XUQXasz39F0eiPJZZKAZ1xVgCixJ1KjEjKGS0+fPvGy1hHxoLfs45n4t1PkJ
KJO3qmQxvPsQkh2EPv5OSnxnXd6ut6fLuvJ3ZDWWHmO7mIOUG1dPn3bFktJ1
QjLiW0qHgS8bKXPGmkINd666NGqxcvynNovqF5B/f/98LHl4T9++xkU5kHbZ
duuWWVusszatN6Mx/8WB1yuQGtbE5tdCZg9zD/UbrP3cu6rsgSZ82rVaIrZb
5JVTFy9W8wkfQ91OnzrzotcicTEq2cexpGmXzZL7VarXV4u619DDfUHBxB5C
H3snJX6fMPSYdqXLuvJ3ZDXWHmO6mFzK7fWV46RdrhOSEd9Syge+fKTMGULa
dRtSqTnV6j/fxX6SsDuIj8Sr3V+Uc7U82+WlZpyhzCuQ9n7CrdH9OvE+5h7T
eq1j1tk08wrihOs78dRvxo+fcFKPsDlXGzOGSk5feK/LWItXF9uQfRxLN72n
WHIzenI1/ndchpldl6kJNqZwsY/Qx9xJge97Xd7SLt/3ujJWX9HSUFLyXEwq
5fO7R17HmdyldJqQzEfwK6V04AssZTEYEpxx4fgP5ZOG3Y9J3vpq9xflnC1P
c4Bxcc+zds2FyG997WbuMUa2x/WbIeJllXaNLSVnUvQ9HYgdQ1knJZ55GWrx
7GJrso9jaab3NNFVR26eR305Gc/WkqVd/rMuT2mX9ycMM1Zf0dIwUnJdzN/z
J4dKu1qXCUlf2r+UsoEvuJTFYEhw+rTruy5XYuddkjfFFLT7i3LOlqd5znZ6
VEp9bPak0Pk1lr3NPQRlEt3rtMkSJedqk8RQ+kza5XatrhbPLrYm+ziWYHpP
tGTtcX0mXgz2FvqEjixwMVsRP2Hc/VENF7J3ZE0xY4/xXUwipfr9zQM9ZGiA
2gsBpJQMfLlJmTOmDKd/uFCXKXVZ1PsnI1/yn3apv2c3bDktHBQq7Rqv4xi/
nuehFjKRdTE0V7r+X34rGbZ2XeaHFORVUEkRQ6lm6TbziuNia/KPY84uxjMY
siXrvjHKrtEXewt9sl4KkHX5CeNps64dOLKylPkD8QIX40upGXTTp11JpFxD
vYIUREr+wJedlDljzpSGl7q0WRQr7eqTOL9p1/IDCpstp89keHnIUH9XVzPx
Y88JnS8UR9bF8rS4KOuyFcku7RpmqrHWEcg47eoHH3nLtLV4dbE1+ccxZxdj
GAzHkk2HDbj0pJ69hT6RIwtcjFDEQxh39H1n8ndkVSFzj0lcjC3lamkj48N/
sUgq5QrahCSUlOyBLz8pc4aQK6kfMuQukTFkXe7LyLfbL4mfvtXPrrG6R6x2
jXp6mpa3gl+yx8zU5c2XKzhnZnPzxSPSGmeMrYvsaQfeoZyP7Ky+Ie2ox3dv
JZc6zVIaCjLORehiKzhZlzyum2oRulh+/kI8q6eTcHAx+sSZZ8mGtxlsLzqI
jd/E3kKf9CFs7/e6Wg9hnNOwItR/OqMQUkpczNeITL4mVJaUqyMQE5VQUrae
5pa426XCluVoHg0c7nXdnnfVfKFrXAzRw8e72qVrDFcenu4F93eBv81XKlSu
sV5CmmEWQSbe4wuMylmH5WUHw3tfT+9QymtZBjntXvF1Ubr/0CN0hYYvN9E0
DaP+sAtPF4fXuQhSGkqSy1ClFJ2+Yj/zOOBQC8PFNsfMzV827RPPackuRqlF
ZMn3MsoS1tft5MZvYm+hTxjHQmRduv1Y58LPuvat/uaUgkgpcjEvIzLpnAqU
cirPnJAEklI48CkaiLRriz3PuX2ts6lh/Xh1DnUbPu/V7b35apevz3Zt067f
2svwFO7sCG+LJ2/ziXLWIuNaNl1WNO85fE/LdsmkqdfZ1LDGp87PhLU8gpx+
txS6jJFh3q82vw7Q1PVy4j0uh0pfpDyQ+uM3e/tvYswyzn9UdPigmO7mgPkG
EUVKQ1HvaZfg9FXtsu7nUAvHxR4tytFfVg2k7c90MWYtYkvuv2yzimPDx27M
DXMwfhM7CH0rZM8DBMq6WqdzkWVdu1d/dU6BpBS5mItZLlt4DEd2nJCElVIy
8KlaiLRrCy3XuX19vNM+l/zHmJc99v7+vsrCXGm3rtF7x/nlZbLzl+r1rVn+
6noj2PbQqsKoBEV6eqte+uzKUwyM3x+aipk/aSeoZY4kJg+KrMujbYuzqTQ3
NKaDX5fdVBE+ehtP/Yahi/VBan0wJknpei4DLCk5p684JaqxRHKxDP3FQUqG
i3FrcbDkaRKw0MSmJM/46eQf+pwcWbRoJ7MIJ4wLaylE/ZhS8l2sFUupej/I
/E7z7qUUTEiWhJeyZQ58y5YRpTwivrKhaLQK17BsIRf5PAazExldB7rsAJqU
wAn4S54EM35IuQOgfjFASrBnUmdRbFq4RnTMH3GYgS75Q5QSuAB/yZNwxg8p
8wfqFwOkBLsmdRbFpoVrRGcIctYYB13yhyglcAH+kifhjB9S5g/ULwZICXZN
6iyKTQvXiM74RR3bbtAlf4hSAhfgL3kSzvghZf5A/WKAlGDXpM6i2LRwjVyB
LgDQgb8UA6Q8MlC/GCAliEDqLIpNC9fIFegCAB34SzFAyiMD9YsBUoIIpM6i
2LRwjVyBLgDQgb8UA6Q8MlC/GCAliEDqLIrN0Oy7tdO3tD18KKALAHTgL8UA
KY8M1C8GSAlCkzqLYpO6wwAAAAAAAACAR+osis3QbFyRyBPoAgAd+MuRgfrF
ACmLAVKC0KTOoti0eP42V6ALAHTgL0cG6hcDpCwGSAkikDqLYtPCNXIFugBA
B/5yZKB+MUDKYoCUIAKpsyg2LVwjV6ALAHTgL0cG6hcDpCwGSAkikDqLYtPC
NXIFugBAB/5yZKB+MUDKYoCUIAKMhOd2+/r8eH//PvH+8XXzX8RGq3CNy9v5
5eU08lJ9e2vCuEbT1NdzdTpV14ZYoD5X1dSwqjrXtnJjBXOR87WxFunLLGu5
WqtZlL6OJcnnpCeRLjE6eVF43d0nfX3rakgNk0nJNksR4Wuhn/5stTpMjeTr
oqoZ/kKtjthjTrLQa3GKlj7Zi/o7GMXoMTkMmU9IXKKlwCsl6jtFGJ+kkVIw
VZD1GHMQzydaFgYx2fn6eO+zps+v2236y/3fn36LUGi3rnF5rU4v57fL9M/L
9e4lL6+NR9forK9aGjnJaLtot3Cgpo9+xvngsMPDsLtqjUXq3oW6Is2jSP+3
c005sfsBuuNfzwGmkRF0aaN08oO+u0997Gmmv3RFddUs6hkDmD6eCqSUmSWX
OLXwTt+ocm8Sukayddk2E/5C95cOWo/Vo9ST+s3oatRBnlSLc7T0yi7Uz38U
Y8TkYGQ+IRFHS4FXCsKFa4TxSgKv5A9J/B4TDOJ5RcvCICQ6t8937n0qQREq
7do17n5xOr9t7vx23lG9Xvy4RnMe8/zOAJsxqNsjQucHT/ZpjnHKA/cudlYW
0Tal++G5cv1+1HOyEFeXjgidvNqFOj1vNALcD6JuGV9KoVkyiVML//S7v2sM
3CQ/Wxd1a+Avdn95lLf2mGZaOExHvNXiHC09swP1cx/FWDE5ILlPSETRUuKV
gnDhGmE8E90r+UMSu8ckg3hu0bIwrGlOn0B9svInQRE67dI16m+biw/zZYru
h+vF8z39DtqUS7tXo/tBOcD1JbS/GKCUecRV79PIOLpE7GTe5TdDf95/YmpJ
kz9UQpSilhVc6x/mEerf3HSBvyxKkGSh9Zj+N5+1mJBEWGfyVz/zUSzdLZEt
O5iQaNBHS4lXCtT3azDuZOOV2iHJucdcR680wpSFJckZngtkZVCCIhzahWu8
dQb0+uQXj58uiaKc4TkHTXnDRQSJm9hdY3kxy/c0Mo4u8TqZ2T9DNYIn4JQg
7WIFecuVeLEu8BdKiSXEHjPenYwTx9KmXbmqn/coliAUacl/QqLDeK+L65UC
9T0bjDsJvJI3JLn3GNKu9BhTnP5ZwY8vTlYkKMKjXbhG9+TtdNlBcS94ulgR
P8rZYpbiR70x892E8Mj+ynt9TyPj6BKrk9nX3WyxlHMwgpRznQWmXdTTX+5v
zJ6lusBf1ti7wEePRamFa2Oe2IX6uY5iie6FaMh/QqKGfw3QXKNAfZ8G44PI
UgqGJOcec+vYRNGyMDynUMGzrmXa9ba827vdFveIo0c50a0T3QPYhgezFTTj
a6/0S8S29tKJq0usThaM8OYnB6h9TZPSXqVHYg6FrNOfypjnEWJd4C/Ev8/4
6DH7CO9ai8TGfJG9+hmPYnllXflPSNTIsi6TVwrU92Mw3ogtpWBIcu0xscGk
jJaFYcpwFo8LduvAL5aB/9QtliEogrRrol+od/2CcPdiJWXN1utylZoz4Wbc
qgnHmUYKOnlxqPUyr4bFVNXvyfZRq6rMMwamlIpWBiR8LcLTH7E+KSjTBf7C
DUoeeoxwgUJYi5uN+SJ79TMexSQxOSDZT0jUSLIum1cK1JcbTACiSykZktx6
jGkweUTLwiCkXbfuf+//Z8qb+m9xaV7fEhRB2jXTjGuJVuN/x4VF6Y1rxk+s
WMestTcfaRrJ7uTxUM044MzLvPbjvfn+SF9uqnRae5V4oZYk5VMrCXu6EO9u
F/P0hzKEeYRAF/gLNyi59xjlprBzLRIbM9K3yMbU4uzVz3gUk8VkDhlLqWip
5JQF97ooXilQ39lgCK3OWErBkOTUY0KD8R4tj4whwRlXgf9QPjbY/aj+K7MI
l3YHUU42YKl+aAxvUGppTOFRdXXlQNNIdiePixSflRGw+9HwWa3NhdghrrKe
jzFKuaS0tGuAfPr9zsR5BE8X+As3KLn2GE10b7qwbMxMxhO8aGlXjFFMHpPJ
ZCyloqWSWTQz66K5iUB9bwZjalPmUvKGJMcecxq9PEbLI2NIcPoc6rtuWUJl
EiUowqXdQZSTDFjGcYwdgXSF1A9mH2YaKejk6R675oka9hjP7mua/mWmXS3H
/N3eBlCfGvxF5C/yHiMO63518TnJI5O9+pmPYh5jsivZT0g0xXxf/ROo79dg
3Ekq5QamW1J7zHX0SqRMUZgynP5JQV2i1OVQ758eijBp16vNPH/PbtiSr2Ro
vnvyPL/T27LsGq6yCRqP8TyNjKRLpE4eLpYZKtJ9JUqJIGaR3h8vNu1ifY7E
LeuCv2z/zPcXpx6bH7ex7OddlxRLNGSvfrajmO+Y7Ez+ExJlKaLBk71SoL5v
g3EmqZRr1EHOvcecOzazBW32iDHFuQ1vaHFyKEERHu3TtxUuKtfI4btdyp24
lwlb2YcSlK6xejvSeK9dRGRdYnXy8JF39TjOHeKHUMoLeUi7KHbZzyPELVPr
An/h+otDjw1FSa+Fe9cladqVq/q5jmL9Dx5jsjv5T0hUhUjRkuGVEvV9G4wz
SaVcoZkquPcY0q70WJIc/bePu1+Ud7UERTi02y+Jn77Vz66xukesdo16epq2
YlkQzWi1NzW0xQ2PWgtWHOJ5BjmVHNEMarF1idbJ5lthdPMR3Z6nScmKpXYp
fdQidrEVnKxLWglXF/gLNyjZeqwe3yJ3y+ilEwrSR9sk/mIif/WzHsWEMbkI
KZ/OiNuxxGjJ9UqB+g4GU56UqyPohiRnF3NNu5B1uWPLcjQf4hpuXKkXJhQU
YdAuXWO48vB0L7i/C/xtvlKhco31spgMI6QarTKyDRarLnwvoH1/WPV8+9AQ
ZUikPYm93p/yvpqlt+LrErqT14dUXtundvPwzQt15R6k5MRSgpQeaiFL6ev0
ZSOBQRdjbfAXTn+beszfW9r6WpxsTO4vJnagftajmCgmlyLl5pSYJ0OJliKv
FIQLcYQpUMqpvHlIco3JdoPxObcEKux5zu2rX51w/uzWsBi8MYMSFCHTrl3j
t/YyPIU7O8Lb4snbpFFuHBfmXWvNI/SLQ1f9taV5j+H7dIbpSv/QdfetkmZV
IsAFs0eQ0x85hS6hO3neq15f+BvWKtZO8uplyBrXNTYsvOouJWPwpUjpXgtH
SufTJ2ZdbF0M1cFfbFWtj6KrZXhxRHdBnXdh1ZLcCW3MwV9M7EL9rEcxVkwe
21aMlKtz4l81spy/2CsF4UIWYQqRUjQkucVkisH4m1sCFbRc5/b18c789rGg
CIl26xq9d5xfXiY7f6le35rlr643gm0vEpgu5F/7Tx2M+2muH6wKrL7++FhK
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
D2nX5e388nIaeam+vTUhvKmpz1U11VJV57qxFrie5wL3IudrYy3Sl1nWcjVV
U59POs7188GvlXb3obqrtq71uVDOnkTmUrr02OIoa1FPyvp4Ui7OhG1jQpqx
KtIpO9RANv6hjItdzvJ6OKfMLflRQNDJLVt9YS3Kwmp/ca5Fz26klNh+jFFs
UdgipZ8A65VE6rsEWH4cI7uYpGGB5gp80kjJP33JRJFXRDi7WFbocawExrRL
l1p1P+rTrv7XR6Z1Mx6KTbv1pstrdXo5v12mf16ud8d6eW38elNndQsHanor
NFnguMPD5e6OYi5S96GtK9I8ivR/03pG5010NzC2uT9BzW/12IqpYU3/h1Pl
Hk4zl1LcYzNjT50fqg6aKXbkRzS+jQnoBt1qGeGDhF2B8U9DwaMDxskEdZgf
uvwq6HgFmVtyj6CTBeqLpFwVpvmLQy1m9iClLCZHGMU2LbRI6R5gvRNdfecA
y4xjZBcTNcwxJnslgSPzT1/gYpK5peMg53WsBNr05uvj+/ePL31epUujuhzr
qZw5T2PRrr3p7kqn89vmZnHnUNXrxZ83dUb9NJqbExWlffb+clYW0TpGf6FC
M5VgelO3u+ZI+pPRjIxDfFGfC53cpRT12HIP83XETU28iMa3MT7Nebhgd+3G
6MY9emsQGX+j+e3eAZQ2Tof2dE65W7KkkyXqi6R8tJ3oLw612MlfSllMjjCK
rRtIkNIpwAYhrvruAZYVx+guJmuYY0z2THRH5p++wMUkXuk4yHkeK4Eg8Rly
KPVvXbKmzK9uuh+4tEtvqr9trlfMVza6H64XP96kNbZG94NygOtLaH8xoC/j
zQ2GIY5XhehcNuQvpQ59j40w7zuxpfRrYzQShF3tyRjacv/Jdv6Piav3tGtv
ltyaIgypSi+1+LpP62792UspiskRRzEvUloDbCBiq7+C7WKsOOagC61hbjHZ
O9k4svb0BS4m8kqn0O19rASCxMdw52rIugw/uedd7cKb3joreH1ypcdPFx/e
pLkF//jpyQwNl1wlhhsh7TLe6zI9BOJrhpOrlFosl2LZynALeLYxeqWZpF3D
+QufTlreLfCddu3Oktsc0i5/llV+UBLF5HijmCcp09zriq7+GmbfseKYky7k
O93imByABI7MO32Bi8m80kH7AGMlYKc9ticMTe+D+ci72oU3dQ/rTlcqFLeP
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
r7cIahGo70S8YbEZv/1izLy4ljw2vxknm/Nauv2cMuiDoEp26S+8PIWVdjF1
EURLRb1+BC1TSrYuEefqwUaxR81Wplr2kXbxBoty0q7cpRRYsmRu6c1fGA8U
HOFeFzPt4mVdSLsWEKxJdazmOfA5FlFdxKCcxeh0j4uXgzMeMO1yCgxxhhLW
Jd9S0q6Bxjoz5FjyuBD2WWnl3Y822z962mWXQ3RckS6CaKnY15eaRUrJ1yXu
XD3MKPaoOee5+rqlBDPmDhZIuyJKybNkaejz5S9xJlf7gZXyGL7lpdsdaddj
R6Ohao+kdw5BEfVj+fLQ5Rr0ipTSBOndB+ehRFOLb/UpJHgIhDGTXhd6buf0
AKP6DAh516HTLlGeQk+7eLoIouXqmF5zrrZQKfm6JJmreyjjSP5pF3+wKCft
YpFUyg3MXhaNlJI+J7/y6TS52g+cjIeZdUVZyfD543TD5ncNKNNX3UgGaLUm
3cfpWr2RC4po3EwcuoRu+6BEKY2kTLt8q08ixbAoXG9B+7i6+aOO1uMGmKvv
wF/mR1SYddIfMmTpIoiW6wP6NuMypeT7i6BhPsL4ts0JVzKMoP4aiotJBosU
UuaTdiWRco1aNKfQR67FCOejjQfIujhpV591cZKoSN/tuqjs3PsXT5SmSbXa
3prYTxhOMG4cm4usFh8w3jinMfifS8grUUpr8fBpl7IW3+rTm5J/2qW35Ga4
yq+tJ1Halbm/DLbGXKuCcuBHDUxdBAF2cTThuZgoVEq2vwga5iGMb4q4jWIC
Iqu/hnJ3UzJYpJAyo7QrhZQrNJYsD32cWghlSC+1x/bEJPCSKM69rghpV3/r
9vStfrbz1Q1ftZ3X00Or1lVWtDbDmqpbKjE806r7SVBE3z7ZZWn7g5MjmoG4
SCmt9YceSniBkfwsh1lKl6Mvd6dKqUe0iDXvBcrHLz4fMizEX+rxzWuZAbMe
9mXoIouW0nM5sJRcfxE0zDmMEw613kMS+kzEVv/pjITji7loAik9B1gBSaVc
HUFnyd4misZarIVIWh7hXhcj7eJnXRHSruEywtON3f6W7rf5soPKzterTlMm
nerX7SmTW5o13fdStsPwAomgiLaBzGd1h/HYXOYR5LQ7lifl+FK5cqJSnykt
JD/15FgLvTaSlA5Hn6FK2QxH9XH6BEs2vCnn9RmYEvzF/RUoeo8xdWFHS4dz
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
vzon8/6xXGxoDWsOsziHAnQR9JhwEA87t3QZ+A4IMdnpHhEk5k33POuz/1TX
/LHke8Z1C/G55IV3nF9eJjt/qV7fmuWvvm4Edyt2zv5UaS6eqYqxFlZi19Ks
Phj5WEpUX6AvsSyycq4n7v5ZLfalfsN0Dj4m1y5WSm4ny2oZdqefS0gpZ2yv
XVmeHJE8nqF41ctQXKA+tYj1lTN9uwrzF5mLjd9Smoqp7VPYyTLjlzhyQVLG
iWPyWkgG41ALL/TRiaw+NyZHdTHBHKYUXSQ9Ju3koHNLh4HviPjKhqLRKlzD
soVc5BNomOOi0d0g5Q6gSQmcgL8UA6QshmChD+o7AV3AnkmdRbFp4Rp7wPxp
lRlImT9EKYEL8JdigJTFEC70QX0XoAvYNamzKDYtXGMPDHHRGhYhZf4QpQQu
wF+KAVIWQ7jQB/VdgC5g16TOoti0cI09MH69wbYbpMwfopTABfhLMUDKYggX
+qC+C9AF7JrUWRSbFq5REJASADrwl2KAlEcG6ucJdAERSJ1FsWnhGgUBKQGg
A38pBkh5ZKB+nkAXEIHUWRSbFq5REJASADrwl2KAlEcG6ucJdAERSJ1FsRma
fbd2+pa2h4EZSAkAHfhLMUDKIwP18wS6gNCkzqLY3Nv85z9jw4YNGzZs2LD5
3P4Tk++n9G3Ghg3bjrbUWRSbIe36v/7ff6RvyTsZm2GDlNgOu8H489ygy2G3
eyb17//vf0/fkHblvMGRsWW4pc6i2NzTrruD/J//32/0DQ6V7QYpsR12g/Hn
uUGXI2/3TOrf/D//hr4h7cp2gyNjy3NLnUWxQdpV0gYpsR12g/HnuUGXI29I
u4rZ4MjY8txSZ1FskHaVtEFKbIfdYPx5btDlyBvSrmI2ODK2PLfUWRQbpF0l
bZAS22E3GH+eG3Q58oa0q5gNjowtz02X3dw+378bef+8EZKk+TC03YVp1+WX
v3/5y9PIX/7Nt1/+cwhvan7/ufppquWnn86//yCX/dH8/uv5p7nwqfr592a5
w49fq5ORn35tVEeuf9aWOP+uboygSN/CH/Wv69P/9Xdlk3hb5lJKdXHuMZvB
LPbsajktamGYJWsbmmQ8ZX9b8+t47tWvltNhe+WP368/Lzr2p5/rH7b2CIpQ
tsyNP2IRYVAKZPz70eVRlugvzKDE08UlWi40JYe+MNtT2vXL373+xV9MrfmL
v/6rv/uPYdIuZoBlBqV4Uq4bdvrp5+sPo02G29I4siAoyeKYYESOOohj027G
fEmXK3U/kvKor4/uIJ8fIdOuyz/9m9Nf/v3bn6Z//unfvZxOL//0P/v1pm5c
W0S2po9L1jlht/3eO9Q9+Pz+o5n+cv/3dbmP8Wh91fq0i+lBoiKdo1b3AXo+
/dF5f64dOzZzKeW6OPQYxWDG7ce1G99+uk5RuumHPL8Tle6YPy2H0QgR+/dz
1+2/nm0uxvbKvm+7/hmL/OiVOlWGYU5QhLhlbvwRiwiCUkDj34kui43kL4Kg
xNNFGi0fGyP0BdvWadcvf/vXp794/btfpn/+8m/vGdhf/O1/9Jh2SQIsPyhF
knIs+PDBu41xLNnrlsCRBUGJXURgMCkGcWz6zZgxfXwpf6JmXd0humN8BUy7
7q50+vu3zc3izqH+5vVP/rypu5b4NDZ1Eean6w9Twf4iJOXaRTduaq7rdl6p
i1ox0q5h4FOcZtfm08+/O3Vs7lKKdHHoMbLB9Dt3FzAVU6b7QXwNc30V9yHg
124i9EM2PWZv9Xhev1vSLq5XauYSw52Cs68i9C13449XRGBXAY1/F7pses/q
L6KgxNRFOIrNwtFDX8BtmXbdc67T699tnirsMq+//ttf/KRdkgArCkpRpNRY
YN9g12gp2KI7siAocYsIDCbJII7NtAkSnyHrIu02ZFvh0q7/8G1zvWK+svFP
Tqe//HcXP96kHc4aswH34whl3DRtw+Cr+TXO3S7tppwtsLa9SMnURdhjPIMx
zLLuPznfiFRtMSL2Y1JhTrvYUuob319vVM08BUUY2w6MP04RgV2FNP4d6LLY
qP6i3/RByZu/W6Oll7HSy/ZIu377q82NrfkWWPfDv/0lwLtdlA6XBaUYUmoN
yUe0FGzZOLI+KLnGscQzQGyyTZD4kO51LR9SDJZ2/fL3p9PfvD650uOnP/nw
JsNzDtpLiH+WD4KbzfhsRjlpV9ZSsnUR9RjTYLoG6y4h2q8ty7bwEbsfoMcq
CFfvGVKa+qRR6yIowtnyN/44RYS34IMZf/66rE+W5C+GLULaZYmWnsZKL9uc
dv3d6+n013+rXEZj+OmXJGmXMChFkHK66xqydtaWwJGZQck5jiHt2uXGTnto
TxhOzxfO/wiSdnUP605XKhS3j6frG47eZH+S+cfzTx5mZd1mcb2kTrcc8aXb
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
uUPADrssUdewgfz9/vPz+5jPevz22yJ630A+495n8ff1HpyWfaS3Rk3usMi5
qN/H7IeFVWWP4orufbyFXdQ2frXdbbctruFUvi5DI1vdFlvmTbtAMTqssFFX
4LCL4y9y9XleOcNQn0r2/hK1kplJJE1fv0f5eiKje3M9zU7K2as/ElgXWcGO
3PFtcLgX0sCel8SLi/nqxaLrIjDLdJYsUB+o4MU8tmddBgw7I7Joi+h9xr83
o53OG3320ZFlvUW9+Ys17GLmMu0+Oo7Vm2be3Jrw8Kzo3sdT2CV81lVZxt5O
uqxgzBQGftYVNuzi+YtUfa5XvkFSn0b2/hKxkgVJBC7WjGmq8b/jzs36PHj0
N2FjKlj26r9uKaQu0oIdt+PbIL2XADFXh7uL+evFEugiaZRSWDJiLn+wQh6H
qMvbW19tCb3PuKX7WfvqqXJiVTGJYcxclMvwY7N5ODb47957Hz9hl7iNb6wN
l1yXNeHvxX9R2HD9xd8kueie7OoTyN5folWyVBeei6mu2LzHFXJ2F3ZF0MVl
9eMxO74NknsRNF+0JB5czGMvlkYXgVnGtWQvnReYYUdO4idW/QeY3Z93tSX0
PtPyInU6ZUSkXjRrD7t4uRih+GPRvY+fsIu56vwtLTsxv87JL/253AuNUGEX
31/k8ycsrzTgPl7P3l8iVbJfXdg34zPwYpC9+nF08bRogZem6I5vA/tegsVc
flzMYy+WVJcNApMLYsmIubzDiXjc1gn6D7vU37MbDr8bOpk+0KddZGj5rJ8i
gXrbGvMiQ1YuRkgNXaDeJ2Mpt7i18cJdUJhJqLmEj7pChV0Sf+GrL/JKA86b
7+bvL1Eq2bcu6uvpPkvqkpMT2asfRxcvzbg9l/eTyu341vDuZV7RRs+AnMSL
i/nsxZLqskbQ7wewZIH6wAoj4OmjLvkiwX6zDb9h1/IDCpvD++dLtMvYNc+a
hgkC5QUVAdHq7XvjQhOXXIwMLmvzrlC9T8ZSvp/n8JV2/sCbposqDenDiaG/
OB9mgCryF7b6Qq+0FNtL2JWtv8SoZN+6aFzMZLquQorIXf1Iuvhoxgm5OF/Y
RGQp1zDuZZCUtb0FJ4kPF/PaiyXVZYWg3/duyQL1AQVe2OQQNQ1Rl/s28u32
S+Ifn/W7a6yeEatdo56Wxlq3fdMOYoWrHRizM1YX8ZJLS59aYfU+w9O4oZLV
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
MezyuV3likDNr6TGInulLhsfYVe+xu/DXxZodI6Ti4lQ/mIif/VNxGmUhDuP
xlY/spRreG2ytBOnhgDijm8HowsTArMkJUHYVSSMgKePumxvZz2Gl7rUv/kO
u5bfXNgc3r94orQ5/U/DZ77VozjDAG/8OjtndwtmkngFo1CClO/naXZ8HVi9
sm1cZsQodCbDyDDNr6jGYnqlGudZ8vyN34O/bJKofCdOLiaShl3Zqm+7XI4x
VBL1I0u5hqGeQydOyMWh49vH6MKAwCxpSRB2FQk93iE865rPUy8ypF7BSLv9
+PjHZ/3uTavHympvqqfVtNZNmbSNv3Dlhu55ST2+SslaIMFOEqdg8/VGNAPa
MqTcnCfroaVNl6DFto0j7LoYEjLuga6LILdYXmkqnUmXXRi/s78QLhUrFz3B
/MVEAerbLhb6+Rg7l0Tqx5byrXi0nkvWifNyESTdz+jCWNIwEw4Iu4qEHO7Q
YybNt7us+3HQaJfeNExWvD0+7h8cf86TGypvWm8ja7Mo5ZBsaK71KTXNuXpH
hnCvc8Uv2MSrXdQmL0RKc2oahmcwN32/o6n9ZrgaJ8nmBFptKVKS0/B0EeQW
2isFumxO2IHxu/nLdP4wtNIXL3QuifzFRObqx2mUnFzsLfdU6seXclM+2/nu
b00FCrv2Nrp4x9r0uSVB2FUk1GiH9aTq8dtvaDh/qWvYP977BvLDcR0W7s6+
c1ks1vXnTeNobT6vpqyHb+p1pzLsVK1INqxr1s33KAeKgiRxCjbzahf15xQj
5euWXKa8tLmMOxl1ksxnDJ+u0c2xjZ/67D85Ncs4/9H67plFF8k9vJUwdNgV
2itbiS6Lsu/E+JlJmrpethfj7vzWXbpD55LEX0zkr36cRkniYpmpn0LKVQHN
5zsNFci5CJLubXQhaPqEreUMwq4ioQZS7E0IH7/f98CfS1441Pl0mlzjVH1d
muWvvp4dd/3D7IKVZvLsPVW9SKX7MKt1VbQm7OIliVOwV3VN9Wvw16KkFGwy
rlzxrh9MLIvVFWw5FFGm4Ceh6TJjMwDjRWTLMxg11gb1ytfJYSq5HOPnJHmO
mBc1WzG+wx4+l/D+QqcQ9SM1SrwkmakfWUpumyzrxJ1a/pbUjO9tdCEwS34S
gS5xkgA6XkKhmLQKb7IcIfcFBRrmdtHYVkHK2NB0AU7A+HdDMH+B+gUAR84T
6AJKJnUUxaaFN5WA+RtJM5AyMkRdgAsw/t0Qzl+gfv7AkfMEuoCiSR1FsWnh
TSUwtIvWwQqkjAxRF+ACjH83hPMXqJ8/cOQ8gS6gaFJHUWxaeFMJjB/isJ0G
KSND1AW4AOPfDeH8BernDxw5T6ALKJrUURSbFt60IyAlOCww/iMD9XcDpMwT
6ALyJHUUxaaFN+0ISAkOC4z/yED93QAp8wS6gDxJHUWxaeFNOwJSgsMC4z8y
UH83QMo8gS4gT1JHUWyGYj8dhH6krWFgBlKCwwLjPzJQfzdAyjyBLiBDUkdR
bFJXGAAAAAAAAADwSB1FsRmKjUmM3QApAaADfzkyUD8CqOQ8gS5gH6SOoti0
WLK7IyAlAHTgL0cG6kcAlZwn0AXshtRRFJsWDrgjICUAdOAvRwbqRwCVnCfQ
BeyG1FEUmxYOuCMgJQB04C9HBupHAJWcJ9AF7IbUURSbFg64IyAlAHTgL0cG
6kcAlZwn0AXsBl108/i5/zFy/3m4J/EUdl0v59PpY+RUfV6aEA7Y1OeqmnKp
qnPd0JM29W2R+MOQmJ1Lf+kPcor6/KHjXL9f/FZpTx/yu9FrQUHmUkpvn1fJ
r+zWZvIs2M0m/1r9p2HdGqsgTIuR04w5ORoJMbNJK2tuji5GqmSJLgQy95d1
Ip76AuMP78jiggWhBPWT9C9037eTqJL5/iJrxdltMt/3w/QvaXQR3Ivk9mN0
SfH6fWDDGHbp4qTuR03YxUsioN064PWr+jidL9fpn9fb0xdPX41fB+wa9oWd
Nn1DT2q66t7U+766mf7SJfWSS3/xLsV4SjPmpneoIXOqvxkL0JfWZ9iVnZTS
2+dV8piky6p6WcnUSlb6QG0s3kvsZxKbWQ4jlFeicVDptQnurlktO4UIYddQ
5TdrxbNdTFDJEl1oZO4v4wls9SXGH8mRJQULRQnqp+hfqL5PInolS1pLfr8v
a5P5w55g/UsC4xfci+T2Y3RJUfp9QEUb3vx+//nz/csKoQRJ+LRrB3x638f5
snm+3Plg9XX154Cdyb71s4ReYfAPqmlzc9G45+BgZ02ezIigO10zwvAQdWUv
pfD22WGXNkE/eawugSZNL79O/UZzuWciX7FRn0X3SKAbqzaSCFTAVE223NiO
LKhkiS5UcvcXkfoS44/iyLKChSN79dsU/QvV94nErWSJv/D7fWGbzFc/YP8S
3fgF9yK5/RhdUox+HzAQBD5DCBU6iY526YD152aKY54M6X64Xf04oLaVaszN
F2+Gm52LvvFslK5sS8VkaBkcL1KKlIoEptv3GWvotNRqbFDfUK7nT0HGkTHC
rtc4xJwbX31BJUt0IVOav7iqr62ySI7ML1hISlA/dv9C9X0ysSt5BeUeZP0+
NxeR+iH7l2yMX38vPpP47JJS9PvAhCDwETy48vasax12XTpr+nrzvtdPVx8O
qF8TaGy/BNN+rFxMEyIyD+Th4VlXKVKqMN5+hLCL/xhsSuO4oodJ+LBrOflr
zI2vvqCSJbrQKc1fQoVdsRyZXbCglKB+3P6F7Pt0IlfyGsI9CPt9Zi4i9YP2
LwmMn3kvwiTBu6Qk/T4wwQ57BMsF/a0w/Oc67OrW906TG4onztOUiKMD2po5
9WQFt18W5aLDPLvhw808eWsJUurO9vaCgy0j5qyXvPkNMZAMHnat+iFjbgL1
BZUcdMajNH9xu2Wj8UdxZHbBglKC+lH7F7rv04lcyWsc74GYnHSaQP2g/Utk
XQT3IkgSp0tK0e8DE9yoJ3XUtQy7Lstnyttj8STazQEJE+jvP7KNWZSLBuOg
oL/Wud7srMh9tdLXHEkBUqqw3b6XSm7G96R1ZqR7LcLwuoQlHA8xkgwcdm1s
Xfz42TSBK6hkZhIypfmLWH2z8UdzZG7BwlKC+hH7F4bvM4hbyRuc7oE8GeC2
lNHwY8j+JbYugnthJ4nZJUXu94EJbtSTdoXhP0sJuxZ/X+/aqdt82F/YZfGj
4efqttica9oIhzGS8PVkugApVdhu36GSV1sqd/vCms6t3/Yi6t6RNQxx1K/W
9iPJqgoy7RU27NoONLyHXZJKliQhUpq/SCaMCMYfzZG5BQtLCerH6184vs+g
1LCLMX4OFnaF7F+i6yK4F26SaF1S/H4fmODFPMmfdRUWdjVjWzjv2tnHYMx5
Ik5j7DB3wZiM97ceuAAp33G4fXolN+OnPIxjvGbcFrYa/zvuEWu87pBi+szH
8wrTfthhVhuEDLve17kHCLtElcxPQqM0fxGqbzP+ZI5M8koOvQnbmEy8NPXf
UnjsX3i+z6DIsIvX74cLuwL2Lwl0EdwLL0nMLilyvw9MsEKeDKKuMsKuceP4
s9Kgux/f/uqhj2scYi56Lq3XtzDzl/Idp9vnTv+bNFVdq3kfjrxftNk8gB2a
4tLCLtUMnv+wS1DJUl0IlOYvboumtMaf2JFdW9oFxwm7vOrC9X0GxYVdfGsM
GXa1ofqXNLoI7oWRJFqXJL0XEAZWyGP4MJfHJGbaEnqfaU2K5hmxIu5y7eM8
jATI76Mx5i1t5C+l+kTx7fPfYNW1p+ZlPvwCBoqPQoVd6hcZfIddgkr2rcuK
0vzFVX1NnaV3ZD9RNJPS1F/jr3/h+z6DssIuUb8fOOzyl2ZJUl02+Jp0iNQl
8QsGwhI4hPIedW13Mnz/at5w+N3QyfRFR+10rOU7kB5yWZ3g7Ducr374GnAU
IOUWt9sXbBykTqL7AGIrbEhDjSMDRnPc8ThffUEl+9ZlTWn+4nzL+h3AynNk
Z0pTX5HGR/8i8X06kSt5De8epP0+KRfP6jv3L0l1WSO4F02SKF2SpGAgKNwQ
irdcUJDERvv2BYerygG9f76E+Y7B8F149RcZlGGXKJfpap3jOPc3RAfse0Vf
w+gSpHw/z+H2Ba2cerhiKq9gRDiUK8CcV5iwa7XFgXFhFq0o3JnF1vg9NY+6
bCjNX0KFXekdOWnYVYj672l89C8i36cTuZLXMOrVod93fVAtfNjj1r8k1WWF
4F50SaJ0SZKCgaAwQ6hfVojk/1nXOuzqnyl/fNbvDrh6Eq12wHpa52rdYUnb
XwgfxKun80S51ON7kb7eMrA7IGeOePHigiYCLUPKzXkOvbqgldON7wwvQLDf
WbGPiOxSGhIyCkOXUpAbX31BJTvosj9/cQ27tMFNake2RV1ifzFRmvqKi3nt
XwSFys/F+PcwXV7c79OnTDyp76N/SaoL6144SaJ0SZKCgZCEDKFCRF3rsGuY
33h74tw/a/6c50NUDrjeEZjSWL8v8+p7XsvSP/WOGoxwTJ8Le1n3uNGHsq2m
XksWdWkvXIiU5tTvl+JVcjM0sVxdnj8pf1Bu2WIo8NCFm+uNIKUhJTkNT0pB
bmz1BZUs1mWn/mLOQmj8ERxZWrD5BLEV68hc/dj9iyIp5Y2l7FyMeQ/ur3E7
TU2QXWw631P/klQXzr0wk8TokkQFA+EIGEIFibq2Yddf7XVY6zu722Wxvtef
A44x1HxeTVne3NTrfmjYP962YJCWy7CsWzfdpZuLHfey6co0pxy+qkKb/pFF
XfoUxUj5uiX77fMrefwEa/9Vt9lY5j9qM+w/u7HKZfgSh96+6nppMeP3DOyb
YVOkNCTNJ+wSqM+uZFGSdpf+Qh1GSow/vCOLC+biLybyVz9m/6JKW6iLMe5B
1u9zc5lguljI/iW2LoJ7Ed5++C5JqgsIBDHY6faBZ4ZQgiQU2q0D9j54Pp0m
bzpVX5dm+auvx81dlzJ7baWZB31PVS9S6T+XzM7FusBd34L1Xrdsf1YubC4c
fUJlbuJMDUhRUvJun13JjUSXZvU17teusGqeDfrCFiu7NY6ZUKScsVmmZZ2d
ZBGI4nUPQ3K2+rxKFibZib8I1RcZfwxHlhSM5y908ld/OD9K/7JMs0F3iRxd
jOsvsn7foU3mqB+yf4lt/IJ7Ed5+G7xLkhcMBMF7WBSaVuGAliPkVqJAw9yU
Gps3SFkANCmBE/CX3RDMX6C+E3CxPIEu4GCkjqLYtHDAEjB/uWwGUuYPUUrg
AvxlN4TzF6jvAlwsT6ALOBqpoyg2LRywBIam1DrygJT5Q5QSuAB/2Q3h/AXq
uwAXyxPoAo5G6iiKTQsHLIHxoyK20yBl/hClBC7AX3ZDOH+B+i7AxfIEuoCj
kTqKYtPCAXcEpASADvzlyED9CKCS8wS6gN2QOopi08IBdwSkBIAO/OXIQP0I
oJLzBLqA3ZA6imLTwgF3BKQEgA785chA/QigkvMEuoDdkDqKYjMU++lT9CNt
DQMzkBIAOvCXIwP1I4BKzhPoAvZB6iiKTeoKAwAAAAAAAAAeqaMoNkOxMe+x
GyAlOCww/iMD9XcDpIwAKhnsg9RRFJsWq3x3BKQEhwXGf2Sg/m6AlBFAJYPd
kDqKYtPCAXcEpASHBcZ/ZKD+boCUEUAlg92QOopi08IBdwSkBIcFxn9koP5u
gJQRQCWD3ZA6imLTwgF3BKQEhwXGf2Sg/m6AlBFAJYPdoItuHj/3P0buPw9t
2t+f70Xq+/fPQ3uul7DrejmfTh8jp+rz0oRwwKY+V9WUS1Wd68Zwcn3+0HGu
TXncztXr1Op8awLkssnGcC/NrdLmMKS9mcpnJXMp/dx+01f3or51+W1OfBbs
ZjQy1r0sErBszIFmzMrRSIiZTVoRchMULMC9ZG7860TS27cZv6uLMQsWz/ht
lKT+mJTajuWWy057MUfjJ8sSJxcbaSpZcDOS+4/hL6LRBQiCMezShVbdj6bf
nj/+zr8+gzDDpdi0Wwe8flUfp/PlOv3zenv64umr8euAXcu9MOimb8kN7VAX
EHEb8/GaL194+on/XMZO6JXP6I5KbzXeZl8nPjus7KR0v/26b4H7Fq6Z/tJd
Un1iVb3Om5rvyhimM81SYGMCOouqloPbCGHXUK03s0MIChbwXjI3/vEEh9un
GL/UxSQFi2L8VEpQ/wW5Hcsxl931YhLjr8fOZKrZZqxs/dA7Ti5UEvgLZ6Qk
TxLDX2SjCxAKbXjz+/3nz/evNrLShFFdKsVPfSz27SXwatcO+PS+j/Nl83y5
88Hq6+rPATs/eLNPY3vND4g0KXofPHvLpW26B2QKX3vmo7pSl4PGMz30V9lL
6XT7Q/NJmrnSCllr5Ophm6XExrj0BtZNpXVtfCObGWAzVZMpN0HBwt5L7sbv
dPtk45e4mKhgMYyfQfbqr04htmOZ5rKrXkxi/JqR/BAkKI0/Ti4MovsLc6Qk
TBLDX2SjCxAOQeAzRF3Kn/ro6leTRhfF8WiXDlh/bqY45smQ7ofb1Y8Daq22
0bdF7BGa0vv6TLS/eAzuxp84Hji0DIysVZQgpRrr7fuaR9fKz78XkY05EiPs
enX3jNwEBQsWdpVh/Izb92L85BaGVLAUxm+iFPV5UuadiyJBib3YCorx68+h
Gn+cXExk4y/6kZLPJF79RU+atu/wCAIf87MuTXCleQzGp1044KUzza8373v9
dPXhgPp1DgY/447QDPMOZmfmLvvRzzsx5/08zBKWIaUay+37G6HrGkb+vchs
zJHwYddyjrXMsKsQ4yffvqd6Ircw1DFhdOM3UYb6zLrJOhcVJfZiawh3bOrZ
iRFRnFxMJPAX5khJmCS8vxhA2JUEdthjeq9L/7QrTNjVre+dJjcUT5ynKRFH
B7S1JtrHt36edkUNu8gu6GNtRluGlLqzTW/EeGvN9MUS3IvIxhwJPqZdjafL
DLsKMX7i7XsyfkYL4/a0K3XYlbH6bCkzzkV3dnm92BpH6yUmj5OLiciVLBgp
CZLE8RctPG8B3uBGPcaoS/9GmOFNMSbtywEvy2fK22PxJNrNAY0thnHVbHWu
N5vMmJbi6tafG9alC3MxxHBUH/TUXxUhpYIoUVczvo4sGCvqfpTYmCOBx7Sb
jqPIsKsU46fdfvyoi/GwLrLxmyhAfbaUGeeiosxebINTo0Qed8fJxUTsShaM
lNhJ4viLEvPoAoSFG/WYo65/dhsXft/v37/LU56h2uYvDrRFdFijm1W3xd4x
075ZWkPvdxFdh0zdu5iWIIqZi/qtz94Hq4rsz576qyKkVEBfYbjeTJawZetq
s+Nuf2t7Hpwf+TbmSNiwa9ufI+ySFd5j2OVi/As4LQxVl+jGb6IA9dlSZpyL
ijJ7sQ0OjRJjojVOLiaiV7JgpMRNEsdflkUhji5AWHgxj+VZ13DO8Mmv+338
b/8/P7/yQGtNW0SHZb6cNiQatx+txv+Oe5Gyi2zJZdzjdIzUnplOO4lSp1F8
zRIWKqX19sdLNWOHM28m27eS1OeJ46c8dG2j9F782RiNkGHX+/s6CLtkhfcf
djkZP7OFIesS2Pj7W7Yx2WsB6rOlzDiXd0rtxTZIGyVeNBQnFxMJKlkwUuIl
ieMvqmJaRhcgLKyQhxB1qd7hehi22mDTFtFhSa6n+qF5H1k65jJcttlMkwyt
BDHs8tdfFSml9fbHrV3PytrsfqTr2Wi7LYe1r75sjES4sEs1tYiwS1Z4f2GX
F+NntjBEXYIb/87CLr6U+ebyTrG92AZJo6TvVtLmYiJNJQtGSowkcfxFf3Ne
BQJ0WCGP9Q0t7cYZ/gKvtoQOy4ThfUz9ckX2uECyAJh6M6ZHaUxKlNJ6+9OT
fM0yP1bLqNVfci+ebYxEqLBL/b4Awi5Z4T2HXa7Gz2xh3EofdNZBT/7q86XM
Nxf1iUX2YhvYjZJosB0nFxNJK3mDr74jjr/YioX3u6LDiXisUdcj8gbyyq/m
DYffPaBM31r0E3bpPrTXCgd7grCL6oEe+6sSpSTc/jDrbfw+p72s65IpN0Fi
3otvGyMR6MqSYNS5YIHCrlKMn77I0NH4uS0MpWBJjN9EAerzpcw3F1WuhfZi
a3jWOy+CyzIXE0kreY0gVtEkieMvJhJ9tfDgMAKePupirzCc8PW95PbtCw5X
lQN6/+KJsgWRdNhqBzRdSeIY/JZhSEHsr3y1p+VJSbr9ZpjpU//mqWHk34tv
GyMRZky7ejXYuJbLZ8FChV2FGD/x9p2Nn93CUAqWxPhNlKA+W8qMc3k/r9Re
bA2jURpaTdEOMnFyMZG0kldQR0qEJHH8xQTCrhTQ4x3KHvCGd78Im3GQaLff
K//4rN8dcPUkWu2A9bQAV7+14HymZhgnj7re0xhWmgsWobNbBnKYxpklXLzr
oGkKipOSevv663GnWbXtIv9eHGzMLqUhIes1HaqUrrmFDrv2Z/ys9Vty4+c/
hyAVLIXxmyhDfa6UOedivaz+3Lwc+a14tFse9naQRUOhc8m8krcl9baOKI6/
6EHUlQRyuEP78tbzLGVw1W3G4f27XdP8xtsT5/5Z8+c8H6JywPVOmpTlNe/r
AnuLfU85vvOobHkMC56fPyl/0KzWFeaiYviCA+18WX+lvXbmUtJSK9G0Z6oX
uZuhFeVLyb4Xpo1tikGrYEVKchqelG65BQ67dmr8tNtnGD+tjD4KlsD4TRSi
PlvKjHMxpzacm50jb8pnXWHLHBFEzyX3Sp7SM0ZK1CSh/UU8ugDhoEY75O8d
/37f/3Rf6Zpjr8ej/5OPJ10d7doB/2qvw1rf2d0ui/W9/hxwtPP5vNq4hnzc
y6aLiuYzhu9pmWZZ+s87rJIMX3zwmUtT10sHHHcdJW8jKuuv9Cnyl/LtlshD
wqZeB8ZDXStzGj9d2H95Yz59/qMhQ/a9cG1sSmWX0pD0gGHXDo2fVWMM43/P
RLKimjoVH9X4TRSjPlvKjHMZT91BL7YqoPn8YUSgewBFe9wRNpccK1kwUhIO
rkL7i3h0AUJBDHZYT6sevz/f3de6Ru7fPw9PMdc/FWFX74Pn02nyplP1dWmW
v/p63NxFObPXVpr5g+X59TJBl2TZ4xvSLJJMu496y+Xp0tXiXOY3TDn75MxN
nKkBKUTKxS3xmqnx8xgvOQ05NRKDEdyLwMYoUs7YXruyrOeSLAJRvOqlSC4o
mPRedmL8TlKyjP9VOJKLiQsW2vjp5K/+MhVTypxzKb4X4xq/9T1YZW3EySXb
SpaMlOSDq/D+IhxdgCB4C4di0Soc0HKE3EoUaJibUmPzBikLgCYleAHj3w3B
jB/qFwAcOQKoZHAwUkdRbFo4YAmYvy4xAynzhyglmIHx74Zwxg/18weOHAFU
MjgaqaMoNi0csASGptQ6WIGU+UOUEszA+HdDOOOH+vkDR44AKhkcjdRRFJsW
DlgC47c7bKdByvwhSglmYPy7IZzxQ/38gSNHAJUMjkbqKIpNCwfcEZASHBYY
/5GB+rsBUkYAlQx2Q+ooik0LB9wRkBIcFhj/kYH6uwFSRgCVDHZD6iiKTQsH
3BGQEhwWGP+Rgfq7AVJGAJUMdkPqKIrNUOynT9GPtDUMzEBKcFhg/EcG6u8G
SBkBVDLYB6mjKDapKwwAAAAAAAAAeKSOotgMxca8R55AF3BYYPxHBurvBkiZ
J9AF7IPUURSbFqt8cwW6gMMC4z8yUH83QMo8gS5gN6SOoti0cMBcgS7gsMD4
jwzU3w2QMk+gC9gNqaMoNi0cMFegCzgsMP4jA/V3A6TME+gCdkPqKIpNCwfM
FegCDguM/8hA/d0AKfMEuoDdoItuHj/3P0buPw9taPT4/fl+Jb/fv3/15/oI
u66X8+n0MXKqPi9NCAds6nNVTblU1bluDCfX5w8d5/r90rdKe/qQ3U2bWdPU
t3XBbsaSaXI25EAlc10EleykSyfL60SLvUiTiNKIaMacPBgKITOGWTIL5uYv
WjI3/kUCgb2wc+kTRdElqllqKUX9RdJ1dX9oE4t04ZslP5dALV8iKfn+Irt9
Wi4uHV8gYdLoEq0XD+svvOEoCI0x7NKFVt2P2rBrCNjuP1Oo9eiDMG+hV7t1
wOtX9XE6X67TP6+3py+evhq/Dti1QwtvaPp2ydD2dHZOHwkYr9Znrf6t7hvQ
6ulxc8HGRpXoTEMxb6zCaslcF0ElS3UZhTnPujT9Hz4qQ9MoSDL2jtXc4o6N
sdfQq7vmYngWZXxLMktBwZz9RU/mxj8gsTF2LnF0SWGWeopQf2ZU/fyq78Hh
1Cey/YXfV/JzEVkyiehSSiyZf/u8XMQdX7guKYGLCe5FcvsR/IU3HAWh0YY3
v99//nz/agMrbUT2TKZK90xjej5Gp1074NP7Ps6XzfPlzgerr6s/B+z84M2k
ja0P08670zU+o89Gm0c/t0EYSE7neXLK3HURVLJIF02zObTIZ2U1C5I8f9XI
/Ezlq4nts+im0ro2vonUelPMUlIwZ38xkbvxC22Mm0scXZKYpYn81V+eon+0
tULmL9yCCXKRWTKRuFJKLJl/+/xcRB1f0C4puosJ7kVy+xH8BWFXbggCnyHq
Uv/WBWua8Or5kyaMY9EuHbD+3ExxzJMh3Q+3qx8H1Npsozdmb3Y+OCA3ldKX
FVceyug97MpXFzWCStYn0ddmo5NFkMSo2vOnIGsHYrTeIrN0LRjFX8xkb/x+
bYzoYnF0ST+oyF79EfIDMQtaXfy1yfpcRJZMJraUKyiW7H77Tv5i6itDdknZ
uJj+Xnwm8egv5pKBBAgCH8Ozrt/+WZdgZSKdduGAl86Yvt687/XT1YcDahZg
vH5iPYniYp+/1KSytHLLKTPfYVfGuqgRVLLxWZdpeYZCF0GSaXJLsAzEgfCt
t9AsMwq7MjV+sY05udjhwq5M1bf/xiOYwRByEVkynchSriFUkofbd7ID49L6
gF1SAhdj3oswSWh/EV4MBIQd9hijJ1vY5eF5V7twwG597zS5oXjiPE2JODqg
rZnTPvH1YOeyxoqwyn/1RNp32JWxLrqzmbcv7EQEFW1ZUxBs9MErjM8MJGbp
VjCeuagp1fg7tLXnnEscXdIPKkpQ31+joM/Dp1lKvNKDJUSWco1j+YnJHXKx
vlkRrEuKrIvgXgRJYvlL+hYSLOFGPZZnVuZFhub9D2m0Lwe8LJ8pb4/Fk2g3
BzRarHFQXJ3rzW5R3DdL+aP7Zny5lv6oq/UeduWsi4JoUZdgHCFsSvsOIEAz
G7j1lpuluGA0fyFQqPG34rkjt9e2rIXi6JJ+UFGA+n6iLrMuvsxS6JU+pk8i
S7nBefkfKbU8F0vHF7JLiq2L4F7YSaL5i5/hKPAFN+qxrRRUb6nx+P1+prv7
eNzVFtHHjW5W3RbbzXT7zTA3TaOO7lf7vVZnW5Jt83zssMvnCkMDgn7HkkT9
Am/fAldVkMddYce3DmYpiTTo/kKhUOM32lj0sEuoC8Iuwo+Lv693uCZsCE/V
xc1gHL3S01xTqWEX4/bludg6voBdUnRdBPfCTRLNX/wMR4EveDEP5f2saQP5
x3Da49F/w+v+jLe8rDJsi+jjzJcjWrrwWVdl8cH6rW04ctgV51mX/5hrLkl/
0nBW08z7yIZZZRhyfOtklsKCkfyFRpHGb7GxZE+7mLoEMcu+bmxM9lqA+uPf
m1HzeYfrPgbjzKobdPFjlhKv9Pd8v8iwi3f70lwoHV+wLimBLoJ74SVJ5y/L
TBB4RYcV8lB3xRhDrelzyd9jCIawi5VE/BJqY2qEVRMyBw67IkRdRjmck4wN
+2LOq09UWtjlaJZui3N8jNmKM37CXSdcZEgsoYdcTBfdUdg1bhx/1u5SQW8t
9Lp4XftK9kov/jtTXNjFv33pZAix4wvTJaXRRXAvjCRp/MUlF+AFVshj+JYX
MfVh3u3SQ15j7zIR8f7oYJE5b4kxnRJ1EVQyK0nYmEtLoMY0VBvtbJauBdP5
C52yjJ9mY4nDrpaqS/qhQ/7qTyuS1Ol4cZdWlwArQ2zF8htztaWFXaLbF/qL
25MRVydNqssGX7PtCfxlS6jdt4AJbtzkFnX538nw/at5w+F32yjTlwNDhV1u
jZw6F0lvSadAXcJGXfOKA/rVBUkUuEcR+usGiubczNK5YF432src+Ok25uxi
cXTJJ+zKWP3h6Z3xE7iMEuh3ZovZV/ppLddElnINz5Klty/zF/eoq6QG1oTg
XjRJEo0t3ZIAZ5hxk2ZzeGJqh+Qz7dsXHK4qB/T+kRT+WnbD5Yjf1tBsRkpB
6U2rdzCNi2ZElKeLoJLJSYbKZu0VJEiiZDCxAMPQMONbD2aZUdiVufGzbMzZ
xQ4XdmWsfjM8F1Fe0FfY5bmvNKrvq7XcEFnKNYxKcrh9kb+4DUjcu6SkuqwQ
3IsuSUx/MZUMYVdceHGT+GGVp0dd/1yHXf0z5Y/P+t0BV0+i1Q5YTwtwrXu5
aC1THnWRXldwcAae/5HXC03rldUddHG6hHvWVY8v0jJsQ5BEdyFbQ2qX0pCQ
YfB0KV1zcx142/xlJ8bPtjFXFwutiyAXsfGbKEJ9w4/cltDyEXdPfaVBfWlr
mZ8jvxWP1nO5dBbScYt4QOKjS0qqC+teOEli+Yu5aHi1KzKswEkWN/W7x3t4
q2ugXTrgML/x9sS5f9b8Oc+HqBxwvfkmJeR43xe0N/L3lOPLy8omkboS297I
NYNfOuWyPJ/ynoeltjLXhZbaPUmi17mmC9mXJhCkNKQkp+FJ6Zab/VQnf9mD
8Tu8cu3mYgF1IeeyuabYJHVkr/7yd+WOGtsMxbrw+kpJLg6tZZaOvCmf7Xz3
zkIwpJdHXb66pKS6cO6FmSS0v/gYjgLPUKMdYtT1+P39fSz/2W1p2G1lKImw
lLRrB/yrvQ5rfWd3uyzW9/pzwLHDms+rjStvx71sOmOfzxg+k0CbZSE1cuMn
8vrvrky5NPMfPc+xvdpF/ZXz1+XtlvxHXYPIumlI5bBHkKSjqetlmnEnaPsm
shQpDUkLDbtc/GUHxi+0MWYub4TVhZPL4lSh8ZvIXP1Fono9CBtaDV10I9OF
VTB2Lg6WnK0jrwpoPt/l9um5qFIQHCZklxRbF8G9CG8/rL+07sNR4BtisNNt
HU951vX7c1/sHH9/Bly//iKunnbrgL0Pnk+nyZtO1delWf7q63Fzs/zEd6WZ
cliev/4m+PBRcFJbx9hXqpHnonqnxryO3tJWFaLL4pYEu/7YkljfU9KEXbwk
Hc9285WwqiifPZ1uwioluWzGi8hWdNDMUlgwib/swfiFNsbMhZCRH12kZskz
fjqZq79JVS9r2txuCPsXZsE4uThYco6OzLVk2e07NeP0vjJklxTbxQT3Irz9
Nqi/zGnkA0XgG78xUQRahQNajpBbiR6DuV00tlXQpQBoUoIXMP7dEMz4oX4B
wJHzBLqAg5E6imLTwgGjY/7mywx0yR+ilGAGxr8bwhk/1M8fOHKeQBdwNFJH
UWxaOGB0hnbROliBLvlDlBLMwPh3Qzjjh/r5A0fOE+gCjkbqKIpNCweMzviF
ENtp0CV/iFKCGRj/bghn/FA/f+DIeQJdwNFIHUWxaeGAuQJdwGGB8R8ZqL8b
IGWeQBewG1JHUWxaOGCuQBdwWGD8Rwbq7wZImSfQBeyG1FEUmxYOmCvQBRwW
GP+Rgfq7AVLmCXQBuyF1FMVmKPbTp+hH2ho+FNAFHBYY/5GB+rsBUuYJdAH7
IHUUxSZ1hQEAAAAAAAAAj9RRFJuh2Jj32A2QEhwWGP+Rgfq7AVLmCXQBGZI6
imLTYpXvjoCU4LDA+I8M1N8NkDJPoAvIk9RRFJsW3rQjICU4LDD+IwP1dwOk
zBPoAvIkdRTFpoU37QhICQ4LjP/IQP3dACnzBLqAPEkdRbFp4U07AlKCwwLj
PzJQfzdAyjyBLiBPrGHO4/fn+/5n5v7983gQEn3f50T3+/evPQmVVuFN18v5
dPoYOVWflyaENzX1uaqmXKrqXDeGk+vzh45zTcqtqW+L/D4s+Q1pbuP51c14
bn/p15VJl14leZbm1ljTEMhcyrlCdRgqWlBjAl36ZGM6i+qOxMllyoxoyW4F
I+ciFMZC5sa/SMBvLtat1zPNzZYonvFHtWQtpai/SBqtS7K2ltLudVeOzLZk
534/1FBB0FxQSKNLnFqWODK/5Q+jC7CETz/P4On+84qankFY/xdTGNUlWkRa
j4c9CYN2603Xr+rjdL5cp39eb0/HOn01fr2p6z4Wdtr03Ymhtev6BXG3Xvc+
2Nt4s7ycNVl30s2Sc3/x7lbGU5oxN4M/jTf7OuPpjX6GLZlLaVS5v47hN2aN
8XXpGsVq2cEFGUbGyWUNyZKdC0bzl3Hk+BJz7IvcR2yZG/8A3yyHFNWr8ZpG
FZV+RBzF+FNYsp4i1J8J2iXxW0tR97ofR5ZYsqDfjzJUkDQXRBK4mMDGJGYp
cGT+CDaYLsAU4fx+K8OlPoz61kVR/Y+/iiSeAq927U1PV/o4XzYPizuHqr6u
/ryps9A3YzMNu+Vh1+ANgq6gnwB8FtKYs8bXBs8/qxNpLtin0SQhk7uU3b1r
WhmD/Pwa4+vSnMfpp65dbNzCfD1xctlAsWT3gpH8ZcxIYQJPaVxrInfjFzUX
2uqsNRUZyfiTWLKJ/NVfnhKuSxL1LwL5duPIEksWOHKcoYKguaAT3cUENiYx
S4Ejc5ME1QUYAhxlADUFUepfdJHaM43uBy7t0pvqz818xTyz0f1wu/rxJq0J
NvoWT9itix8ivRpJU8763xqlX05F0o+WvDWM+UqpZmiylD/xa0yiC/UKPomR
C82SXQtGzcXw6/MnN+vP3vjdzXKFJk0S488p7MpU/ZHAXZKsf+HLtydHXkGp
CoGLpR8quA8vsnExvY35TKJ3ZH/DntaHLkAf33QRFDe4Gn7QXs5H3NUuvOnS
Gc3Xmyu9frr68CbDagq904i6dcdHZENKw0Wsy+I0gyKNl3kYupQgpRrzRBGv
xiS60K7smfC5EC3ZsWDkXAYt9co4VUbuxu/BLFeok6Qx/ozCrkzVt/9mhOpi
sv6FXaw9OfIaQlUIXCyDoYLHsCueizFtTJiE6cgehz0twi4fGAIcwTMtw1pC
X294tQtv6hbrTjMVisfH0/yGozfZX+HRPIvlroIQ2/OqvRN2lNpk+lL5DLsy
llJ3Nn/+NuD4cCdhl9SSeQWj52LrFp36n1KNv4NvCfw8Qhp/RmFXxurH6JJE
raX3sKskR17jaMk+fcdnxydpLrZE1kVgY4IkAkf22fL70AWYIpwuulLFXbq/
m59oeXrc1b686bJ8QLw9Fo+V3bzJOizTh13nerP1k2mBvLjx3ziCqBk2OZPu
/SbDe09kSpBSgWV+1F+NkRu5XYRdckvmikfOxTL0c6qNQo2/Zfe9zfguPrO1
CGn8+YRdGasfp0uStJb87nU/jqwovbjwgkF0+KGCsLl4J7YuAhtjJxE4sq+W
35suwBzj9BvBr7d/f/zoN4RH2LX6odsHZrERzLSpj325+no7UcumndtWUDgG
MaXpNx5dd2ndG58edt8tQUoF1lUpfmqMMR7YQ9jlYMmMU5m5qF957jugqnKb
JS/U+Klmufr6QreNNKu4gY0fYRfhx1hdEr+15Hev+3HkDQ6WLIg3ww0VHJsL
FdF1EdgYN0n0sCuALsAS5Ay7v/+538f/9v/z86s5G2EX7XKmNyWbsWGbtxPt
OzzLKqh68xdOkShtbzNuclqN/x13PCXnoaVIKSnvArjXGK9PLD/scrJk8qmC
XKYNfscB3lPZaRtdx8VJRRo/f6jWjJ+L4XTZwY0/iCX3pbYxGUwB6kfrkvz1
L6bnKjtx5A1SSw4Qc3U4SylpLjQk0EVgY7wkyZ52edQFGEMcVaT0kGy1Yf2R
TltEh8W/3rhL71n7gqvKZVVTJaz1VqS2V3XF5r1zlVCilISoy7XGaLrYcvRP
uFwcLZl4qjSXsStcTPn15xc1WvNg/HyzlKSNYvwIu+w/xuqSvPYv5rz24Mgb
JJYscOTIQwWXpmYmjS4CG2MkSbjIsC+pD12AIcAx7leofekLYZcFw9ZBH1qL
VnZy6lXW9PCB5kHmdZSeNpAvSUrThKr5SrQaE7VsZYddjpZMPNU5F0mmBsoy
fvcOl2L+sYwfiwztP8bpkjz3L5L30cpyZNfCB4u5PEvpPr5IqssGX21U4rCr
9TPuOzr6+OYheKql3/ww1E6G75/AGw6/e0CZPpnrKewap0oNGW23ANWYP3Hi
enqybS2u3sk8DF0KlNIadTnVGFkX9pV9ECgXJ0smn+qeC+l6dAoyfqlZKq5i
qLGIxp9P2JWx+jG6JN/9iyDsKs2R30tPryWBiyUbKnjdYTK6LmsENqZJInDk
SCNYQEYf35ieTunCK0OacN/tuqq8yfsXT5SGKWlNtA44fH1e/XkFRR+3etXR
uJxFebXuZ0rBTbfo/csaBUjZR13sFYYT5hrj6MLI1B9hcnGwZEbBPOTylqXF
EiyUYvwOZqm4kPnNm1jGn1HYlbH6Ebok3/0Lf3xbnCOvYViywMVSDhX8hV0p
dFkhsDFdEoEjex7BIuxyxhDgGD7Cpf1Jtv6QQ7v9+PjHZ/3uTavHympvqqfV
tNq9j15nalpyedSlTqO/nvURC71Q9fjCJrXYhjeZbC85Ld510PTdxUlJEUJW
Y1xd3stFNkW7Lj5y4ejimpvDKFqW1D6624nxu5nlCkN3HdH4BUnE/mKiCPUj
dEkO/YsmK9b4tkRHfiserediu1jEoYIC2+g+c122JfX2BFbgyF5HsIi63DFF
OM9QSRkpdesFNUsJNR/16lcYfnsIujZh1zBZ8fb4uH9w/DlPbqi8ab0tJmXR
snodu6KFH99EVjZWljXSgk/GK7PQrugQvjmhTKF7qXpVEksFZy4lLbXqLF6N
+XlvhpqeoIuHXJi6uOUWNewaPl9iSbMH42ebZTNUJq/pi2v8giRyfzGRvfrL
38N1SezW0qF7fbtUsY68KZ/t/HCvc72VhSWlpLlYnZCxLq975C7jsyYRODJv
BOuiCyBgjnF+v+9/uq90zQHT49H/yfjYaoixXp/2+vX0VtdAu/amv9rrsHB3
9p3LYrGuP28ae5/5vNq4JnbcmKbrHOYzhs+K2KZMmnrdqQyb9fIeMehOH/LX
zV0Z5jD6j0is7mX4rgS1v9Lfcv5Svt0SaZ6HVWNiXTYlY4QoNl3cc9lJ2NXU
9VKYce9s+x66OzB+kVmOX9Tsv+w0t2HzHxVVEdn4BUkc/MVE5uovEgXskqbf
ef2LpHvdmyOvCmg+X+BisYYK7OZikVF+ughsTGiWAkdmJZHrAihYw5zH7893
97Wukfv3z8MeQD2eaeZE9/uP5vPKEtqtN/UOdT6dJtc4VV+XZvmrr2fHXWM/
u2ClmQxYnl8vE3RJls2RMeEyne3blHPp3tbVb+/LuvLe9NrR6nuZrz1OCQUy
tQaFSLm4JXKbQ68xmS62VNoWlaKLcy49suUZBEt2LRg5l65zWrhiRXTGXRi/
vLloGE1fNOOP4y90Mld/kypQl7TIgN2/8LrXHTky15IFLhZ1qMBpLuY0Geoi
sTGhWbYiR2YmkegCSHgLh2LRKrzJcoTcFxRomNtFY1sFKWND0wU4AePfDcH8
BeoXABw5T6ALKJnUURSbFt5UAuZvvsxAysgQdQEuwPh3Qzh/gfr5A0fOE+gC
iiZ1FMWmhTeVwNAuWgcrkDIyRF2ACzD+3RDOX6B+/sCR8wS6gKJJHUWxaeFN
JTB+7sN2GqSMDFEX4AKMfzeE8xeonz9w5DyBLqBoUkdRbFp4046AlOCwwPiP
DNTfDZAyT6ALyJPUURSbFt60IyAlOCww/iMD9XcDpMwT6ALyJHUUxaaFN+0I
SAkOC4z/yED93QAp8wS6gDxJHUWxGYr9dBD6kbaGgRlICQ4LjP/IQP3dACnz
BLqADEkdRbFJXWEAAAAAAAAAwCN1FMVmKDYmMSKASgaADvzlyED93QApI4BK
BocldRTFpsWS3SigkgGgA385MlB/N0DKCKCSwZFJHUWxaeGzUUAlA0AH/nJk
oP5ugJQRQCWDI5M6imLTwmejgEoGgA785chA/d0AKSOASgZHJnUUxaaFz0YB
lQwAHfjLkYH6uwFSRgCVDI6MNcx5/P583//M3L9/Hg9CdPQY091/KGczaBU+
e72cT6ePkVP1eWlC+GxTn6tqyqWqznVjOLk+f+g4196SbArY1LdFET8sRTST
eSU3t+rDSHXT33tfT68zCfXET8G4lx5n9Vk04w2ZaslfZpNWhNzEBbMZv5PB
EMjcXxYJWJYsNUuBi60FfCa52dIIkgSiFPUXSfmdRUgXy0f9RFKymz5Bl+RU
YzsYXbj2+897vjX2WqbmIvWXuEMFEABL8PTTR06/c+j0DKbMsVQXbt2XYVrw
sOv6VX2czpfr9M/r7em+p6/Gr892LrJwoKZ3GUMD2bkGcyAnSLJMXA3NQj21
C8PlZFdrs69kY/3319HV5NDYVXOHM3Ynhia4r9vuhCnFWNnGRjuCwQjobrZa
9iMRwq7hzm7m+3MqGMX45QZDI3N/GeBbssgs2S42lKt66TeNXSrtOEKQJCBF
qD8j6CxCulhe6keXUtL0SRzZocb2MLrg9/ujPb9O6ISy6MPJRe4vkeZLQShM
Ec7vtzJs6mOxb1U09fjuAq37988zUHs8dOndaNc++3TYj/Nl80i6c9vq6+rP
Zzv/eGudjGO1mGHX4L4uk08Kcq/krrY0HYZJmOasnhN6pmHFd0PzetZVeRSD
4dLfezfF2fWeTaTWux4r3JSbS8HIxi80GCq5+4vQkgVGwnYxbR615kqiJEHJ
X/3lKczOIqyL5aZ+XCklTZ/AkR1qbB+jC3ajpKuyvjp0rSUzF2GXhLCreAwB
Th9d/aqiK+0va8KHXfXnZlZknj/pfrhd/fis1swbvf3HC7vIc5w8SqhkNUOL
xcyl/0nRBOoTNMqBjzmRX4NxJEaOrxECIzfGqV6M32QwZLL3F5ElC4yE7WIm
DCXzmMSd7NUfEfhLQhdLon5sKVdQ3E3myFrMafY+utA2StpqkfT77KbP6C8I
u4rHHDRpgitiPBU87Lp09vf15rCvn64+fNbwPF3vALHCrmAuWEIlq7HME+mm
qpTzS8YHZ7r2N5bBOBI+x+W0bIiwy9MdeHjWlb+/iCxZUMVsFzNSXNiVqfr2
34w5JXKxtGFXHCnXEKpb6MhaTEn2NLrgNUqGp4CWJ4demj7j2Qi7iscQ4Oif
aeUSdnVLgqf5EMVD6mkWxdFnbc2c1gXD93Ci6S0aJVSy7mzjSj5Tw8iqS61e
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
A/V3A6SMACoZHJn/DxFKJPE=
     "], {{0, 555}, {1149, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{575.6410256410263, Automatic},
   ImageSizeRaw->{1149, 555},
   PlotRange->{{0, 1149}, {0, 555}}], ";"}]], "Input",
 CellChangeTimes->{3.800439646756962*^9}],

Cell["secondo picco errore", "Text",
 CellChangeTimes->{{3.800257813408863*^9, 3.800257827625352*^9}, {
  3.8002579258622923`*^9, 3.8002579268655825`*^9}}],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
znREM/+jxiGaul7Gw3GTZfOXBvkmKzgTm6Zeh+yhMJP5O+jqY0D2Ug4XUvVX
Ph8xaMkM8JYMhdthJH1s3PZrfS31zdgt57rbpDSY5pAGDlepewxofHwaqcPs
xl/Wl0TsMbxSBD1Z3PmXF8PITIT+YmK/6itty+tj7xrl6MirCrJu//LU50wV
XL1SlgXmo4toCicYX9gmsSoGAqFP6wxsk0Lb8foFnq+876f/VOB86m5VaYjP
xy+89Xw6TX53qr4vzfJXXw/uu4g1+3eleRSzOLz3nGVAWDnIZ31ui4OrivJx
dr6J7U0Ms8OO36WbjjUXNwdD0znLkHIeyRaXblByU9RHk+vmqcwOIzNpJSYU
KWec+phsOQ2hka3vIBlnExE6zK785X1JnJvNzFKCd35pT+b5C51dqz/bMNyS
X0qMPpahIzvEZJn6vKkCv5HnytHVz1EXyaxvuBj+hIRnErFiIAS+Eq48aRWu
avkLuakv0DAHXWMghJQFQJMSOAF/2Q3B/AXqFwAcOU+gCzgSqRO1sLRw1RIw
f0JoBlLmD1FK4AL8ZTeE8xeonz9w5DyBLuBQpE7UwtLCVUtgCLrWmRCkzB+i
lMAF+MtuCOcvUD9/4Mh5Al3AoUidqIWlhauWwPhxNtthkDJ/iFICF+AvuyGc
v0D9/IEj5wl0AYcidaIWlhauuiMgJQB04C9HBurvBkiZJ9AF7IPUiVpYWrjq
joCUANCBvxwZqL8bIGWeQBewD1InamFp4ao7AlICQAf+cmSg/m6AlHkCXcA+
SJ2ohWW4xpf30f/SygHMQEoA6MBfjgzU3w2QMk+gC9gBqRO1sKRuXQAAAAAA
AADIjtSJWliGa8Qdm90AKQGgA3/ZDZByN0DKPIEu4JikTtTC0mL99o6AlADQ
gb/sBki5GyBlnkAXcFhSJ2phaeHdOwJSAkAH/rIbIOVugJR5Al3AYUmdqIWl
hXfvCEgJAB34y26AlLsBUuYJdAGHJXWiFpYW3r0jICUAdOAvuwFS7gZImSfQ
BRwWSx71fP7+PO5//95/npS0azx65H5//JLMJuuf0ZZYmp1W4d3Xy/l0+ho5
VX8uTQjvbupzVU2lVNW5bhi2t9Gyulms2KU09e08G1Dr5VjKV3W+NYzL11KK
lG6XT1d/tugLXMiqqmJ9/tJxrr2V4kAzNhv5sp0KIzZyHH/pjfxffin+sjAl
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
WhaotyhCl/7rOuflN4qGD+7oTMYNudYm9a0i3x2Mkgb6ltJHxfJLA/nqv6Su
l7OUcX95+/bnu/GX3qheT9eGVtCaxXAxvi5iR3bwFxNQ30SQNJB9LW2+jryq
ICsLJqrP95fxQ/H9lxjnBp7/UfdmYkCvjK2LaLCINiTN5SELPALaxM3ENim0
HW94ze+V9z3uC/P7Kiv0ngb2Dn4+nSZXPVXfl2b5q69n/V3EmkNCpbnvpbT7
eP3BUKKwFMFeZxyT+RpMgbAUXZrV94Pfmy1bLJYmq7i9xfa6i6INBSbrJvAs
pZ+KyZbT0PxFXDGe+q8ZyfvgqqJ+bHpX/jJY1UsPsLVDaBcT68IrpTdh+Qsd
qK+sXVDf519Ljo7scPlc9fn+0khcLJBXxnYxYVCKMyRNZbltigtKwVfClSet
wrstfyH3AT4Gc9A1BhDoUgA0KYET8JfdEMxfoH4BwJHzBLoAYCR1ohaWFt4d
HfNHl2agS/4QpQQuwF92Qzh/gfr5A0fOE+gCgJnUiVpYWnh3dIaga50JQZf8
IUoJXIC/7IZw/gL18weOnCfQBQAzqRO1sLTw7uj0Ude+KAq65A9RSuAC/GU3
hPMXqJ8/cOQ8gS4AmEmdqIWlhXfnCnQBgA785chA/d0AKfMEuoDDkjpRC0sL
784V6AIAHfjLkYH6uwFS5gl0AYcldaIWlhbenSvQBQA68JcjA/V3A6TME+gC
DkvqRC0swzW+HJb+l1aOQwFdAKADfzkyUH83QMo8gS7gmKRO1MKSunUBAAAA
AAAAIDtSJ2phGa4RN3l2A6QEgA785chA/d0AKfMEuoAdkDpRC0uLJd87AlIC
QAf+cmSg/m6AlHkCXcA+SJ2ohaWFq+4ISAkAHfjLkYH6uwFS5gl0AfsgdaIW
lhauuiMgJQB04C9HBurvBkiZJ9AF7IPUiVpYWrjqjoCUANCBvxwZqL8bIGWe
QBewDyx51PP5+/O4//17/3lS0q7x6JH7/fFLMluWtTBnWStpFa56vZxPp6+R
U/Xn0oRw1aY+V9VUSlWd64Zhexstq5vRqqlv57kMaiEOFWv6Ahclbozneuuw
XI+NUqRc6/JqpltjMqnP2gY7158n99LIqaXUVinEmVWFEV3MqWK2Rn4fyOsw
VErxl4UptcWEJkwpBQFWFJODsGP1Nwe+SrlRlHEK4zT1JRWzk0hKQehjNTJv
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
     "], {{0, 588}, {1197, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{632.0512820512823, Automatic},
   ImageSizeRaw->{1197, 588},
   PlotRange->{{0, 1197}, {0, 588}}], ";"}]], "Input",
 CellChangeTimes->{3.800439653027645*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3D elements", "Section",
 CellChangeTimes->{{3.7993046810598145`*^9, 3.799304696634295*^9}, 
   3.799554263858622*^9, {3.799586669531086*^9, 3.7995866722161613`*^9}, {
   3.799604515692666*^9, 3.799604528253003*^9}, 3.799931572837556*^9, 
   3.800264474222968*^9}],

Cell[CellGroupData[{

Cell["Plane", "Subsection",
 CellChangeTimes->{{3.7584448477974606`*^9, 3.758444857768345*^9}, {
   3.7585176308414464`*^9, 3.758517630842448*^9}, 3.758518055478194*^9, {
   3.7995544121065254`*^9, 3.7995544143422117`*^9}, {3.799564267423721*^9, 
   3.7995642687003417`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"grid", " ", "representing", " ", "floor"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7995544948823767`*^9, 3.799554529549035*^9}, {
  3.799605021247182*^9, 3.7996050299563885`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"passo", " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"xmax3d", " ", "-", " ", "xmin3d"}], ")"}], "/", "4"}]}], ";"}],
   " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"grid", " ", "cell", " ", "size"}], ",", " ", 
    RowBox[{
    "scaled", " ", "in", " ", "order", " ", "to", " ", "always", " ", "hav", 
     " ", "ethe", " ", "same", " ", "number", " ", "of", " ", "cells"}]}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7584446844575644`*^9, 3.7584447101938996`*^9}, {
   3.7584492950458326`*^9, 3.7584492962373123`*^9}, {3.7584517280022936`*^9, 
   3.7584517293694887`*^9}, 3.758452882721119*^9, {3.758452947544653*^9, 
   3.7584529500726852`*^9}, {3.758453417897399*^9, 3.758453418175814*^9}, {
   3.7584538849673314`*^9, 3.7584538853599215`*^9}, {3.7584539379131575`*^9, 
   3.7584539490948534`*^9}, 3.7585175959122066`*^9, {3.7585176308434596`*^9, 
   3.7585176308444514`*^9}, {3.7995544296280746`*^9, 3.799554449433928*^9}, {
   3.7996050390454545`*^9, 3.7996050949846444`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pianopts", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "y", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "x", ",", " ", "xmin3d", ",", " ", "xmax3d", ",", " ", "passo"}], "}"}],
      ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "y", ",", " ", "ymin3d", ",", " ", "ymax3d", ",", " ", "passo"}], 
      "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584517173948603`*^9, 3.758451736337632*^9}, 
   3.7585175959122066`*^9, {3.7585176308464546`*^9, 3.7585176308474655`*^9}, {
   3.7995544355462923`*^9, 3.799554436090897*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "graphic", " ", "representation", " ", "of", " ", "the", " ", "defined", 
   " ", "grid"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799605107229374*^9, 3.7996051339497194`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"piano", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{"Graphics3D", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"LightGray", ",", " ", 
            RowBox[{"Line", "[", "#", "]"}]}], "}"}], " ", "&"}], ",", " ", 
         "pianopts"}], "]"}], ",", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Gray", ",", " ", 
            RowBox[{"Line", "[", "#", "]"}]}], "}"}], " ", "&"}], ",", " ", 
         RowBox[{"Transpose", "[", "pianopts", "]"}]}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.75845183820993*^9, 3.7584518427129583`*^9}, {
   3.7584532312645607`*^9, 3.758453231852436*^9}, 3.7585175959122066`*^9, {
   3.758517630849468*^9, 3.758517630849468*^9}, {3.799554441389098*^9, 
   3.7995544422715807`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Base", "Subsection",
 CellChangeTimes->{{3.799605657930059*^9, 3.7996056749619045`*^9}, 
   3.799605731042144*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"sphere", " ", "representing", " ", "L5"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799605682144755*^9, 3.7996057065110683`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rbase", " ", "=", " ", "0.08"}], ";"}]], "Input",
 CellChangeTimes->{{3.7996058165351706`*^9, 3.7996058253416543`*^9}, 
   3.7996059881553683`*^9, {3.7996060262169495`*^9, 3.799606027250187*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"base", " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Gray", ",", " ", 
      RowBox[{"Opacity", "[", "0.9", "]"}], ",", " ", 
      RowBox[{"Specularity", "[", 
       RowBox[{"White", ",", " ", "30"}], "]"}], ",", " ", 
      RowBox[{"Sphere", "[", 
       RowBox[{"L5Pos", ",", " ", "rbase"}], "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7996057939614596`*^9, 3.7996058951325936`*^9}, {
  3.7996059896664653`*^9, 3.7996059905383673`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Robot", "Subsection",
 CellChangeTimes->{{3.758444861892532*^9, 3.7584448692895813`*^9}, {
   3.7585176308755302`*^9, 3.758517630876523*^9}, 3.7585180793097944`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Position", " ", "and", " ", "orientation", " ", "of", " ", "each", " ", 
   RowBox[{"joints", "'"}], " ", "node", " ", "of", " ", "the", " ", "ARM"}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799554816230855*^9, 3.7995548377576766`*^9}, {
  3.7996051488393087`*^9, 3.799605184974879*^9}}],

Cell[CellGroupData[{

Cell["Points evaluation", "Subsubsection",
 CellChangeTimes->{{3.758446247865548*^9, 3.758446258521407*^9}, {
   3.758517630877533*^9, 3.758517630878525*^9}, 3.758518083491593*^9, {
   3.7995552555332527`*^9, 3.7995552599581165`*^9}, {3.799557047244134*^9, 
   3.7995570497634563`*^9}, {3.7996052047719774`*^9, 3.7996052114409285`*^9}, 
   3.8002646474076567`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg1l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg1l", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.7995565410114927`*^9}, {
   3.799556671211336*^9, 3.799556671260236*^9}, {3.799557081497717*^9, 
   3.7995570864596148`*^9}, 3.799560492029065*^9, 3.7995776487219467`*^9, 
   3.7995777221374846`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg2l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg2l", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.7995565448684535`*^9}, {
   3.799556685195239*^9, 3.7995566856639504`*^9}, {3.799557090139621*^9, 
   3.7995570960341525`*^9}, 3.799560493551958*^9, 3.7995776511104326`*^9, 
   3.7995777247956896`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg3l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg3l", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.7995565673965254`*^9}, {
   3.7995566899731703`*^9, 3.7995566996699953`*^9}, {3.7995570971481404`*^9, 
   3.799557110260045*^9}, 3.799560495349944*^9, 3.7995776536633058`*^9, 
   3.7995777278213577`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg4l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg4l", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.7995565718991165`*^9}, {
   3.7995566950520897`*^9, 3.799556695276327*^9}, {3.799557098636307*^9, 
   3.799557112238226*^9}, 3.799560496838561*^9, 3.7995776563335094`*^9, 
   3.799577730760785*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg5l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg5l", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.799556581565198*^9}, {
   3.7995567081012883`*^9, 3.7995567161973715`*^9}, {3.7995570997544465`*^9, 
   3.799557114387044*^9}, 3.799560498771531*^9, 3.799577658229765*^9, 
   3.7995777331660147`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg6l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg6l", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.799556589897834*^9}, 
   3.799556717612341*^9, {3.799556747838355*^9, 3.7995567492761426`*^9}, {
   3.799557101037362*^9, 3.7995571159849963`*^9}, 3.7995605005797153`*^9, 
   3.7995776606610794`*^9, 3.7995777356712723`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg7l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg7l", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799554991959058*^9, 3.799554994062825*^9}, 
   3.7995550787365417`*^9, {3.7995554495409145`*^9, 3.7995554570830665`*^9}, {
   3.7995565967351284`*^9, 3.7995566171654387`*^9}, {3.7995567195720625`*^9, 
   3.799556721225299*^9}, {3.7995567540917625`*^9, 3.79955675560159*^9}, {
   3.799557102061288*^9, 3.79955711785483*^9}, 3.799560502307918*^9, 
   3.7995776626149645`*^9, 3.7995777375493026`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg8l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg8l", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995549963258677`*^9, 3.7995549976060557`*^9}, 
   3.7995550821907005`*^9, {3.799555462468993*^9, 3.799555467926289*^9}, {
   3.7995566202532516`*^9, 3.7995566492262435`*^9}, {3.7995567237260084`*^9, 
   3.799556727850706*^9}, {3.799556760956691*^9, 3.799556761769518*^9}, {
   3.799557104341209*^9, 3.799557120411436*^9}, 3.799560504431533*^9, 
   3.799577665175762*^9, 3.7995777397758255`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg9l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg9l", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799554999873102*^9, 3.799555003002037*^9}, 
   3.7995550853181353`*^9, {3.799555474222129*^9, 3.7995554791602144`*^9}, {
   3.799556644787017*^9, 3.79955665377149*^9}, {3.799556732028022*^9, 
   3.799556734134289*^9}, {3.7995567688698463`*^9, 3.799556769437339*^9}, {
   3.7995571059503813`*^9, 3.7995571217094707`*^9}, 3.799560507898234*^9, 
   3.7995776671903577`*^9, 3.7995777422319546`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg10l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg10l", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995550051530223`*^9, 3.7995550084579816`*^9}, 
   3.7995550874084764`*^9, {3.7995554846984434`*^9, 3.7995554910566845`*^9}, {
   3.7995566582029877`*^9, 3.79955666132306*^9}, {3.799556736318052*^9, 
   3.799556739483471*^9}, {3.7995567735893188`*^9, 3.799556779484175*^9}, {
   3.7995571074399104`*^9, 3.799557124814324*^9}, 3.7995605131920877`*^9, 
   3.799577670911141*^9, 3.7995777450874343`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"giuntil", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"{", "\n", "   ", 
    RowBox[{"L5Pos", ",", "\n", "   ", 
     RowBox[{"dg1l", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg2l", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg3l", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg4l", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg5l", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg6l", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg7l", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg8l", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg9l", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg10l", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}]}], "   ", "\[IndentingNewLine]", "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7266847189129505`*^9, 3.7266847442080164`*^9}, 
   3.726684883508539*^9, 3.7266849404597073`*^9, {3.726687033640834*^9, 
   3.72668714196062*^9}, {3.7268232711901693`*^9, 3.7268232712001743`*^9}, 
   3.7269299954040565`*^9, {3.7273759569210653`*^9, 3.7273759743165703`*^9}, {
   3.7274259089096193`*^9, 3.7274259098192263`*^9}, {3.758444920013405*^9, 
   3.7584449288456044`*^9}, 3.7584465676851788`*^9, {3.758446844547414*^9, 
   3.758446869258989*^9}, {3.758446991947087*^9, 3.7584470205952835`*^9}, {
   3.758447058610038*^9, 3.7584470691545696`*^9}, {3.7584471225465937`*^9, 
   3.7584471547716303`*^9}, 3.7584472067868776`*^9, {3.7584483481362257`*^9, 
   3.758448416080258*^9}, {3.758449561751462*^9, 3.758449563152675*^9}, 
   3.758517595917224*^9, {3.7585176308825407`*^9, 3.758517630883542*^9}, 
   3.7995549648837996`*^9, {3.7995567933209324`*^9, 3.7995569855554695`*^9}, {
   3.7995570634787617`*^9, 3.799557069049429*^9}, {3.799557129442271*^9, 
   3.7995571476687164`*^9}, 3.7995589845577188`*^9, {3.7995776770936127`*^9, 
   3.799577703152626*^9}, 3.7995777473423786`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Tube", "Subsubsection",
 CellChangeTimes->{{3.7584505491958447`*^9, 3.7584505539578123`*^9}, {
   3.758517630884544*^9, 3.7585176308855357`*^9}, 3.7585181048915405`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Tube", " ", "insertion", " ", "between", " ", "two", " ", "consecutive", 
   " ", "joints", " ", "in", " ", "order", " ", "to", " ", "represent", " ", 
   "the", " ", "link"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7995548425748663`*^9, 3.7995548693294554`*^9}, {
  3.799605250121704*^9, 3.799605348475289*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rrobot", " ", "=", " ", "0.05"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"human", " ", "like", " ", "arm", " ", "dimension"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.7584484414775977`*^9, 3.758448472022011*^9}, 
   3.7584490841496067`*^9, {3.7584494875167913`*^9, 3.758449516068557*^9}, {
   3.758449726725319*^9, 3.7584497268284807`*^9}, {3.7584534676166863`*^9, 
   3.7584534723908005`*^9}, 3.758453755991476*^9, 3.758517595917224*^9, {
   3.7585176308875384`*^9, 3.7585176308875384`*^9}, {3.7995573812945585`*^9, 
   3.7995573823916245`*^9}, {3.7995575064180517`*^9, 3.7995575333089833`*^9}, 
   3.799562017956095*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"robotl", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Cyan", ",", " ", 
      RowBox[{"Opacity", "[", "0.6", "]"}], ",", " ", 
      RowBox[{"Specularity", "[", 
       RowBox[{"White", ",", " ", "60"}], "]"}], ",", " ", 
      RowBox[{"CapForm", "[", "\"\<Butt\>\"", "]"}], ",", " ", 
      RowBox[{"Tube", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"giuntil", "[", 
          RowBox[{"{", 
           RowBox[{
           "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", 
            "q5", ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", 
            "q9", ",", " ", "q10"}], "}"}], "]"}], "}"}], ",", " ", 
        "rrobot"}], "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388387217459628*^9, 3.3883873142252536`*^9}, {
   3.3883873635065036`*^9, 3.388387395709628*^9}, {3.726603520596736*^9, 
   3.7266036163393707`*^9}, {3.726659704650152*^9, 3.726659715492388*^9}, {
   3.726668688970785*^9, 3.726668792453329*^9}, {3.7266745165912733`*^9, 
   3.72667451744084*^9}, {3.726685852337557*^9, 3.726685861840593*^9}, {
   3.7266863921225605`*^9, 3.726686393058156*^9}, {3.7266901939759064`*^9, 
   3.726690218520363*^9}, {3.7266905685987625`*^9, 3.726690589423765*^9}, {
   3.726830550951338*^9, 3.726830572289466*^9}, {3.7268306046048627`*^9, 
   3.726830607089507*^9}, {3.726830707060689*^9, 3.726830707800178*^9}, 
   3.726929994857152*^9, 3.758446571608865*^9, {3.758448390703678*^9, 
   3.7584484760148525`*^9}, {3.7584495947176375`*^9, 3.7584496055259*^9}, {
   3.75845045193303*^9, 3.7584504655404854`*^9}, {3.758451768682719*^9, 
   3.7584517734569283`*^9}, {3.758451846859063*^9, 3.7584518528825336`*^9}, {
   3.758451902946669*^9, 3.758451944402688*^9}, {3.75845201765088*^9, 
   3.7584521016889935`*^9}, {3.758452344571225*^9, 3.7584523454221473`*^9}, 
   3.7584545584158487`*^9, 3.7585175959182253`*^9, {3.7585176308895416`*^9, 
   3.7585176308895416`*^9}, {3.7995572087370386`*^9, 3.799557264947121*^9}, {
   3.7995788177858496`*^9, 3.799578823313649*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Reference frames", "Subsection",
 CellChangeTimes->{{3.758454061371934*^9, 3.758454073822502*^9}, {
   3.758517630891545*^9, 3.758517630891545*^9}, 3.758518114296491*^9, {
   3.7996043520019464`*^9, 3.7996043606267147`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "three", " ", "different", " ", "reference", " ", "frames", " ", "will", 
    " ", "be", " ", 
    RowBox[{"plotted", ":", " ", "Base"}]}], ",", " ", 
   RowBox[{
    RowBox[{"Right", " ", "end"}], "-", 
    RowBox[{"effector", " ", "and", " ", "left", " ", "end"}], "-", 
    "effector"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7995577966021204`*^9, 3.7995578514236774`*^9}, {
  3.799557881720303*^9, 3.7995579174761887`*^9}, {3.7995579650326767`*^9, 
  3.7995579700338974`*^9}, {3.7996053658902574`*^9, 3.7996054235033293`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Reference", " ", "frame", " ", "representation"}], ",", " ", 
   RowBox[{"drawed", " ", "using", " ", 
    RowBox[{"(", 
     RowBox[{"0", ",", "0", ",", "0"}], ")"}], " ", "as", " ", "origin", " ", 
    "and", " ", 
    RowBox[{"(", 
     RowBox[{"x", ",", " ", "y", ",", " ", "z"}], ")"}], " ", "as", " ", 
    "axis", " ", 
    RowBox[{"directions", "."}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7995581676460257`*^9, 3.79955822512317*^9}, {
  3.799558280287505*^9, 3.799558332033263*^9}, {3.7996054392500286`*^9, 
  3.7996054770476027`*^9}, {3.7996055459101095`*^9, 3.7996056049993773`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"lf", " ", "=", " ", "0.25"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"reference", " ", "frame", " ", "axis", " ", "length"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"e1d", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"lf", ",", " ", "0", ",", " ", "0", ",", " ", "1"}], "}"}]}], ";",
   " ", 
  RowBox[{"e2d", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "lf", ",", " ", "0", ",", " ", "1"}], "}"}]}], ";",
   " ", 
  RowBox[{"e3d", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "0", ",", " ", "lf", ",", " ", "1"}], "}"}]}], ";",
   " ", 
  RowBox[{"Orig", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "0", ",", " ", "0", ",", " ", "1"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Ox", " ", "=", " ", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"#", ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"Orig", ",", " ", "e1d"}], "}"}], "]"}]}], ",", " ", 
       RowBox[{"-", "1"}]}], "]"}], "]"}], " ", "&"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Oy", " ", "=", " ", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"#", ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"Orig", ",", " ", "e2d"}], "}"}], "]"}]}], ",", " ", 
       RowBox[{"-", "1"}]}], "]"}], "]"}], " ", "&"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Oz", " ", "=", " ", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"#", ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"Orig", ",", " ", "e3d"}], "}"}], "]"}]}], ",", " ", 
       RowBox[{"-", "1"}]}], "]"}], "]"}], " ", "&"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Otot", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Ox", "[", "#", "]"}], ",", " ", 
      RowBox[{"Oy", "[", "#", "]"}], ",", " ", 
      RowBox[{"Oz", "[", "#", "]"}]}], "}"}], " ", "&"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7584540756592607`*^9, 3.7584541104512215`*^9, {3.75845417491347*^9, 
   3.758454175064698*^9}, {3.758454225591584*^9, 3.7584542412960377`*^9}, {
   3.7584543416649823`*^9, 3.7584543458242054`*^9}, {3.7584543786572523`*^9, 
   3.75845438956558*^9}, {3.758514291442034*^9, 3.758514291495659*^9}, 
   3.7585175959182253`*^9, {3.7585176308935475`*^9, 3.758517630894559*^9}, {
   3.7996036507707477`*^9, 3.79960365099415*^9}, {3.799605623698656*^9, 
   3.7996056353964677`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "\"\<Reference frame\>\"", " ", "representation", " ", "draws", " ", 
    RowBox[{"over", ":", " ", "base"}]}], ",", " ", 
   RowBox[{
    RowBox[{"right", " ", "end"}], "-", 
    RowBox[{"effector", " ", "and", " ", "left", " ", "end"}], "-", 
    "effector"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799558230450033*^9, 3.7995582724842033`*^9}, {
  3.799606173181046*^9, 3.7996062422515087`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rifg", " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", " ", "Thick", ",", " ", 
      RowBox[{"Line", " ", "/@", " ", 
       RowBox[{"Otot", "@", "Tg"}]}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758454146435915*^9, 3.758454153680745*^9}, {
   3.7584542206952753`*^9, 3.758454222366768*^9}, 3.758517595919227*^9, {
   3.758517630896552*^9, 3.758517630896552*^9}, 3.7995583471550026`*^9, {
   3.7995583793370485`*^9, 3.7995583807166047`*^9}, 3.7995592341587534`*^9, {
   3.7995593885140667`*^9, 3.799559389382522*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rifEEl", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", ":=", "  ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", "Thick", ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"Ox", "@", 
          RowBox[{"TgEEl", "[", 
           RowBox[{"{", 
            RowBox[{
            "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", 
             "q5", ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", 
             "q9", ",", " ", "q10"}], "}"}], "]"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", " ", "Thick", ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"Oy", "@", 
          RowBox[{"TgEEl", "[", 
           RowBox[{"{", 
            RowBox[{
            "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", 
             "q5", ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", 
             "q9", ",", " ", "q10"}], "}"}], "]"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", "Thick", ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"Oz", "@", 
          RowBox[{"TgEEl", "[", 
           RowBox[{"{", 
            RowBox[{
            "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", 
             "q5", ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", 
             "q9", ",", " ", "q10"}], "}"}], "]"}]}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8000835457777853`*^9, 3.800083554025137*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"x", ":", " ", "red"}], ",", " ", 
   RowBox[{"y", ":", " ", "green"}], ",", " ", 
   RowBox[{"z", ":", " ", "blue"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7996062991155577`*^9, 3.7996063653108654`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"riftimeEEl", "[", "time_", "]"}], " ", ":=", "  ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", "Thick", ",", " ", 
        RowBox[{"Line", " ", "[", " ", 
         RowBox[{"Ox", "@", 
          RowBox[{"TEEl", "[", "time", "]"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", " ", "Thick", ",", " ", 
        RowBox[{"Line", " ", "[", " ", 
         RowBox[{"Oy", "@", 
          RowBox[{"TEEl", "[", "time", "]"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", "Thick", ",", " ", 
        RowBox[{"Line", " ", "[", " ", 
         RowBox[{"Oz", "@", 
          RowBox[{"TEEl", "[", "time", "]"}]}], "]"}]}], "}"}]}], " ", "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995983018200836`*^9, 3.7995983530023623`*^9}, 
   3.7995983885175257`*^9, {3.799603467369956*^9, 3.7996035074234543`*^9}, {
   3.79960357907696*^9, 3.7996035834107976`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assiemi", "Subsection",
 CellChangeTimes->{{3.7584540466319327`*^9, 3.7584540564275503`*^9}, {
   3.758517630909581*^9, 3.758517630909581*^9}, 3.7585181411124277`*^9, 
   3.7995789998624763`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Put", " ", "all", " ", "defined", " ", "elements", " ", "together"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.799606406005705*^9, 3.7996064225276966`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"assiemel", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"base", ",", "rifg", ",", " ", 
     RowBox[{"rifEEl", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", " ", "piano", ",", " ", 
     RowBox[{"robotl", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.726668849273992*^9, 3.726668893109749*^9}, {
   3.7266689683834524`*^9, 3.726668970437522*^9}, {3.7266710865060577`*^9, 
   3.726671144960312*^9}, {3.726671462042482*^9, 3.726671466184244*^9}, {
   3.726673327873646*^9, 3.726673344795654*^9}, {3.7266733750708475`*^9, 
   3.7266733782829914`*^9}, {3.726673419669597*^9, 3.726673523753719*^9}, 
   3.7266735596886907`*^9, {3.7266736325943213`*^9, 3.726673671999606*^9}, {
   3.726674698332423*^9, 3.726674711439005*^9}, {3.7266752410774755`*^9, 
   3.7266752412450886`*^9}, {3.726675400366004*^9, 3.726675410987362*^9}, {
   3.726675538512786*^9, 3.726675562870107*^9}, {3.7266757251446867`*^9, 
   3.726675737221407*^9}, {3.72667962599102*^9, 3.726679626148626*^9}, 
   3.7266815179301023`*^9, {3.726681547954712*^9, 3.726681548139306*^9}, 
   3.7266815805046234`*^9, {3.7266816183076706`*^9, 3.7266816394174185`*^9}, {
   3.726681761461356*^9, 3.7266818009632635`*^9}, {3.7266828704116745`*^9, 
   3.72668287875696*^9}, {3.7266831172419806`*^9, 3.7266831199943943`*^9}, {
   3.7266839275827093`*^9, 3.7266839278218327`*^9}, {3.7266839735172997`*^9, 
   3.7266839736753826`*^9}, {3.726684027609081*^9, 3.726684028651618*^9}, {
   3.726689396547146*^9, 3.7266893981191783`*^9}, {3.7266894354917593`*^9, 
   3.726689463720324*^9}, {3.7266901981559563`*^9, 3.726690201384021*^9}, {
   3.7266902360141573`*^9, 3.7266902390222583`*^9}, {3.726690537558139*^9, 
   3.7266905478903875`*^9}, {3.7266905894357643`*^9, 
   3.7266905894357643`*^9}, {3.7266913409657493`*^9, 
   3.7266913494419203`*^9}, {3.7266918944867463`*^9, 3.726691895278776*^9}, {
   3.72669425698475*^9, 3.7266943026162233`*^9}, {3.726766971290201*^9, 
   3.726766974948645*^9}, {3.726922077783863*^9, 3.726922078487333*^9}, {
   3.726922243427335*^9, 3.7269222551541576`*^9}, {3.7584485081590123`*^9, 
   3.758448531677947*^9}, 3.758450262036567*^9, {3.7584528445294437`*^9, 
   3.758452846021093*^9}, {3.75845328284031*^9, 3.7584532846369896`*^9}, 
   3.758453618624933*^9, {3.758453868199692*^9, 3.7584538717549973`*^9}, {
   3.7584541668964834`*^9, 3.7584541685068884`*^9}, {3.758454300839019*^9, 
   3.758454306415342*^9}, 3.7584545125282917`*^9, {3.758454660959011*^9, 
   3.758454697238983*^9}, 3.758455117978707*^9, {3.7584619916617537`*^9, 
   3.7584619934574356`*^9}, 3.7585175959212294`*^9, {3.7585176309115844`*^9, 
   3.758517630912586*^9}, {3.799558505262986*^9, 3.799558533055313*^9}, {
   3.79955858344193*^9, 3.799558611634635*^9}, {3.799558644625424*^9, 
   3.7995586453546486`*^9}, {3.799558695849804*^9, 3.7995587459330416`*^9}, {
   3.799577773566415*^9, 3.799577797581126*^9}, {3.7996059148157506`*^9, 
   3.799605915235671*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Animation and 3D Plots", "Section",
 CellChangeTimes->{{3.7584504746517305`*^9, 3.7584504754715495`*^9}, {
   3.758450651427134*^9, 3.7584506581002417`*^9}, {3.7585176309206*^9, 
   3.75851763092159*^9}, 3.7585181474720097`*^9, {3.7995647031626077`*^9, 
   3.7995647087936797`*^9}, {3.799586643898427*^9, 3.7995866585513306`*^9}, {
   3.7999344494450493`*^9, 3.799934452263769*^9}, {3.80007264619711*^9, 
   3.80007266172479*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"riftimeEEl", "[", "time", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xmin3d", ",", " ", "xmax3d"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"ymin3d", ",", " ", "ymax3d"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"zmin3d", ",", " ", "zmax3d"}], "}"}]}], "}"}]}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Boxed", " ", "->", " ", "False"}], ",", " ", 
     RowBox[{"AxesLabel", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
       "}"}]}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"ViewPoint", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "t0", ",", " ", "\"\<Time\>\""}], "}"}], ",", "t0",
      ",", "tend"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.799598421320098*^9, 3.7995985562119446`*^9}, {
   3.799598596521023*^9, 3.7995986002454357`*^9}, {3.799599272621426*^9, 
   3.7995993431364336`*^9}, 3.7996020403117795`*^9, 3.7996024191982484`*^9, 
   3.7996025364974527`*^9, 3.799602590974831*^9, {3.799602658829427*^9, 
   3.7996026649579344`*^9}, {3.799606617073227*^9, 3.799606643460726*^9}, {
   3.7999006837722692`*^9, 3.7999007228429375`*^9}, {3.7999007568270483`*^9, 
   3.7999007829795017`*^9}, {3.799900998427977*^9, 3.7999010002997746`*^9}, {
   3.800073540576315*^9, 3.800073541559407*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`time$$ = Rational[1, 60], Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`time$$], 
       Rational[1, 60], "Time"}, 
      Rational[1, 60], 3}}, Typeset`size$$ = {774., {322., 333.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`time$1460053$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`time$$ = Rational[1, 60]}, 
      "ControllerVariables" :> {
        Hold[$CellContext`time$$, $CellContext`time$1460053$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        $CellContext`riftimeEEl[$CellContext`time$$], 
        PlotRange -> {{$CellContext`xmin3d, $CellContext`xmax3d}, \
{$CellContext`ymin3d, $CellContext`ymax3d}, {$CellContext`zmin3d, \
$CellContext`zmax3d}}, Boxed -> False, AxesLabel -> {"x", "y", "z"}, 
        ViewPoint -> {1, 1, 1}], "Specifications" :> {{{$CellContext`time$$, 
          Rational[1, 60], "Time"}, 
         Rational[1, 60], 3}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{872., {409., 421.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellOpen->False,
 CellChangeTimes->{3.8000756046991606`*^9, 3.8000772095617046`*^9, 
  3.800077547057002*^9, 3.8000796865447435`*^9, 3.8000805695142508`*^9, 
  3.800082098854006*^9, 3.8002100243243217`*^9, 3.800255579821511*^9, 
  3.800256101210663*^9, 3.8002655762891035`*^9, 3.8004394019704795`*^9, 
  3.8004422134144163`*^9, 3.8019839090127087`*^9, 3.8019839870785475`*^9, 
  3.8019840471811457`*^9, 3.801984447563621*^9, 3.801984981821619*^9, 
  3.8019890025245185`*^9, 3.801989431166792*^9, 3.801989910626303*^9, 
  3.8020015090729895`*^9, 3.8020929176122913`*^9, 3.802093776821447*^9, 
  3.802094701610986*^9, 3.802095334356468*^9, 3.802095904026244*^9, 
  3.802097233512632*^9, 3.80209994564228*^9, 3.80210467210448*^9, 
  3.802109768287159*^9, 3.8021470614428844`*^9, 3.802147584552215*^9, 
  3.8021481745279894`*^9, 3.8021558780608816`*^9, 3.8021571013302913`*^9, 
  3.8021579218315196`*^9, 3.8021586249534993`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"assiemel", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1l", ",", " ", "q2l", ",", " ", "q3l", ",", " ", "q4l", ",", " ", 
        "q5l", ",", " ", "q6l", ",", " ", "q7l", ",", " ", "q8l", ",", " ", 
        "q9l", ",", " ", "q10l"}], "}"}], "]"}], ",", " ", 
     RowBox[{"PlotRange", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", " ", "1.5"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.5"}], ",", " ", "1"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "2"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"Boxed", " ", "->", " ", "False"}], ",", " ", 
     RowBox[{"AxesLabel", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
       "}"}]}]}], 
    RowBox[{"(*", 
     RowBox[{",", 
      RowBox[{"ViewPoint", "\[Rule]", "Right"}]}], "*)"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1l", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "Pi"}], ",", 
     RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q2l", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "Pi"}], ",", 
     RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q3l", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "Pi"}], ",", 
     RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q4l", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "Pi"}], ",", 
     RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q5l", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "Pi"}], ",", 
     RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q6l", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "Pi"}], ",", 
     RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q7l", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "Pi"}], ",", 
     RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q8l", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "Pi"}], ",", 
     RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q9l", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "Pi"}], ",", 
     RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q10l", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "Pi"}], ",", 
     RowBox[{"+", "Pi"}]}], "}"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.799560874833705*^9, 3.7995609652777405`*^9}, {
   3.799561022503049*^9, 3.7995611796320615`*^9}, {3.7995613412320414`*^9, 
   3.7995614170904665`*^9}, 3.7995778699584084`*^9, {3.7995788810481577`*^9, 
   3.799578882528304*^9}, {3.7995826140294375`*^9, 3.799582644999633*^9}, {
   3.8019845980156755`*^9, 3.8019846004955*^9}, {3.8019883889243264`*^9, 
   3.80198839118528*^9}, 3.801988438786517*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`q10l$$ = 0, $CellContext`q1l$$ = 
    0, $CellContext`q2l$$ = 0, $CellContext`q3l$$ = 0, $CellContext`q4l$$ = 
    0, $CellContext`q5l$$ = 0, $CellContext`q6l$$ = 0, $CellContext`q7l$$ = 
    0, $CellContext`q8l$$ = 0, $CellContext`q9l$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`q1l$$], 0}, -Pi, Pi}, {{
       Hold[$CellContext`q2l$$], 0}, -Pi, Pi}, {{
       Hold[$CellContext`q3l$$], 0}, -Pi, Pi}, {{
       Hold[$CellContext`q4l$$], 0}, -Pi, Pi}, {{
       Hold[$CellContext`q5l$$], 0}, -Pi, Pi}, {{
       Hold[$CellContext`q6l$$], 0}, -Pi, Pi}, {{
       Hold[$CellContext`q7l$$], 0}, -Pi, Pi}, {{
       Hold[$CellContext`q8l$$], 0}, -Pi, Pi}, {{
       Hold[$CellContext`q9l$$], 0}, -Pi, Pi}, {{
       Hold[$CellContext`q10l$$], 0}, -Pi, Pi}}, Typeset`size$$ = {
    662., {323., 333.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`q1l$1460088$$ = 
    0, $CellContext`q2l$1460089$$ = 0, $CellContext`q3l$1460090$$ = 
    0, $CellContext`q4l$1460091$$ = 0, $CellContext`q5l$1460092$$ = 
    0, $CellContext`q6l$1460093$$ = 0, $CellContext`q7l$1460094$$ = 
    0, $CellContext`q8l$1460095$$ = 0, $CellContext`q9l$1460096$$ = 
    0, $CellContext`q10l$1460097$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`q10l$$ = 0, $CellContext`q1l$$ = 
        0, $CellContext`q2l$$ = 0, $CellContext`q3l$$ = 0, $CellContext`q4l$$ = 
        0, $CellContext`q5l$$ = 0, $CellContext`q6l$$ = 0, $CellContext`q7l$$ = 
        0, $CellContext`q8l$$ = 0, $CellContext`q9l$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`q1l$$, $CellContext`q1l$1460088$$, 0], 
        Hold[$CellContext`q2l$$, $CellContext`q2l$1460089$$, 0], 
        Hold[$CellContext`q3l$$, $CellContext`q3l$1460090$$, 0], 
        Hold[$CellContext`q4l$$, $CellContext`q4l$1460091$$, 0], 
        Hold[$CellContext`q5l$$, $CellContext`q5l$1460092$$, 0], 
        Hold[$CellContext`q6l$$, $CellContext`q6l$1460093$$, 0], 
        Hold[$CellContext`q7l$$, $CellContext`q7l$1460094$$, 0], 
        Hold[$CellContext`q8l$$, $CellContext`q8l$1460095$$, 0], 
        Hold[$CellContext`q9l$$, $CellContext`q9l$1460096$$, 0], 
        Hold[$CellContext`q10l$$, $CellContext`q10l$1460097$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        $CellContext`assiemel[{$CellContext`q1l$$, $CellContext`q2l$$, \
$CellContext`q3l$$, $CellContext`q4l$$, $CellContext`q5l$$, \
$CellContext`q6l$$, $CellContext`q7l$$, $CellContext`q8l$$, \
$CellContext`q9l$$, $CellContext`q10l$$}], 
        PlotRange -> {{-1, 1.5}, {-0.5, 1}, {0, 2}}, Boxed -> False, 
        AxesLabel -> {"x", "y", "z"}], 
      "Specifications" :> {{{$CellContext`q1l$$, 0}, -Pi, 
         Pi}, {{$CellContext`q2l$$, 0}, -Pi, Pi}, {{$CellContext`q3l$$, 0}, -
         Pi, Pi}, {{$CellContext`q4l$$, 0}, -Pi, 
         Pi}, {{$CellContext`q5l$$, 0}, -Pi, Pi}, {{$CellContext`q6l$$, 0}, -
         Pi, Pi}, {{$CellContext`q7l$$, 0}, -Pi, 
         Pi}, {{$CellContext`q8l$$, 0}, -Pi, Pi}, {{$CellContext`q9l$$, 0}, -
         Pi, Pi}, {{$CellContext`q10l$$, 0}, -Pi, Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1281., {440., 452.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellOpen->False,
 CellChangeTimes->{3.801988391987503*^9, 3.801989002619279*^9, 
  3.8019894313568106`*^9, 3.80198991072758*^9, 3.8020015091857967`*^9, 
  3.802092917714988*^9, 3.8020937769550962`*^9, 3.802094701734659*^9, 
  3.802095334500594*^9, 3.8020959041499615`*^9, 3.8020972337614326`*^9, 
  3.802099945840435*^9, 3.802104672407538*^9, 3.8021097685514517`*^9, 
  3.8021470617356715`*^9, 3.802147584781603*^9, 3.8021481746481667`*^9, 
  3.8021558781745825`*^9, 3.802157101456463*^9, 3.8021579219422207`*^9, 
  3.802158625054289*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "left", " ", "hand", " ", "animation", " ", "of", " ", "inverse", " ", 
   "kine", " ", "solution", " ", "and", " ", "desired", " ", "trajectory", 
   " ", "to", " ", "be", " ", "followed"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7999344574839635`*^9, 3.7999344928469305`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"animationl", " ", "=", " ", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"Show", "[", "\n", "   ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"assiemel", " ", "[", 
        RowBox[{"qsoll", "[", "time", "]"}], "]"}], "}"}], ",", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{"ParametricPlot3D", "[", 
        RowBox[{
         RowBox[{"posl", "[", "k", "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"k", ",", " ", "t0", ",", " ", "time"}], "}"}], ",", "\n", 
         "     \t\t\t", 
         RowBox[{"PlotPoints", " ", "->", " ", "500"}], ",", "\n", 
         "     \t\t\t", 
         RowBox[{"MaxRecursion", " ", "->", " ", "13"}]}], "\n", 
        "     \t\t\t", "]"}], "}"}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Desired", " ", "Trajectory"}], " ", "*)"}], ",", "\n", "   ", 
      RowBox[{"PlotRange", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin3d", ",", " ", "xmax3d"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"ymin3d", ",", " ", "ymax3d"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"zmin3d", ",", " ", "zmax3d"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"Boxed", " ", "->", " ", "False"}], ",", " ", 
      RowBox[{"AxesLabel", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
        "}"}]}], ",", " ", 
      RowBox[{"ViewPoint", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0.5"}], "}"}]}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"time", ",", " ", 
      RowBox[{"t0", " ", "+", " ", "0.01"}], ",", " ", 
      RowBox[{"tend", " ", "-", " ", "0.01"}], ",", " ", "0.0001"}], "}"}]}], 
   "]"}], " "}]], "Input",
 CellChangeTimes->{{3.758450660493008*^9, 3.758450665333894*^9}, {
   3.7584507189000864`*^9, 3.7584507568909426`*^9}, {3.7584508307551413`*^9, 
   3.7584508325273056`*^9}, {3.7584508898116407`*^9, 
   3.7584509168272314`*^9}, {3.758452221746763*^9, 3.7584523248423505`*^9}, 
   3.758452469562991*^9, {3.7584554540702825`*^9, 3.7584554619740553`*^9}, {
   3.7584555647988544`*^9, 3.7584556334866343`*^9}, 3.7584556794953566`*^9, {
   3.758455725999753*^9, 3.7584557282791667`*^9}, 3.758455765135393*^9, 
   3.758459655825858*^9, {3.758459707466715*^9, 3.7584597092984505`*^9}, {
   3.7584622118968573`*^9, 3.7584622135352993`*^9}, {3.758462748942848*^9, 
   3.758462751693962*^9}, 3.758514149810066*^9, {3.758514249873308*^9, 
   3.7585142712175846`*^9}, {3.7585163893843803`*^9, 
   3.7585164024550133`*^9}, {3.7585170979334493`*^9, 
   3.7585171116366544`*^9}, {3.758517460445441*^9, 3.758517465232693*^9}, 
   3.7585175959242344`*^9, {3.7585176309235926`*^9, 3.7585176309235926`*^9}, {
   3.7585187414119415`*^9, 3.7585187418674216`*^9}, {3.7585193865541725`*^9, 
   3.75851939601441*^9}, {3.7585196669616184`*^9, 3.758519668570157*^9}, {
   3.7585197348267794`*^9, 3.758519771386014*^9}, {3.7585198146905413`*^9, 
   3.758519902719034*^9}, {3.7585199813302794`*^9, 3.758520004229389*^9}, {
   3.799930767806364*^9, 3.7999308056355867`*^9}, {3.7999308595044117`*^9, 
   3.7999308923598814`*^9}, {3.7999309294529963`*^9, 
   3.7999309691198783`*^9}, {3.7999311007828693`*^9, 
   3.7999311143317113`*^9}, {3.799931144362832*^9, 3.7999311492768984`*^9}, {
   3.799931299504156*^9, 3.7999313049177704`*^9}, {3.7999313361398125`*^9, 
   3.79993135163671*^9}, {3.7999313877994356`*^9, 3.7999314170988245`*^9}, {
   3.7999314644545035`*^9, 3.7999315459590054`*^9}, 3.800441346269901*^9, 
   3.800441381485242*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`time$$ = 0.9762666666666666, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`time$$], 0.026666666666666665`, 2.99, 0.0001}}, 
    Typeset`size$$ = {838., {331., 342.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`time$1460160$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`time$$ = 0.026666666666666665`}, 
      "ControllerVariables" :> {
        Hold[$CellContext`time$$, $CellContext`time$1460160$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[{
         $CellContext`assiemel[
          $CellContext`qsoll[$CellContext`time$$]]}, {
         ParametricPlot3D[
          $CellContext`posl[$CellContext`k], {$CellContext`k, \
$CellContext`t0, $CellContext`time$$}, PlotPoints -> 500, MaxRecursion -> 
          13]}, PlotRange -> {{$CellContext`xmin3d, $CellContext`xmax3d}, \
{$CellContext`ymin3d, $CellContext`ymax3d}, {$CellContext`zmin3d, \
$CellContext`zmax3d}}, Boxed -> False, AxesLabel -> {"x", "y", "z"}, 
        ViewPoint -> {1, 1, 0.5}], 
      "Specifications" :> {{$CellContext`time$$, 0.026666666666666665`, 2.99, 
         0.0001, AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{936., {409., 421.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.800075604795925*^9, 3.800077209621869*^9, 
  3.8000775471803393`*^9, 3.8000796866420093`*^9, 3.8000805695879526`*^9, 
  3.800082098914672*^9, 3.8002100244331203`*^9, 3.800256101340518*^9, 
  3.800265576666361*^9, 3.8004394020286384`*^9, 3.8004413538123646`*^9, 
  3.8004413853426723`*^9, 3.800442213453021*^9, 3.8019839091952076`*^9, 
  3.8019839706963615`*^9, 3.8019849819383335`*^9, 3.8019890027867355`*^9, 
  3.8019894315202866`*^9, 3.8019899109246197`*^9, 3.8020015093652873`*^9, 
  3.802092917974295*^9, 3.802093777222334*^9, 3.8020947020122004`*^9, 
  3.802095334773345*^9, 3.8020959043573837`*^9, 3.8020972344810534`*^9, 
  3.8020999466839314`*^9, 3.8021046728565063`*^9, 3.8021097687712193`*^9, 
  3.802147061994034*^9, 3.8021475849750834`*^9, 3.8021481749633274`*^9, 
  3.802155878461316*^9, 3.8021571016743865`*^9, 3.802157922198534*^9, 
  3.802158625419253*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Both arms", "Subtitle",
 CellChangeTimes->{{3.8000716977637234`*^9, 3.8000717191233683`*^9}, {
  3.8000727025328875`*^9, 3.8000727076685505`*^9}}],

Cell[CellGroupData[{

Cell["3D elements", "Section",
 CellChangeTimes->{{3.7993046810598145`*^9, 3.799304696634295*^9}, 
   3.799554263858622*^9, {3.799586669531086*^9, 3.7995866722161613`*^9}, {
   3.799604515692666*^9, 3.799604528253003*^9}, 3.799931572837556*^9, {
   3.800076588355838*^9, 3.8000765910121455`*^9}, 3.8002648759891396`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"assiemeboth", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "q1r_", ",", " ", "q2r_", ",", "q3r_", ",", " ", "q4r_", ",", " ", 
       "q5r_", ",", " ", "q6r_", ",", " ", "q7r_", ",", " ", "q8r_", ",", " ",
        "q9r_", ",", " ", "q10r_"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "q1l_", ",", " ", "q2l_", ",", "q3l_", ",", " ", "q4l_", ",", " ", 
       "q5l_", ",", " ", "q6l_", ",", " ", "q7l_", ",", " ", "q8l_", ",", " ",
        "q9l_", ",", " ", "q10l_"}], "}"}]}], "]"}], " ", "=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
    "base", ",", "\[IndentingNewLine]", "rifg", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"rifEEr", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1r", ",", " ", "q2r", ",", "q3r", ",", " ", "q4r", ",", " ", "q5r", 
        ",", " ", "q6r", ",", " ", "q7r", ",", " ", "q8r", ",", " ", "q9r", 
        ",", " ", "q10r"}], "}"}], "]"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"rifEEl", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1l", ",", " ", "q2l", ",", "q3l", ",", " ", "q4l", ",", " ", "q5l", 
        ",", " ", "q6l", ",", " ", "q7l", ",", " ", "q8l", ",", " ", "q9l", 
        ",", " ", "q10l"}], "}"}], "]"}], ",", " ", "\[IndentingNewLine]", 
     "piano", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"robotr", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1r", ",", " ", "q2r", ",", "q3r", ",", " ", "q4r", ",", " ", "q5r", 
        ",", " ", "q6r", ",", " ", "q7r", ",", " ", "q8r", ",", " ", "q9r", 
        ",", " ", "q10r"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"robotl", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1l", ",", " ", "q2l", ",", "q3l", ",", " ", "q4l", ",", " ", "q5l", 
        ",", " ", "q6l", ",", " ", "q7l", ",", " ", "q8l", ",", " ", "q9l", 
        ",", " ", "q10l"}], "}"}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.799578901629994*^9, 3.7995789020348883`*^9}, {
  3.7996059181455183`*^9, 3.7996059198145027`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Animation", "Section",
 CellChangeTimes->{{3.7584504746517305`*^9, 3.7584504754715495`*^9}, {
   3.758450651427134*^9, 3.7584506581002417`*^9}, {3.7585176309206*^9, 
   3.75851763092159*^9}, 3.7585181474720097`*^9, {3.7995647031626077`*^9, 
   3.7995647087936797`*^9}, {3.799586643898427*^9, 3.7995866585513306`*^9}, {
   3.7999344494450493`*^9, 3.799934452263769*^9}, 3.8002648777452517`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "left", " ", "and", " ", "right", " ", "hands", " ", "animation", " ", "of",
    " ", "inverse", " ", "kine", " ", "solution", " ", "and", " ", "desired", 
   " ", "trajectory", " ", "to", " ", "be", " ", "followed"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7999344574839635`*^9, 3.7999345144319115`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"riftimeEEl", "[", "time", "]"}], ",", 
       RowBox[{"riftimeEEr", "[", "time", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xmin3d", ",", " ", "xmax3d"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"ymin3d", ",", " ", "ymax3d"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"zmin3d", ",", " ", "zmax3d"}], "}"}]}], "}"}]}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Boxed", " ", "->", " ", "False"}], ",", " ", 
     RowBox[{"AxesLabel", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
       "}"}]}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"ViewPoint", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "t0", ",", " ", "\"\<Time\>\""}], "}"}], ",", "t0",
      ",", "tend"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.799598421320098*^9, 3.7995985562119446`*^9}, {
   3.799598596521023*^9, 3.7995986002454357`*^9}, {3.799599272621426*^9, 
   3.7995993431364336`*^9}, 3.7996020403117795`*^9, 3.7996024191982484`*^9, 
   3.7996025364974527`*^9, 3.799602590974831*^9, {3.799602658829427*^9, 
   3.7996026649579344`*^9}, {3.799606617073227*^9, 3.799606643460726*^9}, {
   3.7999006837722692`*^9, 3.7999007228429375`*^9}, {3.7999007568270483`*^9, 
   3.7999007829795017`*^9}, {3.799900998427977*^9, 3.7999010002997746`*^9}, {
   3.800073540576315*^9, 3.800073566159291*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`time$$ = Rational[1, 60], Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`time$$], 
       Rational[1, 60], "Time"}, 
      Rational[1, 60], 3}}, Typeset`size$$ = {774., {322., 333.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`time$1460200$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`time$$ = Rational[1, 60]}, 
      "ControllerVariables" :> {
        Hold[$CellContext`time$$, $CellContext`time$1460200$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[{
         $CellContext`riftimeEEl[$CellContext`time$$], 
         $CellContext`riftimeEEr[$CellContext`time$$]}, 
        PlotRange -> {{$CellContext`xmin3d, $CellContext`xmax3d}, \
{$CellContext`ymin3d, $CellContext`ymax3d}, {$CellContext`zmin3d, \
$CellContext`zmax3d}}, Boxed -> False, AxesLabel -> {"x", "y", "z"}, 
        ViewPoint -> {1, 1, 1}], "Specifications" :> {{{$CellContext`time$$, 
          Rational[1, 60], "Time"}, 
         Rational[1, 60], 3}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{872., {409., 421.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.800076593451815*^9, 3.8000805697223206`*^9, 
  3.8000820989888744`*^9, 3.800210334056107*^9, 3.8002561015706463`*^9, 
  3.8002655772315392`*^9, 3.8004394022016115`*^9, 3.800442213603448*^9, 
  3.801989445349803*^9, 3.802092918197308*^9, 3.8020937774577055`*^9, 
  3.8020947022346582`*^9, 3.8020953350665617`*^9, 3.8020959045757747`*^9, 
  3.802097234886651*^9, 3.8020999472457905`*^9, 3.802104673222231*^9, 
  3.8021097690187225`*^9, 3.8021470622337*^9, 3.80214758517455*^9, 
  3.8021481752116346`*^9, 3.802155878696889*^9, 3.8021571019058094`*^9, 
  3.8021579224259267`*^9, 3.802158625653681*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"animationboth", " ", "=", " ", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"Show", "[", "\n", "       ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"assiemer", " ", "[", 
        RowBox[{"qsolr", "[", "time", "]"}], "]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"assiemel", " ", "[", 
        RowBox[{"qsoll", "[", "time", "]"}], "]"}], "}"}], ",", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{"ParametricPlot3D", "[", 
        RowBox[{
         RowBox[{"posr", "[", "k", "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"k", ",", " ", "t0", ",", " ", "time"}], "}"}], ",", "\n", 
         "     \t\t\t", 
         RowBox[{"PlotPoints", " ", "->", " ", "500"}], ",", "\n", 
         "     \t\t\t", 
         RowBox[{"MaxRecursion", " ", "->", " ", "13"}]}], "\n", 
        "     \t\t\t", "]"}], "}"}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Desired", " ", "Trajectory"}], " ", "*)"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"ParametricPlot3D", "[", 
        RowBox[{
         RowBox[{"posl", "[", "k", "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"k", ",", " ", "t0", ",", " ", "time"}], "}"}], ",", "\n", 
         "     \t\t\t", 
         RowBox[{"PlotPoints", " ", "->", " ", "500"}], ",", "\n", 
         "     \t\t\t", 
         RowBox[{"MaxRecursion", " ", "->", " ", "13"}]}], "\n", 
        "     \t\t\t", "]"}], "}"}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Desired", " ", "Trajectory"}], " ", "*)"}], ",", "\n", "   ", 
      RowBox[{"PlotRange", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin3d", ",", " ", "xmax3d"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"ymin3d", ",", " ", "ymax3d"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"zmin3d", ",", " ", "zmax3d"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"Boxed", " ", "->", " ", "False"}], ",", " ", 
      RowBox[{"AxesLabel", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
        "}"}]}], ",", " ", 
      RowBox[{"ViewPoint", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0.5"}], "}"}]}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"time", ",", " ", 
      RowBox[{"t0", " ", "+", " ", "0.01"}], ",", " ", 
      RowBox[{"tend", " ", "-", " ", "0.01"}], ",", " ", "0.0001"}], "}"}]}], 
   "]"}], " "}]], "Input",
 CellChangeTimes->{{3.758450660493008*^9, 3.758450665333894*^9}, {
   3.7584507189000864`*^9, 3.7584507568909426`*^9}, {3.7584508307551413`*^9, 
   3.7584508325273056`*^9}, {3.7584508898116407`*^9, 
   3.7584509168272314`*^9}, {3.758452221746763*^9, 3.7584523248423505`*^9}, 
   3.758452469562991*^9, {3.7584554540702825`*^9, 3.7584554619740553`*^9}, {
   3.7584555647988544`*^9, 3.7584556334866343`*^9}, 3.7584556794953566`*^9, {
   3.758455725999753*^9, 3.7584557282791667`*^9}, 3.758455765135393*^9, 
   3.758459655825858*^9, {3.758459707466715*^9, 3.7584597092984505`*^9}, {
   3.7584622118968573`*^9, 3.7584622135352993`*^9}, {3.758462748942848*^9, 
   3.758462751693962*^9}, 3.758514149810066*^9, {3.758514249873308*^9, 
   3.7585142712175846`*^9}, {3.7585163893843803`*^9, 
   3.7585164024550133`*^9}, {3.7585170979334493`*^9, 
   3.7585171116366544`*^9}, {3.758517460445441*^9, 3.758517465232693*^9}, 
   3.7585175959242344`*^9, {3.7585176309235926`*^9, 3.7585176309235926`*^9}, {
   3.7585187414119415`*^9, 3.7585187418674216`*^9}, {3.7585193865541725`*^9, 
   3.75851939601441*^9}, {3.7585196669616184`*^9, 3.758519668570157*^9}, {
   3.7585197348267794`*^9, 3.758519771386014*^9}, {3.7585198146905413`*^9, 
   3.758519902719034*^9}, {3.7585199813302794`*^9, 3.758520004229389*^9}, {
   3.799930767806364*^9, 3.7999308056355867`*^9}, {3.7999308595044117`*^9, 
   3.7999308923598814`*^9}, {3.7999309294529963`*^9, 
   3.7999309691198783`*^9}, {3.7999311007828693`*^9, 
   3.7999311143317113`*^9}, {3.799931144362832*^9, 3.7999311492768984`*^9}, {
   3.799931299504156*^9, 3.7999313049177704`*^9}, {3.7999313361398125`*^9, 
   3.79993135163671*^9}, {3.7999313877994356`*^9, 3.7999314170988245`*^9}, {
   3.7999314644545035`*^9, 3.7999315459590054`*^9}, {3.79993415721865*^9, 
   3.7999341685021353`*^9}, {3.799934257348915*^9, 3.799934313528778*^9}, {
   3.7999343554442167`*^9, 3.7999343683004785`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`time$$ = 0.026666666666666665`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`time$$], 0.026666666666666665`, 2.99, 0.0001}}, 
    Typeset`size$$ = {774., {282., 292.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`time$1460250$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`time$$ = 0.026666666666666665`}, 
      "ControllerVariables" :> {
        Hold[$CellContext`time$$, $CellContext`time$1460250$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[{
         $CellContext`assiemer[
          $CellContext`qsolr[$CellContext`time$$]]}, {
         $CellContext`assiemel[
          $CellContext`qsoll[$CellContext`time$$]]}, {
         ParametricPlot3D[
          $CellContext`posr[$CellContext`k], {$CellContext`k, \
$CellContext`t0, $CellContext`time$$}, PlotPoints -> 500, MaxRecursion -> 
          13]}, {
         ParametricPlot3D[
          $CellContext`posl[$CellContext`k], {$CellContext`k, \
$CellContext`t0, $CellContext`time$$}, PlotPoints -> 500, MaxRecursion -> 
          13]}, PlotRange -> {{$CellContext`xmin3d, $CellContext`xmax3d}, \
{$CellContext`ymin3d, $CellContext`ymax3d}, {$CellContext`zmin3d, \
$CellContext`zmax3d}}, Boxed -> False, AxesLabel -> {"x", "y", "z"}, 
        ViewPoint -> {1, 1, 0.5}], 
      "Specifications" :> {{$CellContext`time$$, 0.026666666666666665`, 2.99, 
         0.0001, AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{872., {359., 371.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.800076593545474*^9, 3.8000805698046775`*^9, 
  3.8000820990716004`*^9, 3.8002103341423426`*^9, 3.800256101641841*^9, 
  3.8002655775636845`*^9, 3.8004394022397156`*^9, 3.8004422136956997`*^9, 
  3.8020929183020277`*^9, 3.802093777573436*^9, 3.802094702361271*^9, 
  3.8020953351922255`*^9, 3.802095904671585*^9, 3.8020972350971746`*^9, 
  3.8020999474618435`*^9, 3.802104673422868*^9, 3.8021097691158686`*^9, 
  3.8021470623433228`*^9, 3.8021475852533407`*^9, 3.8021481753264704`*^9, 
  3.802155878797702*^9, 3.8021571019885464`*^9, 3.8021579225256615`*^9, 
  3.802158625748372*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"both", " ", "arms"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7996065397329135`*^9, 3.7996065461777363`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"assiemeboth", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "q1r", ",", " ", "q2r", ",", "q3r", ",", " ", "q4r", ",", " ", "q5r",
           ",", " ", "q6r", ",", " ", "q7r", ",", " ", "q8r", ",", " ", "q9r",
           ",", " ", "q10r"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "q1l", ",", " ", "q2l", ",", "q3l", ",", " ", "q4l", ",", " ", "q5l",
           ",", " ", "q6l", ",", " ", "q7l", ",", " ", "q8l", ",", " ", "q9l",
           ",", " ", "q10l"}], "}"}]}], "]"}], ",", " ", 
      RowBox[{"PlotRange", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin3d", ",", " ", "xmax3d"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"ymin3d", ",", " ", "ymax3d"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"zmin3d", ",", " ", "zmax3d"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"Boxed", " ", "->", " ", "False"}], ",", " ", 
      RowBox[{"AxesLabel", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
        "}"}]}], ",", " ", 
      RowBox[{"ViewPoint", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "2"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q1r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q2r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q3r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q4r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q5r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q6r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q7r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q8r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q9r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q10r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q1l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q2l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q3l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q4l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q5l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q6l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q7l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q8l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q9l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q10l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}]}], "  ", "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.7995984181120715`*^9, {3.799730517334225*^9, 3.799730527437417*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1520, 791},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>2.15 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 413, 5, 355, "Title"],
Cell[996, 29, 292, 4, 118, "Subtitle"],
Cell[1291, 35, 196, 2, 68, "Subsubtitle"],
Cell[1490, 39, 1613, 24, 480, "Text"],
Cell[CellGroupData[{
Cell[3128, 67, 101, 1, 118, "Subtitle"],
Cell[CellGroupData[{
Cell[3254, 72, 311, 4, 149, "Section"],
Cell[3568, 78, 500, 9, 219, "Input"],
Cell[4071, 89, 360, 7, 148, "Text"],
Cell[CellGroupData[{
Cell[4456, 100, 101, 1, 103, "Subsection"],
Cell[4560, 103, 1313, 22, 4996, "Input"],
Cell[5876, 127, 240, 6, 1376, "Input"],
Cell[6119, 135, 391, 8, 1376, "Input"],
Cell[6513, 145, 290, 6, 1376, "Input"],
Cell[6806, 153, 443, 8, 1376, "Input"],
Cell[CellGroupData[{
Cell[7274, 165, 402, 7, 1376, "Input"],
Cell[7679, 174, 2881, 49, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10597, 228, 551, 9, 1376, "Input"],
Cell[11151, 239, 2930, 49, 70, "Output"]
}, Open  ]],
Cell[14096, 291, 122, 1, 1376, "Text"],
Cell[CellGroupData[{
Cell[14243, 296, 245, 5, 1376, "Input"],
Cell[14491, 303, 2274, 43, 70, "Output"]
}, Open  ]],
Cell[16780, 349, 202, 5, 1376, "Input"],
Cell[16985, 356, 204, 5, 1376, "Input"],
Cell[17192, 363, 202, 4, 1376, "Input"],
Cell[17397, 369, 181, 4, 1376, "Input"],
Cell[17581, 375, 283, 8, 1376, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[17901, 388, 112, 1, 81, "Subsection"],
Cell[CellGroupData[{
Cell[18038, 393, 160, 2, 83, "Subsubsection"],
Cell[18201, 397, 862, 20, 1274, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[19100, 422, 113, 1, 66, "Subsubsection"],
Cell[19216, 425, 6320, 174, 1857, "Input"],
Cell[25539, 601, 616, 13, 135, "Input"],
Cell[26158, 616, 1885, 58, 471, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28080, 679, 109, 1, 83, "Subsubsection"],
Cell[28192, 682, 907, 18, 192, "Input"],
Cell[29102, 702, 1128, 18, 92, "Input"],
Cell[CellGroupData[{
Cell[30255, 724, 272, 6, 92, "Input"],
Cell[30530, 732, 1424, 29, 400, "Output"]
}, Open  ]],
Cell[31969, 764, 158, 3, 65, "Text"],
Cell[32130, 769, 247, 5, 92, "Input"],
Cell[32380, 776, 175, 4, 92, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32616, 787, 157, 2, 149, "Section"],
Cell[32776, 791, 398, 11, 423, "Input"],
Cell[33177, 804, 431, 9, 623, "Input"],
Cell[33611, 815, 1949, 49, 1788, "Input"],
Cell[35563, 866, 340, 6, 623, "Input"],
Cell[35906, 874, 2709, 68, 2175, "Input"],
Cell[38618, 944, 379, 12, 423, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[39046, 962, 99, 1, 118, "Subtitle"],
Cell[CellGroupData[{
Cell[39170, 967, 491, 6, 149, "Section"],
Cell[39664, 975, 319, 5, 10552, "Text"],
Cell[CellGroupData[{
Cell[40008, 984, 100, 1, 8157, "Subsubsection"],
Cell[40111, 987, 289, 6, 12192, "Input"],
Cell[40403, 995, 410, 8, 12192, "Input"],
Cell[40816, 1005, 214, 5, 12192, "Input"],
Cell[41033, 1012, 191, 4, 12192, "Input"],
Cell[41227, 1018, 523, 11, 12192, "Input"],
Cell[41753, 1031, 370, 9, 12192, "Input"],
Cell[42126, 1042, 575, 12, 12192, "Input"],
Cell[42704, 1056, 450, 10, 12192, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[43191, 1071, 104, 1, 6465, "Subsubsection"],
Cell[43298, 1074, 195, 4, 6275, "Input"],
Cell[CellGroupData[{
Cell[43518, 1082, 2934, 61, 78859, "Input"],
Cell[46455, 1145, 1813, 45, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[48317, 1196, 103, 1, 6465, "Subsubsection"],
Cell[48423, 1199, 293, 6, 12192, "Input"],
Cell[CellGroupData[{
Cell[48741, 1209, 2725, 56, 153845, "Input"],
Cell[51469, 1267, 1725, 43, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[53243, 1316, 114, 1, 6465, "Subsubsection"],
Cell[53360, 1319, 413, 11, 12192, "Input"],
Cell[53776, 1332, 513, 12, 12192, "Input"],
Cell[54292, 1346, 815, 15, 12192, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[55144, 1366, 111, 1, 6465, "Subsubsection"],
Cell[55258, 1369, 305, 6, 12192, "Input"],
Cell[CellGroupData[{
Cell[55588, 1379, 2995, 60, 153845, "Input"],
Cell[58586, 1441, 1737, 43, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[60372, 1490, 110, 1, 6465, "Subsubsection"],
Cell[60485, 1493, 352, 6, 12192, "Input"],
Cell[CellGroupData[{
Cell[60862, 1503, 2872, 58, 153845, "Input"],
Cell[63737, 1563, 1716, 43, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[65514, 1613, 327, 4, 114, "Section"],
Cell[CellGroupData[{
Cell[65866, 1621, 98, 1, 9945, "Subsection"],
Cell[65967, 1624, 218, 5, 6275, "Input"],
Cell[66188, 1631, 182, 6, 6275, "Input"],
Cell[66373, 1639, 685, 19, 6275, "Input"],
Cell[67061, 1660, 479, 9, 6275, "Input"],
Cell[67543, 1671, 268, 7, 6275, "Input"],
Cell[67814, 1680, 459, 10, 6275, "Input"],
Cell[68276, 1692, 372, 9, 6275, "Input"],
Cell[68651, 1703, 402, 9, 6275, "Input"],
Cell[69056, 1714, 457, 11, 6275, "Input"],
Cell[69516, 1727, 421, 10, 6275, "Input"],
Cell[69940, 1739, 192, 4, 6275, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70169, 1748, 159, 2, 9945, "Subsection"],
Cell[70331, 1752, 318, 6, 6359, "Text"],
Cell[70652, 1760, 600, 14, 10423, "Input"],
Cell[71255, 1776, 274, 6, 6275, "Input"],
Cell[71532, 1784, 322, 7, 6275, "Input"],
Cell[71857, 1793, 822, 17, 6275, "Input"],
Cell[72682, 1812, 795, 18, 6275, "Input"],
Cell[73480, 1832, 810, 16, 6275, "Input"],
Cell[74293, 1850, 748, 16, 6275, "Input"],
Cell[75044, 1868, 814, 18, 6275, "Input"],
Cell[75861, 1888, 727, 15, 6275, "Input"],
Cell[76591, 1905, 663, 15, 6275, "Input"],
Cell[77257, 1922, 857, 17, 6275, "Input"],
Cell[78117, 1941, 697, 16, 6275, "Input"],
Cell[78817, 1959, 870, 18, 6275, "Input"],
Cell[79690, 1979, 222, 5, 6275, "Input"],
Cell[79915, 1986, 1353, 28, 10423, "Input"],
Cell[81271, 2016, 613, 16, 10423, "Input"],
Cell[81887, 2034, 914, 21, 6275, "Input"],
Cell[82804, 2057, 1027, 22, 10423, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83868, 2084, 96, 1, 9945, "Subsection"],
Cell[CellGroupData[{
Cell[83989, 2089, 103, 1, 8157, "Subsubsection"],
Cell[84095, 2092, 2544, 66, 50740, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[86676, 2163, 156, 2, 6465, "Subsubsection"],
Cell[86835, 2167, 421, 7, 10552, "Text"],
Cell[87259, 2176, 315, 6, 6275, "Input"],
Cell[87577, 2184, 652, 17, 10423, "Input"],
Cell[88232, 2203, 424, 9, 6275, "Input"],
Cell[88659, 2214, 598, 14, 6275, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[89306, 2234, 217, 3, 9945, "Subsection"],
Cell[89526, 2239, 309, 7, 6275, "Input"],
Cell[89838, 2248, 1425, 25, 6275, "Input"],
Cell[91266, 2275, 1473, 26, 6275, "Input"],
Cell[92742, 2303, 1513, 27, 6275, "Input"],
Cell[94258, 2332, 1559, 28, 6275, "Input"],
Cell[95820, 2362, 1633, 30, 6275, "Input"],
Cell[97456, 2394, 1675, 31, 6275, "Input"],
Cell[99134, 2427, 977, 21, 10423, "Input"],
Cell[100114, 2450, 917, 21, 10423, "Input"],
Cell[101034, 2473, 959, 22, 10423, "Input"],
Cell[101996, 2497, 1121, 25, 14346, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[103166, 2528, 454, 6, 114, "Section"],
Cell[CellGroupData[{
Cell[103645, 2538, 265, 3, 103, "Subsection"],
Cell[103913, 2543, 214, 5, 92, "Input"],
Cell[104130, 2550, 1374, 35, 219, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105541, 2590, 193, 2, 103, "Subsection"],
Cell[105737, 2594, 901, 15, 13067, "Input"],
Cell[106641, 2611, 642, 13, 13067, "Input"],
Cell[107286, 2626, 1217, 26, 13067, "Input"],
Cell[108506, 2654, 898, 16, 17172, "Input"],
Cell[109407, 2672, 696, 14, 13067, "Input"],
Cell[110106, 2688, 1174, 27, 13067, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[111317, 2720, 399, 5, 81, "Subsection"],
Cell[111719, 2727, 526, 11, 135, "Input"],
Cell[112248, 2740, 1080, 17, 92, "Input"],
Cell[113331, 2759, 456, 9, 92, "Input"],
Cell[113790, 2770, 1113, 37, 110, "Text"],
Cell[114906, 2809, 267, 5, 92, "Input"],
Cell[115176, 2816, 3454, 95, 513, "Input"],
Cell[118633, 2913, 377, 10, 92, "Input"],
Cell[119013, 2925, 1041, 25, 177, "Input"],
Cell[120057, 2952, 4113, 88, 429, "Input"],
Cell[CellGroupData[{
Cell[124195, 3044, 361, 8, 92, "Input"],
Cell[124559, 3054, 1457, 24, 135, "Output"]
}, Open  ]],
Cell[126031, 3081, 557, 12, 135, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126625, 3098, 265, 3, 103, "Subsection"],
Cell[126893, 3103, 147, 2, 65, "Text"],
Cell[127043, 3107, 171, 4, 92, "Input"],
Cell[CellGroupData[{
Cell[127239, 3115, 148, 2, 83, "Subsubsection"],
Cell[127390, 3119, 316, 8, 92, "Input"],
Cell[127709, 3129, 1972, 40, 135, "Input"],
Cell[129684, 3171, 661, 14, 92, "Input"],
Cell[CellGroupData[{
Cell[130370, 3189, 2189, 54, 261, "Input"],
Cell[132562, 3245, 237063, 4069, 40, "Output",
 CellOpen->False]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[369674, 7320, 255, 3, 83, "Subsubsection"],
Cell[369932, 7325, 511, 10, 92, "Input"],
Cell[CellGroupData[{
Cell[370468, 7339, 2488, 58, 234, "Input"],
Cell[372959, 7399, 166341, 2793, 742, "Output"]
}, Open  ]],
Cell[539315, 10195, 520, 10, 92, "Input"],
Cell[CellGroupData[{
Cell[539860, 10209, 1647, 39, 219, "Input"],
Cell[541510, 10250, 192988, 3232, 751, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[734571, 13490, 270, 4, 149, "Section"],
Cell[CellGroupData[{
Cell[734866, 13498, 275, 4, 9945, "Subsection"],
Cell[735144, 13504, 231, 4, 12192, "Input"],
Cell[735378, 13510, 1064, 22, 20291, "Input"],
Cell[736445, 13534, 664, 17, 12192, "Input"],
Cell[737112, 13553, 230, 5, 12192, "Input"],
Cell[737345, 13560, 953, 25, 20291, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[738335, 13590, 120, 2, 7875, "Subsection"],
Cell[738458, 13594, 179, 3, 12192, "Input"],
Cell[738640, 13599, 230, 4, 12192, "Input"],
Cell[738873, 13605, 531, 13, 12192, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[739441, 13623, 171, 2, 7875, "Subsection"],
Cell[739615, 13627, 344, 7, 12192, "Input"],
Cell[CellGroupData[{
Cell[739984, 13638, 332, 4, 15867, "Subsubsection"],
Cell[740319, 13644, 1647, 30, 20291, "Input"],
Cell[741969, 13676, 1649, 30, 20291, "Input"],
Cell[743621, 13708, 1677, 30, 20291, "Input"],
Cell[745301, 13740, 1648, 30, 20291, "Input"],
Cell[746952, 13772, 1651, 30, 20291, "Input"],
Cell[748606, 13804, 1669, 30, 20291, "Input"],
Cell[750278, 13836, 990, 21, 20291, "Input"],
Cell[751271, 13859, 963, 20, 20291, "Input"],
Cell[752237, 13881, 949, 20, 20291, "Input"],
Cell[753189, 13903, 965, 20, 20291, "Input"],
Cell[754157, 13925, 4147, 85, 106745, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[758341, 14015, 175, 2, 12392, "Subsubsection"],
Cell[758519, 14019, 367, 7, 12192, "Input"],
Cell[758889, 14028, 687, 13, 12192, "Input"],
Cell[759579, 14043, 2323, 43, 28094, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[761951, 14092, 230, 3, 7875, "Subsection"],
Cell[762184, 14097, 600, 13, 20291, "Input"],
Cell[762787, 14112, 663, 14, 20291, "Input"],
Cell[763453, 14128, 2593, 72, 51705, "Input"],
Cell[766049, 14202, 467, 11, 20291, "Input"],
Cell[766519, 14215, 612, 12, 12192, "Input"],
Cell[767134, 14229, 2314, 51, 43903, "Input"],
Cell[769451, 14282, 270, 6, 12192, "Input"],
Cell[769724, 14290, 1327, 30, 35995, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[771088, 14325, 201, 3, 7875, "Subsection"],
Cell[771292, 14330, 212, 5, 12192, "Input"],
Cell[771507, 14337, 3724, 60, 28094, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[775280, 14403, 436, 6, 114, "Section"],
Cell[CellGroupData[{
Cell[775741, 14413, 1761, 37, 1468, "Input"],
Cell[777505, 14452, 2753, 50, 70, "Output"]
}, Open  ]],
Cell[780273, 14505, 3339, 94, 1468, "Input"],
Cell[783615, 14601, 331, 6, 498, "Input"],
Cell[CellGroupData[{
Cell[783971, 14611, 3611, 69, 1857, "Input"],
Cell[787585, 14682, 3270, 60, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[790916, 14749, 123, 2, 118, "Subtitle"],
Cell[CellGroupData[{
Cell[791064, 14755, 497, 6, 149, "Section"],
Cell[791564, 14763, 319, 5, 20528, "Text"],
Cell[CellGroupData[{
Cell[791908, 14772, 100, 1, 15867, "Subsubsection"],
Cell[792011, 14775, 289, 6, 12192, "Input"],
Cell[792303, 14783, 462, 9, 12192, "Input"],
Cell[792768, 14794, 265, 6, 12192, "Input"],
Cell[793036, 14802, 191, 4, 12192, "Input"],
Cell[793230, 14808, 574, 12, 12192, "Input"],
Cell[793807, 14822, 419, 10, 12192, "Input"],
Cell[794229, 14834, 622, 12, 12192, "Input"],
Cell[794854, 14848, 506, 11, 12192, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[795397, 14864, 104, 1, 12392, "Subsubsection"],
Cell[795504, 14867, 195, 4, 12192, "Input"],
Cell[CellGroupData[{
Cell[795724, 14875, 2802, 59, 153845, "Input"],
Cell[798529, 14936, 2046, 49, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[800624, 14991, 103, 1, 12392, "Subsubsection"],
Cell[800730, 14994, 293, 6, 12192, "Input"],
Cell[CellGroupData[{
Cell[801048, 15004, 2725, 56, 153845, "Input"],
Cell[803776, 15062, 1968, 47, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[805793, 15115, 114, 1, 12392, "Subsubsection"],
Cell[805910, 15118, 558, 14, 12192, "Input"],
Cell[806471, 15134, 386, 11, 12192, "Input"],
Cell[CellGroupData[{
Cell[806882, 15149, 651, 13, 12192, "Input"],
Cell[807536, 15164, 967, 17, 70, "Message"],
Cell[808506, 15183, 2067, 33, 70, "Message"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[810622, 15222, 111, 1, 12392, "Subsubsection"],
Cell[810736, 15225, 305, 6, 12192, "Input"],
Cell[CellGroupData[{
Cell[811066, 15235, 2889, 58, 153845, "Input"],
Cell[813958, 15295, 1964, 47, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[815971, 15348, 110, 1, 12392, "Subsubsection"],
Cell[816084, 15351, 352, 6, 12192, "Input"],
Cell[CellGroupData[{
Cell[816461, 15361, 2926, 59, 153845, "Input"],
Cell[819390, 15422, 1951, 47, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[821402, 15476, 378, 5, 114, "Section"],
Cell[CellGroupData[{
Cell[821805, 15485, 98, 1, 2195, "Subsection"],
Cell[821906, 15488, 218, 5, 1954, "Input"],
Cell[822127, 15495, 182, 6, 1954, "Input"],
Cell[822312, 15503, 685, 19, 1954, "Input"],
Cell[823000, 15524, 479, 9, 1954, "Input"],
Cell[823482, 15535, 268, 7, 1954, "Input"],
Cell[823753, 15544, 434, 10, 1954, "Input"],
Cell[824190, 15556, 478, 10, 1954, "Input"],
Cell[824671, 15568, 503, 11, 1954, "Input"],
Cell[825177, 15581, 432, 10, 1954, "Input"],
Cell[825612, 15593, 432, 10, 1954, "Input"],
Cell[826047, 15605, 242, 5, 1954, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[826326, 15615, 159, 2, 2195, "Subsection"],
Cell[826488, 15619, 318, 6, 12392, "Text"],
Cell[826809, 15627, 553, 13, 20291, "Input"],
Cell[827365, 15642, 227, 5, 12192, "Input"],
Cell[827595, 15649, 322, 7, 12192, "Input"],
Cell[827920, 15658, 802, 17, 12192, "Input"],
Cell[828725, 15677, 790, 17, 12192, "Input"],
Cell[829518, 15696, 883, 18, 12192, "Input"],
Cell[830404, 15716, 826, 17, 12192, "Input"],
Cell[831233, 15735, 812, 18, 12192, "Input"],
Cell[832048, 15755, 863, 18, 12192, "Input"],
Cell[832914, 15775, 708, 16, 12192, "Input"],
Cell[833625, 15793, 859, 17, 12192, "Input"],
Cell[834487, 15812, 742, 17, 12192, "Input"],
Cell[835232, 15831, 870, 18, 12192, "Input"],
Cell[836105, 15851, 221, 5, 12192, "Input"],
Cell[836329, 15858, 1300, 27, 28094, "Input"],
Cell[837632, 15887, 930, 21, 20291, "Input"],
Cell[838565, 15910, 911, 21, 20291, "Input"],
Cell[839479, 15933, 662, 17, 20291, "Input"],
Cell[840144, 15952, 1079, 23, 20291, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[841260, 15980, 96, 1, 1728, "Subsection"],
Cell[CellGroupData[{
Cell[841381, 15985, 103, 1, 1765, "Subsubsection"],
Cell[841487, 15988, 2678, 70, 98833, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[844202, 16063, 156, 2, 1399, "Subsubsection"],
Cell[844361, 16067, 421, 7, 3156, "Text"],
Cell[844785, 16076, 315, 6, 1954, "Input"],
Cell[845103, 16084, 703, 18, 2878, "Input"],
Cell[845809, 16104, 424, 9, 1954, "Input"],
Cell[846236, 16115, 800, 17, 1954, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[847085, 16138, 189, 2, 2195, "Subsection"],
Cell[847277, 16142, 283, 7, 12192, "Input"],
Cell[847563, 16151, 1474, 26, 12192, "Input"],
Cell[849040, 16179, 1577, 28, 12192, "Input"],
Cell[850620, 16209, 1617, 29, 12192, "Input"],
Cell[852240, 16240, 1665, 30, 20291, "Input"],
Cell[853908, 16272, 1679, 30, 20291, "Input"],
Cell[855590, 16304, 1721, 31, 20291, "Input"],
Cell[857314, 16337, 1033, 22, 20291, "Input"],
Cell[858350, 16361, 965, 21, 20291, "Input"],
Cell[859318, 16384, 1007, 22, 20291, "Input"],
Cell[860328, 16408, 1174, 26, 35995, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[861551, 16440, 452, 6, 114, "Section"],
Cell[CellGroupData[{
Cell[862028, 16450, 265, 3, 103, "Subsection"],
Cell[862296, 16455, 214, 5, 92, "Input"],
Cell[862513, 16462, 1443, 35, 219, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[863993, 16502, 193, 2, 103, "Subsection"],
Cell[864189, 16506, 901, 15, 3197, "Input"],
Cell[865093, 16523, 695, 14, 2300, "Input"],
Cell[865791, 16539, 1169, 26, 2300, "Input"],
Cell[866963, 16567, 898, 16, 3197, "Input"],
Cell[867864, 16585, 698, 14, 2300, "Input"],
Cell[868565, 16601, 1069, 25, 2300, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[869671, 16631, 344, 4, 81, "Subsection"],
Cell[870018, 16637, 528, 11, 135, "Input"],
Cell[870549, 16650, 1085, 17, 92, "Input"],
Cell[871637, 16669, 458, 9, 92, "Input"],
Cell[872098, 16680, 1093, 32, 110, "Text"],
Cell[873194, 16714, 1113, 37, 110, "Text"],
Cell[874310, 16753, 267, 5, 92, "Input"],
Cell[874580, 16760, 3430, 95, 513, "Input"],
Cell[878013, 16857, 377, 10, 92, "Input"],
Cell[878393, 16869, 991, 25, 177, "Input"],
Cell[879387, 16896, 4042, 87, 429, "Input"],
Cell[CellGroupData[{
Cell[883454, 16987, 313, 8, 92, "Input"],
Cell[883770, 16997, 1501, 25, 135, "Output"]
}, Open  ]],
Cell[885286, 17025, 504, 11, 135, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[885827, 17041, 265, 3, 103, "Subsection"],
Cell[886095, 17046, 147, 2, 65, "Text"],
Cell[886245, 17050, 171, 4, 92, "Input"],
Cell[CellGroupData[{
Cell[886441, 17058, 148, 2, 83, "Subsubsection"],
Cell[886592, 17062, 316, 8, 92, "Input"],
Cell[886911, 17072, 1923, 39, 135, "Input"],
Cell[888837, 17113, 609, 13, 92, "Input"],
Cell[CellGroupData[{
Cell[889471, 17130, 2139, 54, 261, "Input"],
Cell[891613, 17186, 254516, 4355, 40, "Output",
 CellOpen->False]
}, Open  ]],
Cell[1146144, 21544, 138, 1, 65, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1146319, 21550, 409, 5, 83, "Subsubsection"],
Cell[1146731, 21557, 560, 11, 92, "Input"],
Cell[CellGroupData[{
Cell[1147316, 21572, 2112, 47, 219, "Input"],
Cell[1149431, 21621, 171125, 2875, 789, "Output"]
}, Open  ]],
Cell[1320571, 24499, 570, 11, 92, "Input"],
Cell[CellGroupData[{
Cell[1321166, 24514, 1723, 41, 219, "Input"],
Cell[1322892, 24557, 183472, 3076, 766, "Output"]
}, Open  ]],
Cell[1506379, 27636, 100, 1, 65, "Text"],
Cell[1506482, 27639, 76306, 1256, 659, "Input"],
Cell[1582791, 28897, 155, 2, 65, "Text"],
Cell[1582949, 28901, 81153, 1335, 729, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1664163, 30243, 270, 4, 149, "Section"],
Cell[CellGroupData[{
Cell[1664458, 30251, 275, 4, 2195, "Subsection"],
Cell[1664736, 30257, 231, 4, 12192, "Input"],
Cell[1664970, 30263, 1064, 22, 20291, "Input"],
Cell[1666037, 30287, 664, 17, 12192, "Input"],
Cell[1666704, 30306, 230, 5, 12192, "Input"],
Cell[1666937, 30313, 953, 25, 20291, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1667927, 30343, 120, 2, 1728, "Subsection"],
Cell[1668050, 30347, 179, 3, 12192, "Input"],
Cell[1668232, 30352, 230, 4, 12192, "Input"],
Cell[1668465, 30358, 531, 13, 12192, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1669033, 30376, 171, 2, 1728, "Subsection"],
Cell[1669207, 30380, 344, 7, 12192, "Input"],
Cell[CellGroupData[{
Cell[1669576, 30391, 364, 5, 15867, "Subsubsection"],
Cell[1669943, 30398, 1699, 31, 20291, "Input"],
Cell[1671645, 30431, 1701, 31, 20291, "Input"],
Cell[1673349, 30464, 1703, 31, 20291, "Input"],
Cell[1675055, 30497, 1697, 31, 20291, "Input"],
Cell[1676755, 30530, 1699, 31, 20291, "Input"],
Cell[1678457, 30563, 1723, 31, 20291, "Input"],
Cell[1680183, 30596, 1011, 21, 20291, "Input"],
Cell[1681197, 30619, 1009, 21, 20291, "Input"],
Cell[1682209, 30642, 1008, 21, 20291, "Input"],
Cell[1683220, 30665, 1016, 21, 20291, "Input"],
Cell[1684239, 30688, 4247, 86, 106745, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1688523, 30779, 175, 2, 12392, "Subsubsection"],
Cell[1688701, 30783, 367, 7, 12192, "Input"],
Cell[1689071, 30792, 687, 13, 12192, "Input"],
Cell[1689761, 30807, 2324, 43, 28094, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1692134, 30856, 230, 3, 1728, "Subsection"],
Cell[1692367, 30861, 600, 13, 2878, "Input"],
Cell[1692970, 30876, 663, 14, 2878, "Input"],
Cell[1693636, 30892, 2593, 72, 6465, "Input"],
Cell[1696232, 30966, 467, 11, 2878, "Input"],
Cell[1696702, 30979, 612, 12, 1954, "Input"],
Cell[1697317, 30993, 1884, 45, 5572, "Input"],
Cell[1699204, 31040, 270, 6, 1954, "Input"],
Cell[1699477, 31048, 1116, 27, 4667, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1700630, 31080, 201, 3, 2195, "Subsection"],
Cell[1700834, 31085, 212, 5, 12192, "Input"],
Cell[1701049, 31092, 3604, 59, 28094, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1704702, 31157, 436, 6, 114, "Section"],
Cell[CellGroupData[{
Cell[1705163, 31167, 1759, 37, 345, "Input"],
Cell[1706925, 31206, 2867, 52, 40, "Output",
 CellOpen->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[1709829, 31263, 3275, 96, 345, "Input"],
Cell[1713107, 31361, 4644, 82, 40, "Output",
 CellOpen->False]
}, Open  ]],
Cell[1717766, 31446, 332, 6, 135, "Input"],
Cell[CellGroupData[{
Cell[1718123, 31456, 3608, 69, 429, "Input"],
Cell[1721734, 31527, 3352, 61, 891, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1725147, 31595, 152, 2, 118, "Subtitle"],
Cell[CellGroupData[{
Cell[1725324, 31601, 320, 4, 149, "Section"],
Cell[1725647, 31607, 2090, 47, 45414, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1727774, 31659, 399, 5, 114, "Section"],
Cell[1728176, 31666, 362, 7, 135, "Input"],
Cell[CellGroupData[{
Cell[1728563, 31677, 1865, 41, 345, "Input"],
Cell[1730431, 31720, 2619, 48, 891, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1733087, 31773, 4452, 88, 639, "Input"],
Cell[1737542, 31863, 3336, 63, 791, "Output"]
}, Open  ]],
Cell[1740893, 31929, 160, 3, 92, "Input"],
Cell[1741056, 31934, 5080, 156, 513, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

