(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    869170,      17243]
NotebookOptionsPosition[    849634,      16664]
NotebookOutlinePosition[    850023,      16680]
CellTagsIndexPosition[    849980,      16677]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ARM - 10 R with ergonomic constraint", "Title",
 CellChangeTimes->{{3.799303901217402*^9, 3.7993039249329557`*^9}, {
  3.7993040036349297`*^9, 3.799304021871172*^9}, {3.7995830677533264`*^9, 
  3.79958306858211*^9}, {3.799583108168663*^9, 3.7995831194328003`*^9}}],

Cell["Alessia Biondi hope June 2020", "Subtitle",
 CellChangeTimes->{{3.7993040263871374`*^9, 3.799304059475628*^9}, {
  3.799304998918648*^9, 3.799304999282722*^9}, {3.7995831244431496`*^9, 
  3.7995831249567766`*^9}, {3.7999796128290095`*^9, 3.799979618146599*^9}}],

Cell["Brief description of notebook purpose (done)", "Subsubtitle",
 CellChangeTimes->{{3.799584926521897*^9, 3.799585002460859*^9}, {
  3.799585077944744*^9, 3.799585080209689*^9}}],

Cell["\<\
What is done inside this notebook:
first, it is implemented the reconstruction of an ideal trajectory from data \
provided by IMU sensors placed on subjects\[CloseCurlyQuote]arm during the \
execution of a specific task (only using the end effector position, here hand \
position). 
Then, it is defined a functional cost (J) in order to encourage the most \
ergonomic arm\[CloseCurlyQuote]s movement.
After that, inverse Kinematic is implemented: it is imposed as trajectory to \
be followed the one obtained from data about hand movements. Here, CLIK is a \
redoundant problem because of the redundant degrees of freedom of a 10R arm: \
these redundancies are used to impose ergonomic constraints by functional \
cost\[CloseCurlyQuote]s minimization (J, defined above).
Finally, joints\[CloseCurlyQuote] angles obtained as CLIK result (10 angles \
values) will be the ones that allow the execution of the task by minimizing \
J, so trying to follow the more ergonomic way to execute it.

All data are provided from......\
\>", "Text",
 CellChangeTimes->{{3.7993058723246155`*^9, 3.799305875562011*^9}, {
   3.799575466146116*^9, 3.7995754777359877`*^9}, {3.799582897517875*^9, 
   3.799582915809898*^9}, {3.7995831338789215`*^9, 3.7995832609571505`*^9}, {
   3.7995833005413136`*^9, 3.7995833353013754`*^9}, {3.7995833667323375`*^9, 
   3.7995839979993877`*^9}, {3.799584030682003*^9, 3.7995840670311966`*^9}, {
   3.7995842906781893`*^9, 3.7995843369269314`*^9}, {3.799584373381462*^9, 
   3.799584408964323*^9}, {3.7995850305726953`*^9, 3.799585054082838*^9}, 
   3.7995862873701987`*^9}],

Cell[CellGroupData[{

Cell["Loading Data (done)", "Section",
 CellChangeTimes->{{3.79930426965368*^9, 3.7993042951634665`*^9}, {
  3.799554088455702*^9, 3.799554092845667*^9}, {3.7995856293081455`*^9, 
  3.7995856326163516`*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\n", 
 RowBox[{"<<", "ScrewCalculusPro`"}], "\n", 
 RowBox[{"<<", "OdeSolve`"}]}], "Input",
 CellChangeTimes->{{3.79930379717654*^9, 3.7993038209370117`*^9}, 
   3.7993040991794715`*^9, 3.799305349840207*^9, {3.7993054596709642`*^9, 
   3.7993056530200453`*^9}, {3.79930586197828*^9, 3.799305863487266*^9}}],

Cell["\<\
Current trial execution: \[OpenCurlyDoubleQuote]H01 T07 L1\
\[CloseCurlyDoubleQuote]
It is about the first healthy (H) subject that executes the task number 7 \
(T07) using his left arm (L) (first of three trials)\
\>", "Text",
 CellChangeTimes->{{3.7995541001698666`*^9, 3.7995541288562803`*^9}, {
  3.7995850923232994`*^9, 3.7995851920964375`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Data", " ", "are", " ", "imported", " ", 
   RowBox[{"from", " ", ".", "csv"}], " ", "files", " ", "generated", " ", 
   "using", " ", "Matlab", " ", "function", " ", "\"\<writematrix\>\"", " ", 
   "on", " ", "data", " ", 
   RowBox[{"structures", ".", "\[IndentingNewLine]", "  ", "Inside"}], " ", 
   RowBox[{"handr", "/", "handl"}], " ", "are", " ", "loaded", " ", 
   "position", " ", "and", " ", "orientation", " ", "of", " ", "the", " ", 
   "hand", " ", "during", " ", "all", " ", "task", " ", 
   RowBox[{"execution", ":", " ", 
    RowBox[{
    "these", " ", "values", " ", "provide", " ", "us", " ", "the", " ", 
     "trajectory", " ", "to", " ", "be", " ", "followed", " ", "during", " ", 
     "inverse", " ", "kinematics", " ", 
     RowBox[{"execution", ".", "\[IndentingNewLine]", "Inside"}], " ", 
     RowBox[{"parr", "/", "parl"}], " ", "are", " ", "loaded", " ", "all", 
     " ", "parameters", " ", "needed", " ", "in", " ", "order", " ", "to", 
     " ", "build", " ", "the", " ", "arm", " ", "of", " ", "each", " ", 
     "subject", " ", "using", " ", "real", " ", 
     RowBox[{"size", "."}]}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799585200367295*^9, 3.7995852591851273`*^9}, {
  3.7995852896317215`*^9, 3.7995855973575716`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Handr", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<H01_T07_L1_hand_R.csv\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.799574781686279*^9, 3.799574785427456*^9}, 
   3.7995884299252167`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Handl", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<H01_T07_L1_hand_L.csv\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.799567135278695*^9, 3.7995672099985156`*^9}, {
   3.799567323203594*^9, 3.7995673255777564`*^9}, 3.799567628231701*^9, 
   3.7995676611212244`*^9, {3.79957303644703*^9, 3.7995730487434983`*^9}, 
   3.7995884315810766`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Handvr", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<H01_T07_L1_hand_vR.csv\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.799574781686279*^9, 3.799574785427456*^9}, 
   3.7995884299252167`*^9, {3.799899485657405*^9, 3.7998994932888255`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Handvl", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<H01_T07_L1_hand_vL.csv\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.799567135278695*^9, 3.7995672099985156`*^9}, {
   3.799567323203594*^9, 3.7995673255777564`*^9}, 3.799567628231701*^9, 
   3.7995676611212244`*^9, {3.79957303644703*^9, 3.7995730487434983`*^9}, 
   3.7995884315810766`*^9, {3.7998994905767784`*^9, 3.7998994949373026`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"parr", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<H01_T07_L1_par_R.csv\>\"", "]"}]}], ";", " ", 
  RowBox[{"parr", "//", "TableForm"}]}]], "Input",
 CellChangeTimes->{{3.7995747941705923`*^9, 3.7995748086552567`*^9}, {
  3.799575119263917*^9, 3.799575128755522*^9}, {3.799578067822527*^9, 
  3.7995780965010076`*^9}, {3.799588436324149*^9, 3.799588449208433*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"L5_pos_x\"\>", "\<\"L5_pos_y\"\>", "\<\"L5_pos_z\"\>", \
"\<\"L5_shoulder_dist\"\>", "\<\"depth_shoulder\"\>", \
"\<\"theta_shoulder\"\>", "\<\"upperarm_length\"\>", "\<\"forearm_length\"\>"},
    {
     RowBox[{"-", "0.1964`"}], "0.012548`", "0.92348`", "0.39413`", 
     "0.14293`", "0.3998`", "0.31801`", "0.26032`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7995751313789597`*^9, 3.79957783037029*^9, {3.7995780483339386`*^9, 
   3.7995781210723505`*^9}, 3.7995789749580345`*^9, 3.799588486738989*^9, 
   3.799590623417734*^9, 3.799590672512333*^9, 3.799592360668582*^9, 
   3.7995980484800663`*^9, 3.799598922383974*^9, 3.799600120491186*^9, 
   3.7996023515978985`*^9, 3.7996025062144613`*^9, 3.7996035610107265`*^9, 
   3.7996036550536413`*^9, 3.799604086159176*^9, 3.799605938344283*^9, 
   3.7996059943416924`*^9, 3.7996060316351085`*^9, 3.7997304469475713`*^9, 
   3.799733367846122*^9, 3.799900335523661*^9, 3.799900371481393*^9, 
   3.799900914117214*^9, 3.7999009730253787`*^9, {3.7999010054445*^9, 
   3.799901011025878*^9}, 3.799902516515259*^9, 3.799902629724092*^9, 
   3.7999028554001093`*^9, 3.799905187179639*^9, 3.7999061608868537`*^9, 
   3.799924419500104*^9, 3.799928727459417*^9, 3.7999290455606503`*^9, 
   3.7999294612537546`*^9, 3.7999797087619667`*^9, 3.799980192934802*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"parl", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<H01_T07_L1_par_L.csv\>\"", "]"}]}], ";", " ", 
  RowBox[{"parl", "//", "TableForm"}]}]], "Input",
 CellChangeTimes->{{3.799567253080696*^9, 3.799567264601029*^9}, {
   3.7995673285014963`*^9, 3.799567350567561*^9}, 3.7995676664001627`*^9, 
   3.79957299719167*^9, 3.7995748110166793`*^9, 3.7995748796446314`*^9, {
   3.799574985961316*^9, 3.7995750060225554`*^9}, {3.7995780832230835`*^9, 
   3.799578092205701*^9}, {3.799588439949695*^9, 3.799588446198387*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"L5_pos_x\"\>", "\<\"L5_pos_y\"\>", "\<\"L5_pos_z\"\>", \
"\<\"L5_shoulder_dist\"\>", "\<\"depth_shoulder\"\>", \
"\<\"theta_shoulder\"\>", "\<\"upperarm_length\"\>", "\<\"forearm_length\"\>"},
    {
     RowBox[{"-", "0.1964`"}], "0.012548`", "0.92348`", "0.39403`", 
     "0.11261`", "0.46639`", "0.31801`", "0.26032`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7995749896584167`*^9, 3.799575006650865*^9}, 
   3.799575107031822*^9, 3.7995778304141464`*^9, {3.799578099180958*^9, 
   3.799578121129156*^9}, 3.7995789749989247`*^9, 3.7995884868028183`*^9, 
   3.7995906234836273`*^9, 3.7995906726649666`*^9, 3.7995923607144547`*^9, 
   3.7995980485159707`*^9, 3.7995989224258595`*^9, 3.7996001205350695`*^9, 
   3.799602351638815*^9, 3.7996025062563515`*^9, 3.799603561054614*^9, 
   3.7996036550855556`*^9, 3.7996040861950817`*^9, 3.7996059383792424`*^9, 
   3.7996059943845644`*^9, 3.799606031677994*^9, 3.799730447244046*^9, 
   3.799733367876091*^9, 3.799900335552704*^9, 3.7999003715034256`*^9, 
   3.799900914144246*^9, 3.799900973101494*^9, {3.7999010054665213`*^9, 
   3.799901011051917*^9}, 3.7999025165453033`*^9, 3.7999026297581325`*^9, 
   3.79990285542114*^9, 3.799905187207692*^9, 3.7999061609199133`*^9, 
   3.7999244195918975`*^9, 3.7999287275774393`*^9, 3.7999290456456223`*^9, 
   3.799929461330551*^9, 3.799979708786994*^9, 3.799980192959839*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions", "Section",
 CellChangeTimes->{{3.799906631845425*^9, 3.7999066407556477`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xAxis", " ", "=", "  ", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{
        RowBox[{"Length", "[", "Handl", "]"}], "-", "1"}]}], "}"}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.7999075391916714`*^9, 3.7999075524710865`*^9}, {
  3.7999076561283083`*^9, 3.799907691799326*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Plot", " ", "of", " ", "a_"}], ",", " ", 
   RowBox[{
    RowBox[{"xAxis", " ", "represents", " ", "number", " ", "of", " ", 
     RowBox[{"samples", ".", " ", "Corresponding"}], " ", "time", " ", 
     "value"}], " ", "=", " ", 
    RowBox[{"xAsis", " ", "/", "samplerate"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7999087659280205`*^9, 3.7999088903690777`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Draw", "[", "a_", "]"}], " ", ":=", " ", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"b", " ", "=", " ", 
      RowBox[{"Transpose", " ", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"xAxis", ",", " ", 
          RowBox[{"(", "b", ")"}]}], "}"}], "]"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"ImageSize", " ", "->", " ", 
        RowBox[{"1100", "*", "Scala"}]}], ",", " ", 
       RowBox[{"AspectRatio", " ", "->", " ", 
        RowBox[{"0.25", "/", "Scala"}]}], ",", " ", 
       RowBox[{"PlotRange", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xx", ",", " ", 
            RowBox[{"xx", " ", "+", " ", "\[CapitalDelta]xx"}]}], "}"}], ",", 
          " ", "All"}], "}"}]}]}], "]"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Scala", ",", " ", "1"}], "}"}], ",", " ", "0.1", ",", " ", 
      "4"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xx", ",", " ", "0"}], "}"}], ",", " ", "0", ",", " ", 
      RowBox[{"Max", "[", "xAxis", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalDelta]xx", ",", " ", 
        RowBox[{
         RowBox[{"Max", "[", "xAxis", "]"}], "*", "1.05"}]}], "}"}], ",", " ",
       "0", ",", " ", 
      RowBox[{
       RowBox[{"Max", "[", "xAxis", "]"}], "*", "1.05"}]}], "}"}]}], " ", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.799906653709011*^9, 3.7999066796050944`*^9}, {
   3.799906902982177*^9, 3.799906930885928*^9}, 3.7999075173039265`*^9, {
   3.7999076507118654`*^9, 3.799907676055314*^9}, {3.7999246473551455`*^9, 
   3.7999246576330967`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Plot", " ", "of", " ", "a_", " ", "splitted", " ", "along", " ", "every", 
   " ", "single", " ", "axis", " ", "of", " ", "the", " ", "frame", " ", "it",
    " ", "is", " ", "referred", " ", "to"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7999085768378253`*^9, 3.7999087469133344`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Draw3", "[", "a_", "]"}], " ", ":=", " ", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"b", " ", "=", " ", 
      RowBox[{"Transpose", " ", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"xAxis", ",", " ", 
            RowBox[{"(", 
             RowBox[{"b", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}]}], "}"}], "]"}], ",", " ",
          "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"xAxis", ",", " ", 
            RowBox[{"(", 
             RowBox[{"b", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ")"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"xAxis", ",", " ", 
            RowBox[{"(", 
             RowBox[{"b", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ")"}]}], "}"}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", " ", "->", " ", 
        RowBox[{"1100", "*", "Scala"}]}], ",", " ", 
       RowBox[{"AspectRatio", " ", "->", " ", 
        RowBox[{"0.25", "/", "Scala"}]}], ",", " ", 
       RowBox[{"PlotRange", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xx", ",", " ", 
            RowBox[{"xx", " ", "+", " ", "\[CapitalDelta]xx"}]}], "}"}], ",", 
          " ", "All"}], "}"}]}]}], "]"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Scala", ",", " ", "1"}], "}"}], ",", " ", "0.1", ",", " ", 
      "4"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xx", ",", " ", "0"}], "}"}], ",", " ", "0", ",", " ", 
      RowBox[{"Max", "[", "xAxis", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalDelta]xx", ",", " ", 
        RowBox[{
         RowBox[{"Max", "[", "xAxis", "]"}], "*", "1.05"}]}], "}"}], ",", " ",
       "0", ",", " ", 
      RowBox[{
       RowBox[{"Max", "[", "xAxis", "]"}], "*", "1.05"}]}], "}"}]}], " ", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.799906653709011*^9, 3.7999066796050944`*^9}, {
   3.799906902982177*^9, 3.799906930885928*^9}, 3.7999075173039265`*^9, {
   3.7999076507118654`*^9, 3.799907681639669*^9}, {3.799907713681429*^9, 
   3.7999077468004923`*^9}, {3.7999245231342087`*^9, 3.799924528162668*^9}, {
   3.7999245661910934`*^9, 3.7999246243326607`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InterpLin", "[", 
    RowBox[{"a_", ",", "b_", ",", "t_"}], "]"}], ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"t", ">", "1"}], ",", " ", "ErrorBox", ",", 
     RowBox[{"a", "+", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "a"}], ")"}], " ", "*", " ", "t"}]}]}], "]"}]}], 
  ";"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Trajectory definition- (done) SLERP SMATTA CHIEDI A GABI", "Section",
 CellChangeTimes->{{3.7993046058439083`*^9, 3.799304625874298*^9}, 
   3.799557331063614*^9, {3.799585650922355*^9, 3.7995856534037204`*^9}, {
   3.7995924103469706`*^9, 3.799592423571974*^9}, {3.7996038628718615`*^9, 
   3.799603872180266*^9}, {3.7996044805695863`*^9, 3.7996045061016693`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"quat", " ", "interpolation", " ", "using", " ", "slerp"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.79958803139232*^9, 3.799588048964197*^9}}],

Cell["\<\
We have DT data, 60 sample each second, so we have to interpolate between \
samples because a CT trajectory is needed inside inverse kinematic alg.\
\>", "Text",
 CellChangeTimes->{{3.799588054364394*^9, 3.7995881156312094`*^9}, {
  3.799604597028613*^9, 3.799604627350134*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"samplerate", " ", "=", " ", "60"}], ";"}]], "Input",
 CellChangeTimes->{{3.799589230348918*^9, 3.799589237529182*^9}, {
  3.799589297204898*^9, 3.799589312389659*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"t0", " ", "=", " ", 
   RowBox[{"1", "/", "samplerate"}]}], " ", ";"}]], "Input",
 CellChangeTimes->{{3.79959920988717*^9, 3.799599219403736*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tend", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Length", " ", "[", "Handr", "]"}], "-", "1"}], ")"}], "/", 
    "samplerate"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799589314701689*^9, 3.7995894152541456`*^9}}],

Cell[CellGroupData[{

Cell["Right hand trajectory", "Subsection",
 CellChangeTimes->{{3.7995890235396576`*^9, 3.799589046707034*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"handr", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{"Handr", ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995884020995655`*^9, 3.799588497471877*^9}, {
   3.7995886044323397`*^9, 3.799588693871185*^9}, {3.799588727062657*^9, 
   3.799588732938038*^9}, {3.7995888330230017`*^9, 3.799588860627429*^9}, 
   3.7995889054086866`*^9, 3.799589074789773*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"handvr", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{"Handvr", ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7999002175298605`*^9, 3.7999002201863947`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"pos", " ", "and", " ", "quat", " ", "extraction"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.799589168301449*^9, 3.7995891978764114`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataposr", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "handr", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799588550365163*^9, 3.7995885890251837`*^9}, {
  3.7995887724611464`*^9, 3.7995887886241937`*^9}, {3.7995888212040577`*^9, 
  3.7995888220175467`*^9}, {3.7995889309417973`*^9, 3.799588941370019*^9}, {
  3.7995894920774455`*^9, 3.7995894924963255`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataquatr", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "handr", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"4", ";;", "7"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995889499033623`*^9, 3.7995889877990217`*^9}, {
  3.7995894859694967`*^9, 3.799589489930626*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"datavelr", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "handvr", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799588550365163*^9, 3.7995885890251837`*^9}, {
  3.7995887724611464`*^9, 3.7995887886241937`*^9}, {3.7995888212040577`*^9, 
  3.7995888220175467`*^9}, {3.7995889309417973`*^9, 3.799588941370019*^9}, {
  3.7995894920774455`*^9, 3.7995894924963255`*^9}, {3.7999001828839445`*^9, 
  3.799900200785821*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataangvelr", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "handvr", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"4", ";;", "6"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995889499033623`*^9, 3.7995889877990217`*^9}, {
   3.7995894859694967`*^9, 3.799589489930626*^9}, {3.7999001906099615`*^9, 
   3.7999002068899508`*^9}, 3.799900366818427*^9}],

Cell[CellGroupData[{

Cell["Orientation", "Subsubsection",
 CellChangeTimes->{{3.799899607362062*^9, 3.7998996287744894`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"quat", " ", "slerp"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7995894323491545`*^9, 3.7995894414382153`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"quatr", "[", "time_", "]"}], "=", "  ", "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"time", "\[GreaterEqual]", "tend"}], ",", " ", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"time2", " ", "=", " ", 
      RowBox[{"tend", "-", "0.001"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"Re", "[", 
      RowBox[{"Slerp", "[", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", 
          RowBox[{"Floor", "[", 
           RowBox[{"time2", "*", "samplerate"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"t", "=", 
          RowBox[{
           RowBox[{"time2", "*", " ", "samplerate"}], " ", "-", "i"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"dataquatr", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        "\t\t", 
        RowBox[{"dataquatr", "[", 
         RowBox[{"[", " ", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}], "]"}]}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"Re", "[", 
     RowBox[{"Slerp", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"time", "*", "samplerate"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"t", "=", 
         RowBox[{
          RowBox[{"time", " ", "*", " ", "samplerate"}], " ", "-", "i"}]}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"dataquatr", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"dataquatr", "[", 
        RowBox[{"[", " ", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7995894761710243`*^9, 3.799589502411525*^9}, {
   3.7995895535063667`*^9, 3.7995896795450687`*^9}, {3.799589762211838*^9, 
   3.799589833011608*^9}, {3.7995898693688555`*^9, 3.799589877777122*^9}, {
   3.7995899580985603`*^9, 3.799590052811866*^9}, {3.799590127247675*^9, 
   3.799590194329986*^9}, {3.799590282635967*^9, 3.799590302586648*^9}, {
   3.7995904317718596`*^9, 3.799590535861517*^9}, 3.799590566707635*^9, {
   3.7995906332200336`*^9, 3.7995906465985146`*^9}, {3.799590877400994*^9, 
   3.7995910269642973`*^9}, {3.79959106322342*^9, 3.799591068054925*^9}, {
   3.799591124003354*^9, 3.799591124855937*^9}, 3.7995922105951996`*^9, {
   3.7995989062524967`*^9, 3.7995989153134413`*^9}, {3.799979655443187*^9, 
   3.7999796610355434`*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"time", "\[GreaterEqual]", "3"}], ",", 
   RowBox[{
    RowBox[{"time2", "=", 
     RowBox[{"tend", "-", "0.001`"}]}], ";", 
    RowBox[{"Re", "[", 
     RowBox[{"Slerp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"time2", " ", "samplerate"}], "]"}]}], ";", 
        RowBox[{"t", "=", 
         RowBox[{
          RowBox[{"time2", " ", "samplerate"}], "-", "i"}]}], ";", 
        RowBox[{
        "dataquatr", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
        ",", 
       RowBox[{"dataquatr", "\[LeftDoubleBracket]", 
        RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], "]"}],
      "]"}]}], ",", 
   RowBox[{"Re", "[", 
    RowBox[{"Slerp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time", " ", "samplerate"}], "]"}]}], ";", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time", " ", "samplerate"}], "-", "i"}]}], ";", 
       RowBox[{
       "dataquatr", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"dataquatr", "\[LeftDoubleBracket]", 
       RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], "]"}], 
    "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.799979708915188*^9, 3.7999801931463385`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Position", "Subsubsection",
 CellChangeTimes->{{3.7998996361214857`*^9, 3.7998996438753633`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"pos", " ", "linear", " ", "interpolation"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799589449382847*^9, 3.7995894561919575`*^9}, {
  3.7995911826974335`*^9, 3.799591184586772*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"posr", "[", "time_", "]"}], "=", "  ", "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"time", "\[GreaterEqual]", "tend"}], ",", " ", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"time2", " ", "=", " ", 
      RowBox[{"tend", "-", "0.001"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"time2", "*", "samplerate"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"t", "=", 
         RowBox[{
          RowBox[{"time2", "*", " ", "samplerate"}], " ", "-", "i"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"dataposr", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"dataposr", "[", 
        RowBox[{"[", " ", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time", "*", "samplerate"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time", " ", "*", " ", "samplerate"}], " ", "-", "i"}]}], 
       ";", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"dataposr", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"dataposr", "[", 
       RowBox[{"[", " ", 
        RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7995894761710243`*^9, 3.799589502411525*^9}, {
   3.7995895535063667`*^9, 3.7995896795450687`*^9}, {3.799589762211838*^9, 
   3.799589833011608*^9}, {3.7995898693688555`*^9, 3.799589877777122*^9}, {
   3.7995899580985603`*^9, 3.799590052811866*^9}, {3.799590127247675*^9, 
   3.799590194329986*^9}, {3.799590282635967*^9, 3.799590302586648*^9}, {
   3.7995904317718596`*^9, 3.799590535861517*^9}, 3.799590566707635*^9, {
   3.7995906332200336`*^9, 3.7995906465985146`*^9}, {3.799590877400994*^9, 
   3.7995910269642973`*^9}, {3.79959106322342*^9, 3.799591068054925*^9}, {
   3.799591124003354*^9, 3.7995911458632956`*^9}, {3.799592047956257*^9, 
   3.7995920660904913`*^9}, {3.799729817387885*^9, 3.7997298231183705`*^9}, {
   3.799729854098565*^9, 3.799729859955495*^9}, 3.7999796659710236`*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"time", "\[GreaterEqual]", "3"}], ",", 
   RowBox[{
    RowBox[{"time2", "=", 
     RowBox[{"tend", "-", "0.001`"}]}], ";", 
    RowBox[{"InterpLin", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time2", " ", "samplerate"}], "]"}]}], ";", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time2", " ", "samplerate"}], "-", "i"}]}], ";", 
       RowBox[{
       "dataposr", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"dataposr", "\[LeftDoubleBracket]", 
       RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], 
     "]"}]}], ",", 
   RowBox[{"InterpLin", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{"time", " ", "samplerate"}], "]"}]}], ";", 
      RowBox[{"t", "=", 
       RowBox[{
        RowBox[{"time", " ", "samplerate"}], "-", "i"}]}], ";", 
      RowBox[{
      "dataposr", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
     ",", 
     RowBox[{"dataposr", "\[LeftDoubleBracket]", 
      RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], "]"}]}],
   "]"}]], "Output",
 CellChangeTimes->{3.799979708933226*^9, 3.7999801931673703`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Homogeneous Transform", "Subsubsection",
 CellChangeTimes->{{3.7998997395542235`*^9, 3.799899750743788*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"RotX", "[", 
    RowBox[{"Pi", "/", "2"}], "]"}], ":", " ", 
   RowBox[{
   "to", " ", "reorient", " ", "data", " ", "from", " ", "local", " ", 
    "Xsens", " ", "frame", " ", 
    RowBox[{"(", 
     RowBox[{"IMU", " ", "frame"}], ")"}], " ", "to", " ", "global", " ", 
    "frame"}]}], "  ", "*)"}]], "Input",
 CellChangeTimes->{3.7996048486976476`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"REEr", "[", "time_", "]"}], " ", "=", 
   RowBox[{
    RowBox[{"QuatToMat", "[", 
     RowBox[{"quatr", "[", "time", "]"}], "]"}], ".", 
    RowBox[{"RotX", "[", 
     RowBox[{"Pi", "/", "2"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7999261692822905`*^9, 3.7999261808557606`*^9}, 
   3.7999796761391797`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TEEr", "[", "time_", "]"}], " ", "=", " ", 
   RowBox[{"RPToHomogeneous", "[", 
    RowBox[{
     RowBox[{"REEr", "[", "time", "]"}], ",", 
     RowBox[{"posr", "[", "time", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799597771532092*^9, 3.7995978007631855`*^9}, {
   3.7995979415205035`*^9, 3.7995979588573112`*^9}, {3.7995979977379694`*^9, 
   3.7995980149521627`*^9}, {3.7995980875471926`*^9, 
   3.7995980903147593`*^9}, {3.7995999958333054`*^9, 
   3.7995999971498127`*^9}, {3.79960232680692*^9, 3.799602330755127*^9}, {
   3.799733696907731*^9, 3.7997337003226566`*^9}, {3.799926192668418*^9, 
   3.7999261949081497`*^9}, 3.7999796765630636`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Screws","wrongDimensions",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"RPToHomogeneous:\\\\\\\"\\\"}]\\): \
Dimensions of input matrices incorrect.\"",2,35,1,23101181751874115025,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7999797089572506`*^9, 3.7999801932175865`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"If\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"time\\\", \\\"\[GreaterEqual]\\\", \
\\\"3\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"time2\\\", \\\"=\\\", \
RowBox[{\\\"tend\\\", \\\"-\\\", \\\"0.001`\\\"}]}], \\\";\\\", \
RowBox[{\\\"InterpLin\\\", \\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"i\\\", \
\\\"=\\\", RowBox[{\\\"Floor\\\", \\\"[\\\", RowBox[{\\\"Times\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"]\\\"}]}], \\\";\\\", RowBox[{\\\"t\\\", \\\"=\\\", \
RowBox[{RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"+\\\", \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\";\\\", \
RowBox[{\\\"dataposr\\\", \\\"\[LeftDoubleBracket]\\\", \\\"i\\\", \\\"\
\[RightDoubleBracket]\\\"}]}], \\\",\\\", RowBox[{\\\"dataposr\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"i\\\", \\\"+\\\", \\\"1\\\"}], \\\"\
\[RightDoubleBracket]\\\"}], \\\",\\\", \\\"t\\\"}], \\\"]\\\"}]}], \
\\\",\\\", RowBox[{\\\"InterpLin\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"i\\\", \\\"=\\\", RowBox[{\\\"Floor\\\", \
\\\"[\\\", RowBox[{\\\"time\\\", \\\" \\\", \\\"samplerate\\\"}], \
\\\"]\\\"}]}], \\\";\\\", RowBox[{\\\"t\\\", \\\"=\\\", \
RowBox[{RowBox[{\\\"time\\\", \\\" \\\", \\\"samplerate\\\"}], \\\"-\\\", \
\\\"i\\\"}]}], \\\";\\\", RowBox[{\\\"dataposr\\\", \
\\\"\[LeftDoubleBracket]\\\", \\\"i\\\", \\\"\[RightDoubleBracket]\\\"}]}], \
\\\",\\\", RowBox[{\\\"dataposr\\\", \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\
\"i\\\", \\\"+\\\", \\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
\\\"t\\\"}], \\\"]\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\) cannot be transposed.\
\"",2,35,2,23101181751874115025,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7999797089572506`*^9, 3.7999801932606616`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Angular velocity", "Subsubsection",
 CellChangeTimes->{{3.7998996522428703`*^9, 3.7998996654214745`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"angular", " ", "velocity", " ", "linear", " ", "interpolation"}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799589449382847*^9, 3.7995894561919575`*^9}, {
  3.7995911826974335`*^9, 3.799591184586772*^9}, {3.799899814993404*^9, 
  3.799899821104529*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"angvelr", "[", "time_", "]"}], "=", "  ", "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"time", "\[GreaterEqual]", "tend"}], ",", " ", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"time2", " ", "=", " ", 
      RowBox[{"tend", "-", "0.001"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"time2", "*", "samplerate"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"t", "=", 
         RowBox[{
          RowBox[{"time2", "*", " ", "samplerate"}], " ", "-", "i"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"dataangvelr", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"dataangvelr", "[", 
        RowBox[{"[", " ", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time", "*", "samplerate"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time", " ", "*", " ", "samplerate"}], " ", "-", "i"}]}], 
       ";", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"dataangvelr", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"dataangvelr", "[", 
       RowBox[{"[", " ", 
        RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7995894761710243`*^9, 3.799589502411525*^9}, {
   3.7995895535063667`*^9, 3.7995896795450687`*^9}, {3.799589762211838*^9, 
   3.799589833011608*^9}, {3.7995898693688555`*^9, 3.799589877777122*^9}, {
   3.7995899580985603`*^9, 3.799590052811866*^9}, {3.799590127247675*^9, 
   3.799590194329986*^9}, {3.799590282635967*^9, 3.799590302586648*^9}, {
   3.7995904317718596`*^9, 3.799590535861517*^9}, 3.799590566707635*^9, {
   3.7995906332200336`*^9, 3.7995906465985146`*^9}, {3.799590877400994*^9, 
   3.7995910269642973`*^9}, {3.79959106322342*^9, 3.799591068054925*^9}, {
   3.799591124003354*^9, 3.7995911458632956`*^9}, {3.799592047956257*^9, 
   3.7995920660904913`*^9}, {3.799729817387885*^9, 3.7997298231183705`*^9}, {
   3.799729854098565*^9, 3.799729859955495*^9}, {3.7998998369699306`*^9, 
   3.79989983841738*^9}, {3.7998998828978395`*^9, 3.799899910089052*^9}, 
   3.7999796739549303`*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"time", "\[GreaterEqual]", "3"}], ",", 
   RowBox[{
    RowBox[{"time2", "=", 
     RowBox[{"tend", "-", "0.001`"}]}], ";", 
    RowBox[{"InterpLin", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time2", " ", "samplerate"}], "]"}]}], ";", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time2", " ", "samplerate"}], "-", "i"}]}], ";", 
       RowBox[{
       "dataangvelr", "\[LeftDoubleBracket]", "i", 
        "\[RightDoubleBracket]"}]}], ",", 
      RowBox[{"dataangvelr", "\[LeftDoubleBracket]", 
       RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], 
     "]"}]}], ",", 
   RowBox[{"InterpLin", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{"time", " ", "samplerate"}], "]"}]}], ";", 
      RowBox[{"t", "=", 
       RowBox[{
        RowBox[{"time", " ", "samplerate"}], "-", "i"}]}], ";", 
      RowBox[{
      "dataangvelr", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
      ",", 
     RowBox[{"dataangvelr", "\[LeftDoubleBracket]", 
      RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], "]"}]}],
   "]"}]], "Output",
 CellChangeTimes->{3.7999797090213575`*^9, 3.7999801932997217`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear velocity", "Subsubsection",
 CellChangeTimes->{{3.7998999310113134`*^9, 3.7998999489112716`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"linear", " ", "velocity", " ", "linear", " ", "interpolation"}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799589449382847*^9, 3.7995894561919575`*^9}, {
  3.7995911826974335`*^9, 3.799591184586772*^9}, {3.799899814993404*^9, 
  3.799899821104529*^9}, {3.799899964617754*^9, 3.7998999826092443`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"velr", "[", "time_", "]"}], "=", "  ", "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"time", "\[GreaterEqual]", "tend"}], ",", " ", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"time2", " ", "=", " ", 
      RowBox[{"tend", "-", "0.001"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"time2", "*", "samplerate"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"t", "=", 
         RowBox[{
          RowBox[{"time2", "*", " ", "samplerate"}], " ", "-", "i"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"datavelr", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"datavelr", "[", 
        RowBox[{"[", " ", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time", "*", "samplerate"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time", " ", "*", " ", "samplerate"}], " ", "-", "i"}]}], 
       ";", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"datavelr", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"datavelr", "[", 
       RowBox[{"[", " ", 
        RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7995894761710243`*^9, 3.799589502411525*^9}, {
   3.7995895535063667`*^9, 3.7995896795450687`*^9}, {3.799589762211838*^9, 
   3.799589833011608*^9}, {3.7995898693688555`*^9, 3.799589877777122*^9}, {
   3.7995899580985603`*^9, 3.799590052811866*^9}, {3.799590127247675*^9, 
   3.799590194329986*^9}, {3.799590282635967*^9, 3.799590302586648*^9}, {
   3.7995904317718596`*^9, 3.799590535861517*^9}, 3.799590566707635*^9, {
   3.7995906332200336`*^9, 3.7995906465985146`*^9}, {3.799590877400994*^9, 
   3.7995910269642973`*^9}, {3.79959106322342*^9, 3.799591068054925*^9}, {
   3.799591124003354*^9, 3.7995911458632956`*^9}, {3.799592047956257*^9, 
   3.7995920660904913`*^9}, {3.799729817387885*^9, 3.7997298231183705`*^9}, {
   3.799729854098565*^9, 3.799729859955495*^9}, {3.7998998369699306`*^9, 
   3.79989983841738*^9}, {3.7998998828978395`*^9, 3.799899910089052*^9}, {
   3.799899975514155*^9, 3.799899997137985*^9}, 3.799979679915078*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"time", "\[GreaterEqual]", "3"}], ",", 
   RowBox[{
    RowBox[{"time2", "=", 
     RowBox[{"tend", "-", "0.001`"}]}], ";", 
    RowBox[{"InterpLin", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time2", " ", "samplerate"}], "]"}]}], ";", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time2", " ", "samplerate"}], "-", "i"}]}], ";", 
       RowBox[{
       "datavelr", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"datavelr", "\[LeftDoubleBracket]", 
       RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], 
     "]"}]}], ",", 
   RowBox[{"InterpLin", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{"time", " ", "samplerate"}], "]"}]}], ";", 
      RowBox[{"t", "=", 
       RowBox[{
        RowBox[{"time", " ", "samplerate"}], "-", "i"}]}], ";", 
      RowBox[{
      "datavelr", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
     ",", 
     RowBox[{"datavelr", "\[LeftDoubleBracket]", 
      RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], "]"}]}],
   "]"}]], "Output",
 CellChangeTimes->{3.7999797090403767`*^9, 3.7999801933207693`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Left hand trajectory", "Subsection",
 CellChangeTimes->{{3.7995890504710264`*^9, 3.7995890673631077`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"handl", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{"Handl", ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995884020995655`*^9, 3.799588497471877*^9}, {
   3.7995886044323397`*^9, 3.799588693871185*^9}, {3.799588727062657*^9, 
   3.799588732938038*^9}, {3.7995888330230017`*^9, 3.799588860627429*^9}, 
   3.7995889054086866`*^9, 3.799589074789773*^9, {3.799900268074106*^9, 
   3.7999002721061306`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"handvl", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{"Handvl", ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7999002175298605`*^9, 3.7999002201863947`*^9}, {
  3.799900270545802*^9, 3.7999002744656706`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"pos", " ", "and", " ", "quat", " ", "extraction"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.799589168301449*^9, 3.7995891978764114`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataposl", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "handl", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799588550365163*^9, 3.7995885890251837`*^9}, {
  3.7995887724611464`*^9, 3.7995887886241937`*^9}, {3.7995888212040577`*^9, 
  3.7995888220175467`*^9}, {3.7995889309417973`*^9, 3.799588941370019*^9}, {
  3.7995894920774455`*^9, 3.7995894924963255`*^9}, {3.799900276617899*^9, 
  3.7999002840580425`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataquatl", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "handl", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"4", ";;", "7"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995889499033623`*^9, 3.7995889877990217`*^9}, {
  3.7995894859694967`*^9, 3.799589489930626*^9}, {3.799900277793661*^9, 
  3.799900285778366*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"datavell", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "handvl", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799588550365163*^9, 3.7995885890251837`*^9}, {
  3.7995887724611464`*^9, 3.7995887886241937`*^9}, {3.7995888212040577`*^9, 
  3.7995888220175467`*^9}, {3.7995889309417973`*^9, 3.799588941370019*^9}, {
  3.7995894920774455`*^9, 3.7995894924963255`*^9}, {3.7999001828839445`*^9, 
  3.799900200785821*^9}, {3.7999002805778227`*^9, 3.79990028692208*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataangvell", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "handvl", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"4", ";;", "6"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995889499033623`*^9, 3.7995889877990217`*^9}, {
   3.7995894859694967`*^9, 3.799589489930626*^9}, {3.7999001906099615`*^9, 
   3.7999002068899508`*^9}, {3.7999002820500317`*^9, 3.7999002879776587`*^9}, 
   3.7999003534670525`*^9}],

Cell[CellGroupData[{

Cell["Orientation", "Subsubsection",
 CellChangeTimes->{{3.799899607362062*^9, 3.7998996287744894`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"quat", " ", "slerp"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7995894323491545`*^9, 3.7995894414382153`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"quatl", "[", "time_", "]"}], "=", "  ", "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"time", "\[GreaterEqual]", "tend"}], ",", " ", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"time2", " ", "=", " ", 
      RowBox[{"tend", "-", "0.001"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"Re", "[", 
      RowBox[{"Slerp", "[", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", 
          RowBox[{"Floor", "[", 
           RowBox[{"time2", "*", "samplerate"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"t", "=", 
          RowBox[{
           RowBox[{"time2", "*", " ", "samplerate"}], " ", "-", "i"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"dataquatl", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        "\t\t", 
        RowBox[{"dataquatl", "[", 
         RowBox[{"[", " ", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}], "]"}]}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"Re", "[", 
     RowBox[{"Slerp", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"time", "*", "samplerate"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"t", "=", 
         RowBox[{
          RowBox[{"time", " ", "*", " ", "samplerate"}], " ", "-", "i"}]}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"dataquatl", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"dataquatl", "[", 
        RowBox[{"[", " ", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7995894761710243`*^9, 3.799589502411525*^9}, {
   3.7995895535063667`*^9, 3.7995896795450687`*^9}, {3.799589762211838*^9, 
   3.799589833011608*^9}, {3.7995898693688555`*^9, 3.799589877777122*^9}, {
   3.7995899580985603`*^9, 3.799590052811866*^9}, {3.799590127247675*^9, 
   3.799590194329986*^9}, {3.799590282635967*^9, 3.799590302586648*^9}, {
   3.7995904317718596`*^9, 3.799590535861517*^9}, 3.799590566707635*^9, {
   3.7995906332200336`*^9, 3.7995906465985146`*^9}, {3.799590877400994*^9, 
   3.7995910269642973`*^9}, {3.79959106322342*^9, 3.799591068054925*^9}, {
   3.799591124003354*^9, 3.799591124855937*^9}, 3.7995922105951996`*^9, {
   3.7995922663008738`*^9, 3.7995922823955956`*^9}, {3.799598854873976*^9, 
   3.799598863326732*^9}, 3.799979685035762*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"time", "\[GreaterEqual]", "3"}], ",", 
   RowBox[{
    RowBox[{"time2", "=", 
     RowBox[{"tend", "-", "0.001`"}]}], ";", 
    RowBox[{"Re", "[", 
     RowBox[{"Slerp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"time2", " ", "samplerate"}], "]"}]}], ";", 
        RowBox[{"t", "=", 
         RowBox[{
          RowBox[{"time2", " ", "samplerate"}], "-", "i"}]}], ";", 
        RowBox[{
        "dataquatl", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
        ",", 
       RowBox[{"dataquatl", "\[LeftDoubleBracket]", 
        RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], "]"}],
      "]"}]}], ",", 
   RowBox[{"Re", "[", 
    RowBox[{"Slerp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time", " ", "samplerate"}], "]"}]}], ";", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time", " ", "samplerate"}], "-", "i"}]}], ";", 
       RowBox[{
       "dataquatl", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"dataquatl", "\[LeftDoubleBracket]", 
       RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], "]"}], 
    "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.7999797091034813`*^9, 3.799980193399476*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Position", "Subsubsection",
 CellChangeTimes->{{3.7998996361214857`*^9, 3.7998996438753633`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"pos", " ", "linear", " ", "interpolation"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799589449382847*^9, 3.7995894561919575`*^9}, {
  3.7995911826974335`*^9, 3.799591184586772*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"posl", "[", "time_", "]"}], "=", "  ", "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"time", "\[GreaterEqual]", "tend"}], ",", " ", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"time2", " ", "=", " ", 
      RowBox[{"tend", "-", "0.001"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"time2", "*", "samplerate"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"t", "=", 
         RowBox[{
          RowBox[{"time2", "*", " ", "samplerate"}], " ", "-", "i"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"dataposl", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"dataposl", "[", 
        RowBox[{"[", " ", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time", "*", "samplerate"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time", " ", "*", " ", "samplerate"}], " ", "-", "i"}]}], 
       ";", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"dataposl", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"dataposl", "[", 
       RowBox[{"[", " ", 
        RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7995894761710243`*^9, 3.799589502411525*^9}, {
   3.7995895535063667`*^9, 3.7995896795450687`*^9}, {3.799589762211838*^9, 
   3.799589833011608*^9}, {3.7995898693688555`*^9, 3.799589877777122*^9}, {
   3.7995899580985603`*^9, 3.799590052811866*^9}, {3.799590127247675*^9, 
   3.799590194329986*^9}, {3.799590282635967*^9, 3.799590302586648*^9}, {
   3.7995904317718596`*^9, 3.799590535861517*^9}, 3.799590566707635*^9, {
   3.7995906332200336`*^9, 3.7995906465985146`*^9}, {3.799590877400994*^9, 
   3.7995910269642973`*^9}, {3.79959106322342*^9, 3.799591068054925*^9}, {
   3.799591124003354*^9, 3.7995911458632956`*^9}, {3.799592047956257*^9, 
   3.7995920660904913`*^9}, {3.7995922964536724`*^9, 3.799592310587088*^9}, 
   3.7999028436234694`*^9, 3.799905171931676*^9, 3.7999796876597166`*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"time", "\[GreaterEqual]", "3"}], ",", 
   RowBox[{
    RowBox[{"time2", "=", 
     RowBox[{"tend", "-", "0.001`"}]}], ";", 
    RowBox[{"InterpLin", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time2", " ", "samplerate"}], "]"}]}], ";", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time2", " ", "samplerate"}], "-", "i"}]}], ";", 
       RowBox[{
       "dataposl", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"dataposl", "\[LeftDoubleBracket]", 
       RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], 
     "]"}]}], ",", 
   RowBox[{"InterpLin", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{"time", " ", "samplerate"}], "]"}]}], ";", 
      RowBox[{"t", "=", 
       RowBox[{
        RowBox[{"time", " ", "samplerate"}], "-", "i"}]}], ";", 
      RowBox[{
      "dataposl", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
     ",", 
     RowBox[{"dataposl", "\[LeftDoubleBracket]", 
      RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], "]"}]}],
   "]"}]], "Output",
 CellChangeTimes->{3.7999797091615686`*^9, 3.7999801934220314`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Homogeneous Transform", "Subsubsection",
 CellChangeTimes->{{3.7998997395542235`*^9, 3.799899750743788*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"RotX", "[", 
    RowBox[{
     RowBox[{"-", "Pi"}], "/", "2"}], "]"}], ":", " ", 
   RowBox[{
   "to", " ", "reorient", " ", "data", " ", "from", " ", "local", " ", 
    "Xsens", " ", "frame", " ", 
    RowBox[{"(", 
     RowBox[{"IMU", " ", "frame"}], ")"}], " ", "to", " ", "global", " ", 
    "frame"}]}], "  ", "*)"}]], "Input",
 CellChangeTimes->{{3.7996000241628237`*^9, 3.799600062579359*^9}, {
  3.799604706775385*^9, 3.799604740100288*^9}, {3.799604772908438*^9, 
  3.7996048196097355`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"REEl", "[", "time_", "]"}], " ", "=", 
   RowBox[{
    RowBox[{"QuatToMat", "[", 
     RowBox[{"quatl", "[", "time", "]"}], "]"}], ".", 
    RowBox[{"RotX", "[", 
     RowBox[{
      RowBox[{"-", "Pi"}], "/", "2"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799926110072509*^9, 3.7999261379104223`*^9}, 
   3.7999796904188757`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TEEl", "[", "time_", "]"}], " ", "=", " ", 
    RowBox[{"RPToHomogeneous", "[", 
     RowBox[{
      RowBox[{"REEl", "[", "time", "]"}], ",", 
      RowBox[{"posl", "[", "time", "]"}]}], "]"}]}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.7995980388835707`*^9, 3.7995980440614824`*^9}, {
   3.7995991466378365`*^9, 3.7995991541079454`*^9}, {3.799599929262398*^9, 
   3.7995999472135625`*^9}, {3.7996000086224403`*^9, 3.7996000159383893`*^9}, 
   3.799600074693929*^9, {3.7996023007688084`*^9, 3.799602313640631*^9}, {
   3.799926133795458*^9, 3.799926148398514*^9}, 3.799979691082876*^9}],

Cell[BoxData[
 TemplateBox[{
  "Screws","wrongDimensions",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"RPToHomogeneous:\\\\\\\"\\\"}]\\): \
Dimensions of input matrices incorrect.\"",2,53,3,23101181751874115025,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.799979709183592*^9, 3.799980193451769*^9}],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"If\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"time\\\", \\\"\[GreaterEqual]\\\", \
\\\"3\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"time2\\\", \\\"=\\\", \
RowBox[{\\\"tend\\\", \\\"-\\\", \\\"0.001`\\\"}]}], \\\";\\\", \
RowBox[{\\\"InterpLin\\\", \\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"i\\\", \
\\\"=\\\", RowBox[{\\\"Floor\\\", \\\"[\\\", RowBox[{\\\"Times\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"]\\\"}]}], \\\";\\\", RowBox[{\\\"t\\\", \\\"=\\\", \
RowBox[{RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"+\\\", \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\";\\\", \
RowBox[{\\\"dataposl\\\", \\\"\[LeftDoubleBracket]\\\", \\\"i\\\", \\\"\
\[RightDoubleBracket]\\\"}]}], \\\",\\\", RowBox[{\\\"dataposl\\\", \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"i\\\", \\\"+\\\", \\\"1\\\"}], \\\"\
\[RightDoubleBracket]\\\"}], \\\",\\\", \\\"t\\\"}], \\\"]\\\"}]}], \
\\\",\\\", RowBox[{\\\"InterpLin\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"i\\\", \\\"=\\\", RowBox[{\\\"Floor\\\", \
\\\"[\\\", RowBox[{\\\"time\\\", \\\" \\\", \\\"samplerate\\\"}], \
\\\"]\\\"}]}], \\\";\\\", RowBox[{\\\"t\\\", \\\"=\\\", \
RowBox[{RowBox[{\\\"time\\\", \\\" \\\", \\\"samplerate\\\"}], \\\"-\\\", \
\\\"i\\\"}]}], \\\";\\\", RowBox[{\\\"dataposl\\\", \
\\\"\[LeftDoubleBracket]\\\", \\\"i\\\", \\\"\[RightDoubleBracket]\\\"}]}], \
\\\",\\\", RowBox[{\\\"dataposl\\\", \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\
\"i\\\", \\\"+\\\", \\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
\\\"t\\\"}], \\\"]\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\) cannot be transposed.\
\"",2,53,4,23101181751874115025,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.799979709183592*^9, 3.7999801934727907`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Angular velocity", "Subsubsection",
 CellChangeTimes->{{3.7998996522428703`*^9, 3.7998996654214745`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"angular", " ", "velocity", " ", "linear", " ", "interpolation"}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799589449382847*^9, 3.7995894561919575`*^9}, {
  3.7995911826974335`*^9, 3.799591184586772*^9}, {3.799899814993404*^9, 
  3.799899821104529*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"angvell", "[", "time_", "]"}], "=", "  ", "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"time", "\[GreaterEqual]", "tend"}], ",", " ", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"time2", " ", "=", " ", 
      RowBox[{"tend", "-", "0.001"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"time2", "*", "samplerate"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"t", "=", 
         RowBox[{
          RowBox[{"time2", "*", " ", "samplerate"}], " ", "-", "i"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"dataangvell", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"dataangvell", "[", 
        RowBox[{"[", " ", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time", "*", "samplerate"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time", " ", "*", " ", "samplerate"}], " ", "-", "i"}]}], 
       ";", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"dataangvell", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"dataangvell", "[", 
       RowBox[{"[", " ", 
        RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7995894761710243`*^9, 3.799589502411525*^9}, {
   3.7995895535063667`*^9, 3.7995896795450687`*^9}, {3.799589762211838*^9, 
   3.799589833011608*^9}, {3.7995898693688555`*^9, 3.799589877777122*^9}, {
   3.7995899580985603`*^9, 3.799590052811866*^9}, {3.799590127247675*^9, 
   3.799590194329986*^9}, {3.799590282635967*^9, 3.799590302586648*^9}, {
   3.7995904317718596`*^9, 3.799590535861517*^9}, 3.799590566707635*^9, {
   3.7995906332200336`*^9, 3.7995906465985146`*^9}, {3.799590877400994*^9, 
   3.7995910269642973`*^9}, {3.79959106322342*^9, 3.799591068054925*^9}, {
   3.799591124003354*^9, 3.7995911458632956`*^9}, {3.799592047956257*^9, 
   3.7995920660904913`*^9}, {3.799729817387885*^9, 3.7997298231183705`*^9}, {
   3.799729854098565*^9, 3.799729859955495*^9}, {3.7998998369699306`*^9, 
   3.79989983841738*^9}, {3.7998998828978395`*^9, 3.799899910089052*^9}, {
   3.7999000912337933`*^9, 3.799900104146101*^9}, 3.799979693027808*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"time", "\[GreaterEqual]", "3"}], ",", 
   RowBox[{
    RowBox[{"time2", "=", 
     RowBox[{"tend", "-", "0.001`"}]}], ";", 
    RowBox[{"InterpLin", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time2", " ", "samplerate"}], "]"}]}], ";", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time2", " ", "samplerate"}], "-", "i"}]}], ";", 
       RowBox[{
       "dataangvell", "\[LeftDoubleBracket]", "i", 
        "\[RightDoubleBracket]"}]}], ",", 
      RowBox[{"dataangvell", "\[LeftDoubleBracket]", 
       RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], 
     "]"}]}], ",", 
   RowBox[{"InterpLin", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{"time", " ", "samplerate"}], "]"}]}], ";", 
      RowBox[{"t", "=", 
       RowBox[{
        RowBox[{"time", " ", "samplerate"}], "-", "i"}]}], ";", 
      RowBox[{
      "dataangvell", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
      ",", 
     RowBox[{"dataangvell", "\[LeftDoubleBracket]", 
      RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], "]"}]}],
   "]"}]], "Output",
 CellChangeTimes->{3.7999797092416897`*^9, 3.7999801935128574`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Linear velocity", "Subsubsection",
 CellChangeTimes->{{3.7998999310113134`*^9, 3.7998999489112716`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"linear", " ", "velocity", " ", "linear", " ", "interpolation"}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799589449382847*^9, 3.7995894561919575`*^9}, {
  3.7995911826974335`*^9, 3.799591184586772*^9}, {3.799899814993404*^9, 
  3.799899821104529*^9}, {3.799899964617754*^9, 3.7998999826092443`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"vell", "[", "time_", "]"}], "=", "  ", "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"time", "\[GreaterEqual]", "tend"}], ",", " ", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"time2", " ", "=", " ", 
      RowBox[{"tend", "-", "0.001"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"time2", "*", "samplerate"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"t", "=", 
         RowBox[{
          RowBox[{"time2", "*", " ", "samplerate"}], " ", "-", "i"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"datavell", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"datavell", "[", 
        RowBox[{"[", " ", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"InterpLin", "[", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time", "*", "samplerate"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time", " ", "*", " ", "samplerate"}], " ", "-", "i"}]}], 
       ";", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"datavell", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"datavell", "[", 
       RowBox[{"[", " ", 
        RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      "\t\t", "t"}], "\[IndentingNewLine]", "\t", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7995894761710243`*^9, 3.799589502411525*^9}, {
   3.7995895535063667`*^9, 3.7995896795450687`*^9}, {3.799589762211838*^9, 
   3.799589833011608*^9}, {3.7995898693688555`*^9, 3.799589877777122*^9}, {
   3.7995899580985603`*^9, 3.799590052811866*^9}, {3.799590127247675*^9, 
   3.799590194329986*^9}, {3.799590282635967*^9, 3.799590302586648*^9}, {
   3.7995904317718596`*^9, 3.799590535861517*^9}, 3.799590566707635*^9, {
   3.7995906332200336`*^9, 3.7995906465985146`*^9}, {3.799590877400994*^9, 
   3.7995910269642973`*^9}, {3.79959106322342*^9, 3.799591068054925*^9}, {
   3.799591124003354*^9, 3.7995911458632956`*^9}, {3.799592047956257*^9, 
   3.7995920660904913`*^9}, {3.799729817387885*^9, 3.7997298231183705`*^9}, {
   3.799729854098565*^9, 3.799729859955495*^9}, {3.7998998369699306`*^9, 
   3.79989983841738*^9}, {3.7998998828978395`*^9, 3.799899910089052*^9}, {
   3.799899975514155*^9, 3.799899997137985*^9}, {3.7999000738177223`*^9, 
   3.799900083969921*^9}, 3.7999796955957737`*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"time", "\[GreaterEqual]", "3"}], ",", 
   RowBox[{
    RowBox[{"time2", "=", 
     RowBox[{"tend", "-", "0.001`"}]}], ";", 
    RowBox[{"InterpLin", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"time2", " ", "samplerate"}], "]"}]}], ";", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"time2", " ", "samplerate"}], "-", "i"}]}], ";", 
       RowBox[{
       "datavell", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"datavell", "\[LeftDoubleBracket]", 
       RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], 
     "]"}]}], ",", 
   RowBox[{"InterpLin", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{"time", " ", "samplerate"}], "]"}]}], ";", 
      RowBox[{"t", "=", 
       RowBox[{
        RowBox[{"time", " ", "samplerate"}], "-", "i"}]}], ";", 
      RowBox[{
      "datavell", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
     ",", 
     RowBox[{"datavell", "\[LeftDoubleBracket]", 
      RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "t"}], "]"}]}],
   "]"}]], "Output",
 CellChangeTimes->{3.7999797092597165`*^9, 3.7999801935352917`*^9}]
}, Closed]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7998995871950707`*^9, 3.799899591289016*^9}}]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["10R construction Denavit Hartenberg (done)", "Section",
 CellChangeTimes->{{3.7993041148775673`*^9, 3.799304162433352*^9}, {
   3.7993043060564065`*^9, 3.799304331079752*^9}, 3.799557327337248*^9, {
   3.7995856588272266`*^9, 3.7995856603022757`*^9}}],

Cell[CellGroupData[{

Cell["Parameters", "Subsection",
 CellChangeTimes->{{3.799306023953418*^9, 3.799306036759206*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Parameters", " ", "assignment", " ", "using", " ", "loaded", " ", "data"}],
   " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7995856685788174`*^9, 3.799585703199294*^9}}],

Cell[CellGroupData[{

Cell["General assignment", "Subsubsection",
 CellChangeTimes->{{3.799585884739871*^9, 3.799585902019661*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"L5Rot", " ", "=", " ", 
   RowBox[{"RotX", "[", 
    RowBox[{
     RowBox[{"-", "Pi"}], "/", "2"}], "]"}]}], ";"}]], "Input",
 FontWeight->"Plain"],

Cell[BoxData[
 RowBox[{
  RowBox[{"L5Pos", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"parl", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
     RowBox[{
      RowBox[{"parl", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"parl", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7993076792813435`*^9, 3.7993077244854803`*^9}, {
  3.799553928094157*^9, 3.799553948790646*^9}, {3.7995753642162533`*^9, 
  3.7995753867156816`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tg0", " ", "=", " ", 
   RowBox[{"RPToHomogeneous", "[", 
    RowBox[{"L5Rot", ",", " ", "L5Pos"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7993072083421474`*^9, 3.799307215450121*^9}, {
  3.7993073106798744`*^9, 3.7993073114887123`*^9}, {3.799307446798936*^9, 
  3.7993074588786383`*^9}, {3.799307653650872*^9, 3.7993076689310904`*^9}, {
  3.79930773106895*^9, 3.799307737930604*^9}, {3.799307775423293*^9, 
  3.7993077902377434`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tg", " ", "=", " ", 
   RowBox[{"RPToHomogeneous", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "3", "]"}], ",", " ", "L5Pos"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.799559288794838*^9, 3.799559317452064*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Right arm", "Subsubsection",
 CellChangeTimes->{{3.799585713066869*^9, 3.799585723182821*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Theta]r", "=", 
   RowBox[{
    RowBox[{"parr", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "6", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7993082342950516`*^9, 3.799308241216509*^9}, 
   3.79930986088422*^9, {3.799310242661644*^9, 3.7993102463112707`*^9}, {
   3.7995750569778323`*^9, 3.7995750846478815`*^9}, 3.7995751438267727`*^9, 
   3.7995780347485857`*^9, 3.7995857855999813`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a3r", "=", 
   RowBox[{
    RowBox[{"parr", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799309734670747*^9, 3.799309736419035*^9}, 
   3.799309866426634*^9, {3.799310169550455*^9, 3.7993101729232993`*^9}, 
   3.799575150681938*^9, 3.7995752006886597`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d3r", "=", 
   RowBox[{
    RowBox[{"parr", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "5", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799309767785523*^9, 3.7993097698203316`*^9}, 
   3.799309870438949*^9, {3.7993101561015472`*^9, 3.7993101601766896`*^9}, 
   3.7995751531873665`*^9, {3.799575240537356*^9, 3.7995752694540205`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d6r", "=", 
   RowBox[{"-", 
    RowBox[{
     RowBox[{"parr", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", "7", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7993097747130246`*^9, 3.7993097768896027`*^9}, 
   3.799309873735575*^9, {3.7993101804635057`*^9, 3.7993101846440277`*^9}, 
   3.7995751554422936`*^9, 3.7995752529112844`*^9, {3.7995752852548304`*^9, 
   3.7995752857385197`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d8r", "=", 
   RowBox[{"-", 
    RowBox[{
     RowBox[{"parr", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", "8", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7993097786922617`*^9, 3.7993097805788403`*^9}, 
   3.799309877069992*^9, {3.7993101941375895`*^9, 3.799310199701789*^9}, 
   3.799575158505872*^9, 3.7995752549864826`*^9, 3.799575288726509*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d10r", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.7993097829815545`*^9, 3.7993097854809685`*^9}, 
   3.7993098805054874`*^9, 3.7993102097973566`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Left arm", "Subsubsection",
 CellChangeTimes->{{3.7995857672310495`*^9, 3.799585780231289*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Theta]l", "=", 
   RowBox[{
    RowBox[{"parl", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "6", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799309004745397*^9, 3.7993090080424423`*^9}, {
   3.7993097246693325`*^9, 3.799309729541622*^9}, 3.7993098833797307`*^9, {
   3.799310298087306*^9, 3.799310303669343*^9}, {3.7995753092215815`*^9, 
   3.799575314856491*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a3l", "=", 
   RowBox[{
    RowBox[{"parl", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799309734670747*^9, 3.799309736419035*^9}, {
   3.799309810524946*^9, 3.7993098108642745`*^9}, 3.7993098861018877`*^9, {
   3.799310271594725*^9, 3.7993102748139467`*^9}, {3.7995753196517982`*^9, 
   3.799575329287796*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d3l", "=", 
   RowBox[{"-", 
    RowBox[{
     RowBox[{"parl", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", "5", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799309767785523*^9, 3.7993097698203316`*^9}, {
   3.7993098150729113`*^9, 3.7993098153466926`*^9}, 3.799309888775135*^9, {
   3.799310260868473*^9, 3.799310264633499*^9}, {3.7995753219774237`*^9, 
   3.7995753316290007`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d6l", "=", 
   RowBox[{
    RowBox[{"parl", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "7", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7993097747130246`*^9, 3.7993097768896027`*^9}, {
   3.799309818445693*^9, 3.7993098187319317`*^9}, 3.7993098912793026`*^9, {
   3.7993102803893538`*^9, 3.799310282965793*^9}, {3.7995753241617513`*^9, 
   3.799575333919882*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d8l", "=", 
   RowBox[{
    RowBox[{"parl", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "8", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7993097786922617`*^9, 3.7993097805788403`*^9}, {
   3.7993098213901277`*^9, 3.7993098216954536`*^9}, 3.7993098937125983`*^9, {
   3.799310287123352*^9, 3.7993102900010414`*^9}, {3.799575325958853*^9, 
   3.799575336491181*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d10l", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.7993097829815545`*^9, 3.7993097854809685`*^9}, {
   3.799309824641467*^9, 3.799309824968631*^9}, 3.7993098984317255`*^9, 
   3.7993102182780647`*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Denavit Hartenberg Table and EE transform", "Subsection",
 CellChangeTimes->{{3.7993060400554314`*^9, 3.7993060937009387`*^9}, 
   3.799585950860078*^9}],

Cell["\<\
Note: \[OpenCurlyDoubleQuote]g\[CloseCurlyDoubleQuote] frame is the provided \
global frame in which the data are expressed.\
\>", "Text",
 CellChangeTimes->{{3.799306072839709*^9, 3.7993060797572145`*^9}, {
  3.799306352245037*^9, 3.7993063598876524`*^9}, {3.799585930337002*^9, 
  3.7995859392221937`*^9}}],

Cell[CellGroupData[{

Cell["right arm", "Subsubsection",
 CellChangeTimes->{{3.7993072731482244`*^9, 3.7993072938897657`*^9}, {
  3.7993080881098814`*^9, 3.7993080884988756`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]3r", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "Pi"}], "/", "2"}], " ", "-", " ", "\[Theta]r"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]4r", " ", "=", " ", 
   RowBox[{
    RowBox[{"Pi", "/", "2"}], " ", "+", " ", "\[Theta]r"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.799307747635585*^9, 3.7993077840722284`*^9}, {
   3.7993081590781226`*^9, 3.7993082206215734`*^9}, {3.799308263643032*^9, 
   3.799308295352331*^9}, 3.79956334801563*^9, 3.799563997212399*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Denavit", " ", "Hartenberg", " ", "Table", " ", "for", " ", "right", " ", 
   "arm"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7995859678257155`*^9, 3.799585972364581*^9}, {
  3.79958600298276*^9, 3.799586009336763*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"DH", " ", "order", " ", 
    RowBox[{"is", ":", " ", "a"}]}], ",", " ", "alpha", ",", " ", "d", ",", 
   " ", "theta"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7993063629573965`*^9, 3.799306378558683*^9}, {
  3.7995865495069675`*^9, 3.7995865538666253`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T01r", "[", "q1_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"+", "Pi"}], "/", "2"}], ",", "0", ",", "q1", ",", 
      "\"\<R\>\""}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764862097219008*^9, 3.764862154836344*^9}, {
   3.764862208885091*^9, 3.7648622289428053`*^9}, {3.764909784415634*^9, 
   3.764909784962381*^9}, 3.7651022406737347`*^9, 3.799306009146008*^9, {
   3.799307200248787*^9, 3.799307201551299*^9}, 3.799307818158717*^9, {
   3.7993079220209455`*^9, 3.799307931652195*^9}, {3.7993079805285664`*^9, 
   3.799307990640476*^9}, {3.799308042745163*^9, 3.799308044934311*^9}, 
   3.799309026109894*^9, 3.799563994356498*^9},
 ExpressionUUID -> "c291e399-0c6c-4bae-afcc-6b9ec38c2a96"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T12r", "[", "q2_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", 
      RowBox[{"q2", " ", "+", " ", 
       RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.764862253702861*^9, 3.764862282325665*^9}, {
   3.764909790736429*^9, 3.764909791443843*^9}, 3.765102271340701*^9, 
   3.7993078225509005`*^9, {3.7993079363416557`*^9, 3.79930794045573*^9}, {
   3.7993079848050785`*^9, 3.7993080016141367`*^9}, {3.7993080512245016`*^9, 
   3.799308053923278*^9}, 3.7993090272864666`*^9, {3.7993091200684967`*^9, 
   3.799309124937396*^9}},
 ExpressionUUID -> "84243484-b146-4646-8fe1-09f283de623b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T23r", "[", "q3_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"a3r", ",", 
      RowBox[{"Pi", "/", "2"}], ",", "d3r", ",", 
      RowBox[{"q3", " ", "+", " ", "\[Theta]3r"}], ",", "\"\<R\>\""}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.76486228807624*^9, 3.764862329372554*^9}, {
   3.7649097986295967`*^9, 3.7649097993263817`*^9}, 3.765102274537818*^9, {
   3.799307825489117*^9, 3.7993078257244153`*^9}, {3.7993078723348637`*^9, 
   3.7993078730538692`*^9}, {3.7993079432402143`*^9, 3.799307975269594*^9}, 
   3.7993080052734003`*^9, {3.7993080566310363`*^9, 3.7993080795637603`*^9}, 
   3.799309028429207*^9, {3.799309223739346*^9, 3.7993092262283087`*^9}},
 ExpressionUUID -> "c131592d-325c-4219-a5a6-5f8e28c79dd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T34r", "[", "q4_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Alpha]4r", ",", "0", ",", 
      RowBox[{"q4", " ", "+", " ", 
       RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.764862320226762*^9, 3.764862324062711*^9}, {
   3.7648623546291513`*^9, 3.764862379868434*^9}, {3.764904568969067*^9, 
   3.764904574856801*^9}, {3.764909801460581*^9, 3.764909802131589*^9}, 
   3.76510227733145*^9, 3.7993078291761966`*^9, {3.7993080119076138`*^9, 
   3.79930801745179*^9}, {3.7993080815314665`*^9, 3.7993081024695497`*^9}, 
   3.799309029474966*^9},
 ExpressionUUID -> "ad4684fc-7ddd-4b63-9126-3f395283cb31"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T45r", "[", "q5_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", 
      RowBox[{"q5", " ", "-", " ", 
       RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.764862097219008*^9, 3.764862154836344*^9}, {
   3.764862208885091*^9, 3.7648622289428053`*^9}, {3.764909784415634*^9, 
   3.764909784962381*^9}, 3.7651022406737347`*^9, 3.799306009146008*^9, {
   3.799307068629629*^9, 3.799307079159524*^9}, 3.7993078313184595`*^9, {
   3.7993080202932673`*^9, 3.799308020704167*^9}, {3.799308106937532*^9, 
   3.799308110068211*^9}, 3.7993090303203444`*^9},
 ExpressionUUID -> "c291e399-0c6c-4bae-afcc-6b9ec38c2a96"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T56r", "[", "q6_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"Pi", "/", "2"}], ",", "d6r", ",", "q6", ",", "\"\<R\>\""}], 
     "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764862253702861*^9, 3.764862282325665*^9}, {
   3.764909790736429*^9, 3.764909791443843*^9}, 3.765102271340701*^9, {
   3.799307086010206*^9, 3.7993070896005735`*^9}, 3.7993078341589055`*^9, {
   3.799307879287269*^9, 3.799307879892585*^9}, 3.7993080237070665`*^9, {
   3.79930811297945*^9, 3.799308113498988*^9}, 3.799309031046692*^9, {
   3.7993092154416943`*^9, 3.799309219090613*^9}},
 ExpressionUUID -> "84243484-b146-4646-8fe1-09f283de623b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T67r", "[", "q7_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"Pi", "/", "2"}], ",", "0", ",", 
      RowBox[{"q7", " ", "+", " ", "Pi"}], ",", "\"\<R\>\""}], "}"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.76486228807624*^9, 3.764862329372554*^9}, {
   3.7649097986295967`*^9, 3.7649097993263817`*^9}, 3.765102274537818*^9, {
   3.7993070922774024`*^9, 3.799307095690277*^9}, 3.799307837733356*^9, 
   3.799308026549467*^9, {3.79930811698972*^9, 3.7993081371607256`*^9}, 
   3.799309031857193*^9},
 ExpressionUUID -> "c131592d-325c-4219-a5a6-5f8e28c79dd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T78r", "[", "q8_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "2"}], ",", "d8r", ",", "q8", ",", 
      "\"\<R\>\""}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764862320226762*^9, 3.764862324062711*^9}, {
   3.7648623546291513`*^9, 3.764862379868434*^9}, {3.764904568969067*^9, 
   3.764904574856801*^9}, {3.764909801460581*^9, 3.764909802131589*^9}, 
   3.76510227733145*^9, {3.799307101596485*^9, 3.799307104871729*^9}, 
   3.799307840017273*^9, {3.7993078852761908`*^9, 3.7993078858626223`*^9}, {
   3.7993080286299047`*^9, 3.7993080288912764`*^9}, {3.7993081229826794`*^9, 
   3.7993081233417196`*^9}, 3.7993090328642106`*^9, 3.7993092140767336`*^9},
 ExpressionUUID -> "ad4684fc-7ddd-4b63-9126-3f395283cb31"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T89r", "[", "q9_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"Pi", "/", "2"}], ",", "0", ",", 
      RowBox[{"q9", " ", "+", " ", 
       RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.76486228807624*^9, 3.764862329372554*^9}, {
   3.7649097986295967`*^9, 3.7649097993263817`*^9}, 3.765102274537818*^9, {
   3.7993070922774024`*^9, 3.7993071253031373`*^9}, 3.7993078429185133`*^9, 
   3.7993080318153872`*^9, {3.799308125521854*^9, 3.79930814279174*^9}, 
   3.7993090337509937`*^9},
 ExpressionUUID -> "c131592d-325c-4219-a5a6-5f8e28c79dd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T910r", "[", "q10_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"Pi", "/", "2"}], ",", "d10r", ",", 
      RowBox[{"q10", " ", "+", " ", 
       RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.764862320226762*^9, 3.764862324062711*^9}, {
   3.7648623546291513`*^9, 3.764862379868434*^9}, {3.764904568969067*^9, 
   3.764904574856801*^9}, {3.764909801460581*^9, 3.764909802131589*^9}, 
   3.76510227733145*^9, {3.799307101596485*^9, 3.799307137393798*^9}, 
   3.7993078490949993`*^9, {3.7993078902459087`*^9, 3.7993078913849025`*^9}, 
   3.7993080344114466`*^9, {3.799308128970621*^9, 3.799308147761381*^9}, 
   3.7993090356472864`*^9, 3.799309211242158*^9},
 ExpressionUUID -> "ad4684fc-7ddd-4b63-9126-3f395283cb31"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"EE", " ", 
   RowBox[{"transform", ":", " ", 
    RowBox[{"right", " ", "hand"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799586092632036*^9, 3.7995861365229964`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TgEEr", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], "=", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01r", "[", "q1", "]"}], ".", 
    RowBox[{"T12r", "[", "q2", "]"}], ".", 
    RowBox[{"T23r", "[", "q3", "]"}], ".", 
    RowBox[{"T34r", "[", "q4", "]"}], ".", 
    RowBox[{"T45r", "[", "q5", "]"}], ".", 
    RowBox[{"T56r", "[", "q6", "]"}], ".", 
    RowBox[{"T67r", "[", "q7", "]"}], ".", 
    RowBox[{"T78r", "[", "q8", "]"}], ".", 
    RowBox[{"T89r", "[", "q9", "]"}], ".", 
    RowBox[{"T910r", "[", "q10", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7649048499309*^9, 3.764904919871928*^9}, {
   3.76490498496495*^9, 3.764904987106889*^9}, {3.764909812358943*^9, 
   3.764909817212101*^9}, 3.765102396993044*^9, {3.765103393948989*^9, 
   3.7651033990461187`*^9}, {3.7993083457225885`*^9, 
   3.7993083788350563`*^9}, {3.79930903710919*^9, 3.7993090705968957`*^9}, {
   3.7993093557960625`*^9, 3.7993094768822484`*^9}, {3.799310427952053*^9, 
   3.799310432061987*^9}, {3.7995766267384553`*^9, 3.799576628084377*^9}},
 ExpressionUUID -> "2369f496-18c4-4174-952a-6edb1bd994ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"posEEr", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], "=", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"TgEEr", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7", 
       ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.764909826652611*^9, 3.76490985170117*^9}, {
   3.7649099304712543`*^9, 3.7649099525931063`*^9}, {3.765017061742051*^9, 
   3.765017062927095*^9}, 3.7651035167512217`*^9, {3.799309528390517*^9, 
   3.799309592088688*^9}, 3.7993096236574764`*^9, {3.7995766309868035`*^9, 
   3.7995766599506764`*^9}},
 ExpressionUUID -> "d5c2ca86-dbd9-4c21-8413-5cedd59cc621"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"orEEr", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], "=", 
   RowBox[{"RigidOrientation", "[", 
    RowBox[{"TgEEr", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7", 
       ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7649099559516773`*^9, 3.764909993246737*^9}, {
   3.765017068392355*^9, 3.765017069772504*^9}, 3.7651035919272947`*^9, {
   3.765108682861401*^9, 3.7651086865075808`*^9}, 3.7993095341632147`*^9, {
   3.7993096505533214`*^9, 3.7993096824823303`*^9}, {3.7995766344319406`*^9, 
   3.799576665908189*^9}},
 ExpressionUUID -> "4e8cfabd-ac4d-47d6-acd4-26bbeb13b8f2"]
}, Closed]],

Cell[CellGroupData[{

Cell["left arm", "Subsubsection",
 CellChangeTimes->{{3.7993072731482244`*^9, 3.7993072938897657`*^9}, {
  3.7993080881098814`*^9, 3.7993080884988756`*^9}, {3.799308974024413*^9, 
  3.79930897541873*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]3l", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "Pi"}], "/", "2"}], " ", "-", " ", "\[Theta]l"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]4l", " ", "=", " ", 
   RowBox[{
    RowBox[{"Pi", "/", "2"}], " ", "+", " ", "\[Theta]l"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.799307747635585*^9, 3.7993077840722284`*^9}, {
  3.7993081590781226`*^9, 3.7993082206215734`*^9}, {3.799308263643032*^9, 
  3.799308295352331*^9}, {3.7993089794492397`*^9, 3.799308997023697*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Denavit", " ", "Hartenberg", " ", "Table", " ", "for", " ", "left", " ", 
   "arm"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7995860199064674`*^9, 3.7995860203063984`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"DH", " ", "order", " ", 
    RowBox[{"is", ":", " ", "a"}]}], ",", " ", "alpha", ",", " ", "d", ",", 
   " ", "theta"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7993063629573965`*^9, 3.799306378558683*^9}, {
  3.7995865495069675`*^9, 3.7995865538666253`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T01l", "[", "q1_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", "q1", ",", 
      "\"\<R\>\""}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764862097219008*^9, 3.764862154836344*^9}, {
   3.764862208885091*^9, 3.7648622289428053`*^9}, {3.764909784415634*^9, 
   3.764909784962381*^9}, 3.7651022406737347`*^9, 3.799306009146008*^9, {
   3.799307200248787*^9, 3.799307201551299*^9}, 3.799307818158717*^9, {
   3.7993079220209455`*^9, 3.799307931652195*^9}, {3.7993079805285664`*^9, 
   3.799307990640476*^9}, {3.799308042745163*^9, 3.799308044934311*^9}, 
   3.7993090418122163`*^9},
 ExpressionUUID -> "c291e399-0c6c-4bae-afcc-6b9ec38c2a96"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T12l", "[", "q2_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"Pi", "/", "2"}], ",", "0", ",", 
      RowBox[{"q2", " ", "+", " ", 
       RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.764862253702861*^9, 3.764862282325665*^9}, {
   3.764909790736429*^9, 3.764909791443843*^9}, 3.765102271340701*^9, 
   3.7993078225509005`*^9, {3.7993079363416557`*^9, 3.79930794045573*^9}, {
   3.7993079848050785`*^9, 3.7993080016141367`*^9}, {3.7993080512245016`*^9, 
   3.799308053923278*^9}, 3.7993090428629665`*^9, {3.799309106400958*^9, 
   3.79930911362148*^9}, 3.79930926198204*^9},
 ExpressionUUID -> "84243484-b146-4646-8fe1-09f283de623b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T23l", "[", "q3_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"a3l", ",", 
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "2"}], ",", "d3l", ",", 
      RowBox[{"q3", " ", "+", " ", "\[Theta]3l"}], ",", "\"\<R\>\""}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.76486228807624*^9, 3.764862329372554*^9}, {
   3.7649097986295967`*^9, 3.7649097993263817`*^9}, 3.765102274537818*^9, {
   3.799307825489117*^9, 3.7993078257244153`*^9}, {3.7993078723348637`*^9, 
   3.7993078730538692`*^9}, {3.7993079432402143`*^9, 3.799307975269594*^9}, 
   3.7993080052734003`*^9, {3.7993080566310363`*^9, 3.7993080795637603`*^9}, 
   3.7993089899049873`*^9, 3.799309043836769*^9, {3.799309192379014*^9, 
   3.7993091964693813`*^9}, 3.799309267138609*^9},
 ExpressionUUID -> "c131592d-325c-4219-a5a6-5f8e28c79dd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T34l", "[", "q4_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Alpha]4l", ",", "0", ",", 
      RowBox[{"q4", " ", "-", " ", 
       RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.764862320226762*^9, 3.764862324062711*^9}, {
   3.7648623546291513`*^9, 3.764862379868434*^9}, {3.764904568969067*^9, 
   3.764904574856801*^9}, {3.764909801460581*^9, 3.764909802131589*^9}, 
   3.76510227733145*^9, 3.7993078291761966`*^9, {3.7993080119076138`*^9, 
   3.79930801745179*^9}, {3.7993080815314665`*^9, 3.7993081024695497`*^9}, 
   3.799308992292861*^9, 3.7993090446954184`*^9, {3.7993093098413563`*^9, 
   3.7993093100595975`*^9}},
 ExpressionUUID -> "ad4684fc-7ddd-4b63-9126-3f395283cb31"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T45l", "[", "q5_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", 
      RowBox[{"q5", " ", "-", " ", 
       RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.764862097219008*^9, 3.764862154836344*^9}, {
   3.764862208885091*^9, 3.7648622289428053`*^9}, {3.764909784415634*^9, 
   3.764909784962381*^9}, 3.7651022406737347`*^9, 3.799306009146008*^9, {
   3.799307068629629*^9, 3.799307079159524*^9}, 3.7993078313184595`*^9, {
   3.7993080202932673`*^9, 3.799308020704167*^9}, {3.799308106937532*^9, 
   3.799308110068211*^9}, 3.799309046077712*^9},
 ExpressionUUID -> "c291e399-0c6c-4bae-afcc-6b9ec38c2a96"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T56l", "[", "q6_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "2"}], ",", "d6l", ",", 
      RowBox[{"q6", " ", "+", " ", "Pi"}], ",", "\"\<R\>\""}], "}"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.764862253702861*^9, 3.764862282325665*^9}, {
   3.764909790736429*^9, 3.764909791443843*^9}, 3.765102271340701*^9, {
   3.799307086010206*^9, 3.7993070896005735`*^9}, 3.7993078341589055`*^9, {
   3.799307879287269*^9, 3.799307879892585*^9}, 3.7993080237070665`*^9, {
   3.79930811297945*^9, 3.799308113498988*^9}, 3.7993090478065815`*^9, 
   3.799309202415119*^9, {3.7993092733884883`*^9, 3.7993092753731484`*^9}, {
   3.7993093158912754`*^9, 3.799309317540571*^9}},
 ExpressionUUID -> "84243484-b146-4646-8fe1-09f283de623b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T67l", "[", "q7_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", 
      RowBox[{"q7", " ", "+", " ", "Pi"}], ",", "\"\<R\>\""}], "}"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.76486228807624*^9, 3.764862329372554*^9}, {
   3.7649097986295967`*^9, 3.7649097993263817`*^9}, 3.765102274537818*^9, {
   3.7993070922774024`*^9, 3.799307095690277*^9}, 3.799307837733356*^9, 
   3.799308026549467*^9, {3.79930811698972*^9, 3.7993081371607256`*^9}, 
   3.799309048793573*^9, 3.799309277323365*^9},
 ExpressionUUID -> "c131592d-325c-4219-a5a6-5f8e28c79dd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T78l", "[", "q8_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"Pi", "/", "2"}], ",", "d8l", ",", "q8", ",", "\"\<R\>\""}], 
     "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.764862320226762*^9, 3.764862324062711*^9}, {
   3.7648623546291513`*^9, 3.764862379868434*^9}, {3.764904568969067*^9, 
   3.764904574856801*^9}, {3.764909801460581*^9, 3.764909802131589*^9}, 
   3.76510227733145*^9, {3.799307101596485*^9, 3.799307104871729*^9}, 
   3.799307840017273*^9, {3.7993078852761908`*^9, 3.7993078858626223`*^9}, {
   3.7993080286299047`*^9, 3.7993080288912764`*^9}, {3.7993081229826794`*^9, 
   3.7993081233417196`*^9}, 3.7993090502827187`*^9, 3.7993092050565553`*^9, 
   3.799309281341172*^9},
 ExpressionUUID -> "ad4684fc-7ddd-4b63-9126-3f395283cb31"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T89l", "[", "q9_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", 
      RowBox[{"q9", " ", "+", " ", 
       RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.76486228807624*^9, 3.764862329372554*^9}, {
   3.7649097986295967`*^9, 3.7649097993263817`*^9}, 3.765102274537818*^9, {
   3.7993070922774024`*^9, 3.7993071253031373`*^9}, 3.7993078429185133`*^9, 
   3.7993080318153872`*^9, {3.799308125521854*^9, 3.79930814279174*^9}, 
   3.799309051517418*^9, 3.7993092896556206`*^9},
 ExpressionUUID -> "c131592d-325c-4219-a5a6-5f8e28c79dd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T910l", "[", "q10_", "]"}], "=", 
   RowBox[{"DH", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"Pi", "/", "2"}], ",", "d10l", ",", 
      RowBox[{"q10", " ", "+", " ", 
       RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.764862320226762*^9, 3.764862324062711*^9}, {
   3.7648623546291513`*^9, 3.764862379868434*^9}, {3.764904568969067*^9, 
   3.764904574856801*^9}, {3.764909801460581*^9, 3.764909802131589*^9}, 
   3.76510227733145*^9, {3.799307101596485*^9, 3.799307137393798*^9}, 
   3.7993078490949993`*^9, {3.7993078902459087`*^9, 3.7993078913849025`*^9}, 
   3.7993080344114466`*^9, {3.799308128970621*^9, 3.799308147761381*^9}, 
   3.799309053268966*^9, 3.7993092073231077`*^9},
 ExpressionUUID -> "ad4684fc-7ddd-4b63-9126-3f395283cb31"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"EE", " ", 
   RowBox[{"transform", ":", " ", 
    RowBox[{"right", " ", "hand"}]}]}], " ", "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TgEEl", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], "=", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01l", "[", "q1", "]"}], ".", 
    RowBox[{"T12l", "[", "q2", "]"}], ".", 
    RowBox[{"T23l", "[", "q3", "]"}], ".", 
    RowBox[{"T34l", "[", "q4", "]"}], ".", 
    RowBox[{"T45l", "[", "q5", "]"}], ".", 
    RowBox[{"T56l", "[", "q6", "]"}], ".", 
    RowBox[{"T67l", "[", "q7", "]"}], ".", 
    RowBox[{"T78l", "[", "q8", "]"}], ".", 
    RowBox[{"T89l", "[", "q9", "]"}], ".", 
    RowBox[{"T910l", "[", "q10", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7649048499309*^9, 3.764904919871928*^9}, {
   3.76490498496495*^9, 3.764904987106889*^9}, {3.764909812358943*^9, 
   3.764909817212101*^9}, 3.765102396993044*^9, {3.765103393948989*^9, 
   3.7651033990461187`*^9}, {3.7993083457225885`*^9, 
   3.7993083788350563`*^9}, {3.799309336572989*^9, 3.7993093475029087`*^9}, {
   3.799309454916582*^9, 3.799309513518671*^9}, {3.799310438176403*^9, 
   3.799310440395547*^9}, {3.799577366395856*^9, 3.7995773696480274`*^9}},
 ExpressionUUID -> "2369f496-18c4-4174-952a-6edb1bd994ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"posEEl", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], "=", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"TgEEl", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7", 
       ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.764909826652611*^9, 3.76490985170117*^9}, {
   3.7649099304712543`*^9, 3.7649099525931063`*^9}, {3.765017061742051*^9, 
   3.765017062927095*^9}, 3.7651035167512217`*^9, {3.799309539125784*^9, 
   3.799309559565507*^9}, {3.799309607067504*^9, 3.7993096214692*^9}, {
   3.799577373130739*^9, 3.799577384793432*^9}},
 ExpressionUUID -> "d5c2ca86-dbd9-4c21-8413-5cedd59cc621"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"orEEl", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], "=", 
   RowBox[{"RigidOrientation", "[", 
    RowBox[{"TgEEl", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7", 
       ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7649099559516773`*^9, 3.764909993246737*^9}, {
   3.765017068392355*^9, 3.765017069772504*^9}, 3.7651035919272947`*^9, {
   3.765108682861401*^9, 3.7651086865075808`*^9}, 3.799309543123068*^9, {
   3.799309657026682*^9, 3.799309689169126*^9}, {3.799577378254465*^9, 
   3.799577391130149*^9}},
 ExpressionUUID -> "4e8cfabd-ac4d-47d6-acd4-26bbeb13b8f2"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Jacobian", "Subsection",
 CellChangeTimes->{{3.799909533647818*^9, 3.799909551667117*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DHtabler", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"+", "Pi"}], "/", "2"}], ",", "0", ",", "q1", ",", 
       "\"\<R\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", 
       RowBox[{"q2", " ", "+", " ", 
        RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"a3r", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "d3r", ",", 
       RowBox[{"q3", " ", "+", " ", "\[Theta]3r"}], ",", "\"\<R\>\""}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\[Alpha]4r", ",", "0", ",", 
       RowBox[{"q4", " ", "+", " ", 
        RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", 
       RowBox[{"q5", " ", "-", " ", 
        RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "d6r", ",", "q6", ",", "\"\<R\>\""}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "0", ",", 
       RowBox[{"q7", " ", "+", " ", "Pi"}], ",", "\"\<R\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", "d8r", ",", "q8", ",", 
       "\"\<R\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "0", ",", 
       RowBox[{"q9", " ", "+", " ", 
        RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "d10r", ",", 
       RowBox[{"q10", " ", "+", " ", 
        RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7999102056047955`*^9, 3.7999104014855003`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DHtablel", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", "q1", ",", 
       "\"\<R\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "0", ",", 
       RowBox[{"q2", " ", "+", " ", 
        RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"a3l", ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", "d3l", ",", 
       RowBox[{"q3", " ", "+", " ", "\[Theta]3l"}], ",", "\"\<R\>\""}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\[Alpha]4l", ",", "0", ",", 
       RowBox[{"q4", " ", "-", " ", 
        RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", 
       RowBox[{"q5", " ", "-", " ", 
        RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", "d6l", ",", 
       RowBox[{"q6", " ", "+", " ", "Pi"}], ",", "\"\<R\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", 
       RowBox[{"q7", " ", "+", " ", "Pi"}], ",", "\"\<R\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "d8l", ",", "q8", ",", "\"\<R\>\""}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", "0", ",", 
       RowBox[{"q9", " ", "+", " ", 
        RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "d10l", ",", 
       RowBox[{"q10", " ", "+", " ", 
        RowBox[{"Pi", "/", "2"}]}], ",", "\"\<R\>\""}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7999102056047955`*^9, 3.7999104014855003`*^9}, {
  3.799910966262005*^9, 3.799911072630342*^9}}],

Cell["\<\
DHJacobBase::usage = \"DHJacobBase[DHtable, Tb0] computes the DH spatial \
Jacobian for the supplied DH table DHtable, w.r.t. a base frame Sb (both \
origin and orientation are considered) \\nwhere the displacement from Sb to \
S0 is expressed by the homogeneous matrix Tb0.\"\
\>", "Text",
 CellChangeTimes->{{3.7999099564181485`*^9, 3.7999099564191604`*^9}, {
  3.7999113420303617`*^9, 3.799911358100662*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Definition", " ", "of", " ", "geometric", " ", "arm", " ", "Jacobian", " ",
    "from", " ", "DH", " ", "parametrization"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799909556783244*^9, 3.7999096292829437`*^9}, {
  3.799911372861762*^9, 3.7999113741176367`*^9}}],

Cell[CellGroupData[{

Cell["J Right", "Subsubsection",
 CellChangeTimes->{{3.7999096438158216`*^9, 3.7999096671773973`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Jacr", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"DHJacobBase", "[", 
    RowBox[{
     RowBox[{"DHtabler", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7",
         ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], ",", " ", "Tg0"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7999104158319073`*^9, 3.7999105107248716`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"sanity", " ", "check"}], "-", " ", 
   RowBox[{
   "we", " ", "obtain", " ", "linear", " ", "and", " ", "angular", " ", 
    "velocity", " ", "of", " ", "hand", " ", "wrt", " ", "our", " ", "global",
     " ", "frame"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7999109146348124`*^9, 3.7999109219493265`*^9}, {
  3.7999111037491584`*^9, 3.799911143357724*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Jacr", "[", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0"}], "}"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7999105194829373`*^9, 3.799910539228326*^9}, {
  3.7999105896606455`*^9, 3.799910639660932*^9}, {3.7999107824293222`*^9, 
  3.799910835965353*^9}, {3.79991089278183*^9, 3.799910910540705*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["J Left", "Subsubsection",
 CellChangeTimes->{{3.799909671823353*^9, 3.7999096849540443`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Jacl", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"DHJacobBase", "[", 
    RowBox[{
     RowBox[{"DHtablel", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7",
         ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], ",", " ", "Tg0"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7999104158319073`*^9, 3.7999105107248716`*^9}, {
  3.799911155374753*^9, 3.7999111582140036`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"sanity", " ", "check"}], "-", " ", 
   RowBox[{
   "we", " ", "obtain", " ", "linear", " ", "and", " ", "angular", " ", 
    "velocity", " ", "of", " ", "hand", " ", "wrt", " ", "our", " ", "global",
     " ", "frame"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7999109146348124`*^9, 3.7999109219493265`*^9}, {
  3.7999111037491584`*^9, 3.799911143357724*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Jacl", "[", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0"}], "}"}], "]"}], ".", 
  RowBox[{"{", 
   RowBox[{
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
    ",", "0", ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7999105194829373`*^9, 3.799910539228326*^9}, {
   3.7999105896606455`*^9, 3.799910639660932*^9}, {3.7999107824293222`*^9, 
   3.799910835965353*^9}, {3.79991089278183*^9, 3.799910910540705*^9}, {
   3.7999111610612774`*^9, 3.799911187685505*^9}, {3.7999112373576565`*^9, 
   3.799911239598017*^9}, {3.799911271350062*^9, 3.7999112735741444`*^9}, 
   3.799911330726458*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.799911180388586*^9, 3.7999111895332637`*^9}, 
   3.799911230426298*^9, 3.799911265349454*^9, 3.7999113252692785`*^9, 
   3.7999244222044063`*^9, 3.799928729112121*^9, 3.79992904779504*^9, 
   3.7999294637902713`*^9, 3.7999797100891466`*^9, 3.7999801945539865`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Homogeneous Transform - Right and Left hands (done)", "Section",
 CellChangeTimes->{{3.799555533156518*^9, 3.7995555957242374`*^9}, {
  3.7995866876817417`*^9, 3.7995866903239403`*^9}}],

Cell[CellGroupData[{

Cell["Right Hand", "Subsection",
 CellChangeTimes->{{3.7995556248726835`*^9, 3.7995556439931*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Tgir", " ", "=", " ", 
   RowBox[{
   "homogeneous", " ", "transformation", " ", "from", " ", "global", " ", 
    "frame", " ", "to", " ", "\"\<i\>\"", " ", "frame"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7995867149778557`*^9, 3.799586767561265*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg1r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01r", "[", "q1", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, 
   3.7995558948012996`*^9, {3.799577397916572*^9, 3.799577399470049*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg2r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01r", "[", "q1", "]"}], ".", 
    RowBox[{"T12r", "[", "q2", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, {
   3.7995558948012996`*^9, 3.7995559000448437`*^9}, 3.7995774063536005`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg3r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01r", "[", "q1", "]"}], ".", 
    RowBox[{"T12r", "[", "q2", "]"}], ".", 
    RowBox[{"T23r", "[", "q3", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, {
   3.7995558948012996`*^9, 3.799555902567129*^9}, 3.799577413350628*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg4r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01r", "[", "q1", "]"}], ".", 
    RowBox[{"T12r", "[", "q2", "]"}], ".", 
    RowBox[{"T23r", "[", "q3", "]"}], ".", 
    RowBox[{"T34r", "[", "q4", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, {
   3.7995558948012996`*^9, 3.7995559052319837`*^9}, 3.799577415758294*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg5r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01r", "[", "q1", "]"}], ".", 
    RowBox[{"T12r", "[", "q2", "]"}], ".", 
    RowBox[{"T23r", "[", "q3", "]"}], ".", 
    RowBox[{"T34r", "[", "q4", "]"}], ".", 
    RowBox[{"T45r", "[", "q5", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, {
   3.7995558948012996`*^9, 3.7995559083368616`*^9}, 3.7995562937221403`*^9, 
   3.7995774179427366`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg6r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01r", "[", "q1", "]"}], ".", 
    RowBox[{"T12r", "[", "q2", "]"}], ".", 
    RowBox[{"T23r", "[", "q3", "]"}], ".", 
    RowBox[{"T34r", "[", "q4", "]"}], ".", 
    RowBox[{"T45r", "[", "q5", "]"}], ".", 
    RowBox[{"T56r", "[", "q6", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, {
   3.7995558948012996`*^9, 3.799555910715434*^9}, 3.7995562955954866`*^9, 
   3.7995774224245696`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg7r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01r", "[", "q1", "]"}], ".", 
    RowBox[{"T12r", "[", "q2", "]"}], ".", 
    RowBox[{"T23r", "[", "q3", "]"}], ".", 
    RowBox[{"T34r", "[", "q4", "]"}], ".", 
    RowBox[{"T45r", "[", "q5", "]"}], ".", 
    RowBox[{"T56r", "[", "q6", "]"}], ".", 
    RowBox[{"T67r", "[", "q7", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799554991959058*^9, 3.799554994062825*^9}, 
   3.7995550787365417`*^9, {3.7995554495409145`*^9, 3.7995554570830665`*^9}, {
   3.799555850829101*^9, 3.799555865884227*^9}, {3.7995559190669622`*^9, 
   3.7995559279420056`*^9}, {3.7995559615460043`*^9, 3.7995559626672993`*^9}, 
   3.799556296596937*^9, 3.7995774255011387`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg8r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01r", "[", "q1", "]"}], ".", 
    RowBox[{"T12r", "[", "q2", "]"}], ".", 
    RowBox[{"T23r", "[", "q3", "]"}], ".", 
    RowBox[{"T34r", "[", "q4", "]"}], ".", 
    RowBox[{"T45r", "[", "q5", "]"}], ".", 
    RowBox[{"T56r", "[", "q6", "]"}], ".", 
    RowBox[{"T67r", "[", "q7", "]"}], ".", 
    RowBox[{"T78r", "[", "q8", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995549963258677`*^9, 3.7995549976060557`*^9}, 
   3.7995550821907005`*^9, {3.799555462468993*^9, 3.799555467926289*^9}, {
   3.799555954295529*^9, 3.799555978332964*^9}, 3.799556297823711*^9, 
   3.7995774298453836`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg9r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01r", "[", "q1", "]"}], ".", 
    RowBox[{"T12r", "[", "q2", "]"}], ".", 
    RowBox[{"T23r", "[", "q3", "]"}], ".", 
    RowBox[{"T34r", "[", "q4", "]"}], ".", 
    RowBox[{"T45r", "[", "q5", "]"}], ".", 
    RowBox[{"T56r", "[", "q6", "]"}], ".", 
    RowBox[{"T67r", "[", "q7", "]"}], ".", 
    RowBox[{"T78r", "[", "q8", "]"}], ".", 
    RowBox[{"T89r", "[", "q9", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799554999873102*^9, 3.799555003002037*^9}, 
   3.7995550853181353`*^9, {3.799555474222129*^9, 3.7995554791602144`*^9}, {
   3.799555982078133*^9, 3.799556004516265*^9}, 3.799556299337923*^9, 
   3.7995774320395255`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Tg10r", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
       ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
      "}"}], "]"}], " ", "=", " ", 
    RowBox[{"Tg0", ".", 
     RowBox[{"T01r", "[", "q1", "]"}], ".", 
     RowBox[{"T12r", "[", "q2", "]"}], ".", 
     RowBox[{"T23r", "[", "q3", "]"}], ".", 
     RowBox[{"T34r", "[", "q4", "]"}], ".", 
     RowBox[{"T45r", "[", "q5", "]"}], ".", 
     RowBox[{"T56r", "[", "q6", "]"}], ".", 
     RowBox[{"T67r", "[", "q7", "]"}], ".", 
     RowBox[{"T78r", "[", "q8", "]"}], ".", 
     RowBox[{"T89r", "[", "q9", "]"}], ".", 
     RowBox[{"T910r", "[", "q10", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7995550051530223`*^9, 3.7995550084579816`*^9}, 
   3.7995550874084764`*^9, {3.7995554846984434`*^9, 3.7995554910566845`*^9}, {
   3.7995560089095345`*^9, 3.7995560206108074`*^9}, 3.7995563005248404`*^9, {
   3.799560761829733*^9, 3.7995607661218605`*^9}, 3.799577434277096*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Left hand", "Subsection",
 CellChangeTimes->{{3.799556222240472*^9, 3.7995562310249023`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Tgil", " ", "=", " ", 
   RowBox[{
   "homogeneous", " ", "transformation", " ", "from", " ", "global", " ", 
    "frame", " ", "to", " ", "\"\<i\>\"", " ", "frame"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{3.799586792600286*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg1l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01l", "[", "q1", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, 
   3.7995558948012996`*^9, {3.79955627134354*^9, 3.7995562719526386`*^9}, 
   3.799556321123409*^9, 3.799577439006912*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg2l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01l", "[", "q1", "]"}], ".", 
    RowBox[{"T12l", "[", "q2", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, {
   3.7995558948012996`*^9, 3.7995559000448437`*^9}, {3.799556275495283*^9, 
   3.7995562758024745`*^9}, {3.7995563248297462`*^9, 3.799556328036211*^9}, 
   3.7995774410408683`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg3l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01l", "[", "q1", "]"}], ".", 
    RowBox[{"T12l", "[", "q2", "]"}], ".", 
    RowBox[{"T23l", "[", "q3", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, {
   3.7995558948012996`*^9, 3.799555902567129*^9}, {3.799556278611049*^9, 
   3.7995562789178567`*^9}, {3.799556341666999*^9, 3.799556344668812*^9}, 
   3.7995774431137624`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg4l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01l", "[", "q1", "]"}], ".", 
    RowBox[{"T12l", "[", "q2", "]"}], ".", 
    RowBox[{"T23l", "[", "q3", "]"}], ".", 
    RowBox[{"T34l", "[", "q4", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, {
   3.7995558948012996`*^9, 3.7995559052319837`*^9}, {3.7995562825856285`*^9, 
   3.799556282837793*^9}, {3.799556346652701*^9, 3.7995563519956827`*^9}, 
   3.7995774452558546`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg5l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01l", "[", "q1", "]"}], ".", 
    RowBox[{"T12l", "[", "q2", "]"}], ".", 
    RowBox[{"T23l", "[", "q3", "]"}], ".", 
    RowBox[{"T34l", "[", "q4", "]"}], ".", 
    RowBox[{"T45l", "[", "q5", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, {
   3.7995558948012996`*^9, 3.7995559083368616`*^9}, 3.799556288649446*^9, {
   3.7995563538089714`*^9, 3.7995563608635597`*^9}, 3.799577449789962*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg6l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01l", "[", "q1", "]"}], ".", 
    RowBox[{"T12l", "[", "q2", "]"}], ".", 
    RowBox[{"T23l", "[", "q3", "]"}], ".", 
    RowBox[{"T34l", "[", "q4", "]"}], ".", 
    RowBox[{"T45l", "[", "q5", "]"}], ".", 
    RowBox[{"T56l", "[", "q6", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.7995556683205156`*^9, 
   3.7995557841816463`*^9}, {3.799555819195693*^9, 3.7995558480680475`*^9}, {
   3.7995558948012996`*^9, 3.799555910715434*^9}, 3.799556305662797*^9, {
   3.7995563625123305`*^9, 3.799556374959717*^9}, 3.7995774595025268`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg7l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01l", "[", "q1", "]"}], ".", 
    RowBox[{"T12l", "[", "q2", "]"}], ".", 
    RowBox[{"T23l", "[", "q3", "]"}], ".", 
    RowBox[{"T34l", "[", "q4", "]"}], ".", 
    RowBox[{"T45l", "[", "q5", "]"}], ".", 
    RowBox[{"T56l", "[", "q6", "]"}], ".", 
    RowBox[{"T67l", "[", "q7", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799554991959058*^9, 3.799554994062825*^9}, 
   3.7995550787365417`*^9, {3.7995554495409145`*^9, 3.7995554570830665`*^9}, {
   3.799555850829101*^9, 3.799555865884227*^9}, {3.7995559190669622`*^9, 
   3.7995559279420056`*^9}, {3.7995559615460043`*^9, 3.7995559626672993`*^9}, 
   3.7995563065611324`*^9, {3.7995563775072985`*^9, 3.7995563869028854`*^9}, 
   3.7995774621669683`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg8l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01l", "[", "q1", "]"}], ".", 
    RowBox[{"T12l", "[", "q2", "]"}], ".", 
    RowBox[{"T23l", "[", "q3", "]"}], ".", 
    RowBox[{"T34l", "[", "q4", "]"}], ".", 
    RowBox[{"T45l", "[", "q5", "]"}], ".", 
    RowBox[{"T56l", "[", "q6", "]"}], ".", 
    RowBox[{"T67l", "[", "q7", "]"}], ".", 
    RowBox[{"T78l", "[", "q8", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995549963258677`*^9, 3.7995549976060557`*^9}, 
   3.7995550821907005`*^9, {3.799555462468993*^9, 3.799555467926289*^9}, {
   3.799555954295529*^9, 3.799555978332964*^9}, 3.7995563076216607`*^9, {
   3.799556389103084*^9, 3.799556407098979*^9}, 3.7995774650005407`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tg9l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Tg0", ".", 
    RowBox[{"T01l", "[", "q1", "]"}], ".", 
    RowBox[{"T12l", "[", "q2", "]"}], ".", 
    RowBox[{"T23l", "[", "q3", "]"}], ".", 
    RowBox[{"T34l", "[", "q4", "]"}], ".", 
    RowBox[{"T45l", "[", "q5", "]"}], ".", 
    RowBox[{"T56l", "[", "q6", "]"}], ".", 
    RowBox[{"T67l", "[", "q7", "]"}], ".", 
    RowBox[{"T78l", "[", "q8", "]"}], ".", 
    RowBox[{"T89l", "[", "q9", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799554999873102*^9, 3.799555003002037*^9}, 
   3.7995550853181353`*^9, {3.799555474222129*^9, 3.7995554791602144`*^9}, {
   3.799555982078133*^9, 3.799556004516265*^9}, 3.799556308878832*^9, {
   3.7995564105620365`*^9, 3.7995564276320915`*^9}, 3.799577471657524*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Tg10l", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
       ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
      "}"}], "]"}], " ", "=", " ", 
    RowBox[{"Tg0", ".", 
     RowBox[{"T01l", "[", "q1", "]"}], ".", 
     RowBox[{"T12l", "[", "q2", "]"}], ".", 
     RowBox[{"T23l", "[", "q3", "]"}], ".", 
     RowBox[{"T34l", "[", "q4", "]"}], ".", 
     RowBox[{"T45l", "[", "q5", "]"}], ".", 
     RowBox[{"T56l", "[", "q6", "]"}], ".", 
     RowBox[{"T67l", "[", "q7", "]"}], ".", 
     RowBox[{"T78l", "[", "q8", "]"}], ".", 
     RowBox[{"T89l", "[", "q9", "]"}], ".", 
     RowBox[{"T910l", "[", "q10", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7995550051530223`*^9, 3.7995550084579816`*^9}, 
   3.7995550874084764`*^9, {3.7995554846984434`*^9, 3.7995554910566845`*^9}, {
   3.7995560089095345`*^9, 3.7995560206108074`*^9}, 3.7995563101302137`*^9, {
   3.7995564299915876`*^9, 3.7995564514426527`*^9}, {3.799560770191704*^9, 
   3.79956077346033*^9}, 3.7995774751839743`*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Inverse Kinematic : CLIK with constrains (done)", "Section",
 CellChangeTimes->{{3.7993043705938053`*^9, 3.7993044075199327`*^9}, {
  3.799304438798328*^9, 3.799304451515282*^9}, {3.799564595024484*^9, 
  3.799564623184705*^9}, {3.7996044948207045`*^9, 3.7996045007478943`*^9}, {
  3.799604969301017*^9, 3.799604981653998*^9}, {3.799932596325004*^9, 
  3.799932611481658*^9}}],

Cell[CellGroupData[{

Cell["Functional definition", "Subsection",
 CellChangeTimes->{{3.7993043447169266`*^9, 3.7993043672337227`*^9}, {
  3.799586676453062*^9, 3.7995866785166917`*^9}, {3.7996049314263735`*^9, 
  3.7996049537926455`*^9}, {3.799932526089204*^9, 3.7999325266902523`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Weight", " ", "matrix", " ", "inside", " ", "functional", " ", "def"}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799911523910018*^9, 3.7999115450945272`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"W", " ", "=", " ", 
    RowBox[{"IdentityMatrix", "[", "10", "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "to", " ", "be", " ", "changed", " ", "in", " ", "order", " ", "to", " ", 
    "give", " ", "different", " ", "weight"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7999114290944214`*^9, 3.799911623286541*^9}, 
   3.7999118492877464`*^9, {3.7999321811570587`*^9, 3.7999321826189737`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Jwl", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Inverse", "[", "W", "]"}], ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Jacl", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7",
         ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], "]"}], ".", 
    RowBox[{"Inverse", "[", 
     RowBox[{
      RowBox[{"Jacl", "[", 
       RowBox[{"{", 
        RowBox[{
        "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", 
         "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], ".", 
      RowBox[{"Inverse", "[", "W", "]"}], ".", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Jacl", "[", 
        RowBox[{"{", 
         RowBox[{
         "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", 
          "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], "]"}]}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7999265837256794`*^9, 3.799926587637516*^9}, {
   3.7999267290913353`*^9, 3.799926884750101*^9}, 3.7999290176589165`*^9, 
   3.799929075721654*^9, {3.799929244917117*^9, 3.799929246884748*^9}, {
   3.7999293271602325`*^9, 3.799929370684943*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Jwr", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Inverse", "[", "W", "]"}], ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Jacr", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7",
         ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], "]"}], ".", 
    RowBox[{"Inverse", "[", 
     RowBox[{
      RowBox[{"Jacr", "[", 
       RowBox[{"{", 
        RowBox[{
        "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", 
         "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], ".", 
      RowBox[{"Inverse", "[", "W", "]"}], ".", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Jacr", "[", 
        RowBox[{"{", 
         RowBox[{
         "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", 
          "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], "]"}]}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.7999265988368874`*^9, {3.799926897139247*^9, 3.7999269058574934`*^9}, 
   3.7999290216762443`*^9, 3.799929080946271*^9, {3.7999294125977564`*^9, 
   3.7999294324783735`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Position and orientation error of the end-effector", "Subsection",
 CellChangeTimes->{{3.669901455657922*^9, 3.6699014811971664`*^9}, {
  3.7999327425681486`*^9, 3.7999327480109615`*^9}}],

Cell[CellGroupData[{

Cell["Right hand", "Subsubsection",
 CellChangeTimes->{{3.7999316425289197`*^9, 3.7999316549989862`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Errore", " ", "di", " ", "Posizione"}], " ", "=", " ", 
   RowBox[{
   "differenza", " ", "tra", " ", "la", " ", "posizione", " ", "del", " ", 
    "punto", " ", "sulla", " ", "traiettoria", " ", "ideale", " ", "da", " ", 
    "seguire", " ", "e", " ", "tra", " ", "la", " ", "posizione", " ", "del", 
    " ", "punto", " ", "sulla", " ", "traiettoria", " ", "compiuta", " ", 
    "dal", " ", "EE", " ", "in", " ", "funzione", " ", "degli", " ", "angoli",
     " ", "di", " ", "giunto"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7583843731790433`*^9, 3.758384391547526*^9}, 
   3.758517595732815*^9, {3.758517630742379*^9, 3.7585176307428803`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ePr", "[", 
    RowBox[{"time_", ",", 
     RowBox[{"{", 
      RowBox[{
      "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
       ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
      "}"}]}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"posr", "[", "time", "]"}], "-", 
     RowBox[{"posEEr", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7",
         ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}]}], ")"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.388311363518482*^9, 3.388311369027895*^9}, {
   3.3883117682455077`*^9, 3.3883118370321207`*^9}, {3.3883119051312776`*^9, 
   3.388311912586855*^9}, {3.388312997558428*^9, 3.388313003981845*^9}, {
   3.3883142201999006`*^9, 3.388314221055314*^9}, {3.6698048930469093`*^9, 
   3.669804912695345*^9}, {3.669901156960788*^9, 3.6699011857448387`*^9}, {
   3.7999252602993326`*^9, 3.7999252692377605`*^9}, {3.7999253082413626`*^9, 
   3.799925316950251*^9}, 3.799925362104393*^9, {3.7999254915457883`*^9, 
   3.7999255483755445`*^9}, {3.799931685914553*^9, 3.7999316921358633`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "posr", " ", "is", " ", "the", " ", "desired", " ", "position", " ", "of", 
    " ", "the", " ", "EE"}], ",", " ", 
   RowBox[{
   "posEEr", " ", "is", " ", "the", " ", "position", " ", "of", " ", "EE", 
    " ", "coming", " ", "from", " ", "direct", " ", "kinematic", " ", 
    "solution", " ", "using", " ", "joint", " ", "angles"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7996787615495386`*^9, 3.7996788256322327`*^9}, {
  3.7999255452270713`*^9, 3.7999255596266346`*^9}, {3.79993169605285*^9, 
  3.79993169883074*^9}, {3.799932269768146*^9, 3.7999323633002615`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Per", " ", 
    RowBox[{"l", "'"}], "errore", " ", "di", " ", "Orientazione", " ", "si", 
    " ", "utilizzano", " ", "i", " ", "Quaternioni"}], ",", " ", 
   RowBox[{
   "imponendo", " ", "che", " ", "il", " ", "prodotto", " ", "tra", " ", "il",
     " ", "quaternione", " ", "che", " ", "indica", " ", 
    RowBox[{"l", "'"}], "orientazione", " ", "desiderata", " ", "ed", " ", 
    "il", " ", "quaternione", " ", "che", " ", "indica", " ", 
    RowBox[{"l", "'"}], "orientazione", " ", "effettiva", " ", "del", " ", 
    "EE", " ", "dia", " ", "come", " ", "risultato", " ", "la", " ", 
    "matrice", " ", "identica"}]}], "*)"}]], "Input",
 CellChangeTimes->{
  3.7585175957338166`*^9, {3.758517630746891*^9, 3.7585176307473927`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eOr", "[", 
    RowBox[{"time_", ",", 
     RowBox[{"{", 
      RowBox[{
      "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
       ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
      "}"}]}], "]"}], ":=", 
   RowBox[{"QuatVectPart", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"REEr", "[", "time", "]"}], ".", 
      RowBox[{"orEEr", "[", 
       RowBox[{"{", 
        RowBox[{
        "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", 
         "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}]}], ")"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388485969619128*^9, 3.388485990650378*^9}, {
   3.388486608587878*^9, 3.3884866126035037`*^9}, 3.6698048668730593`*^9, {
   3.7999259073452373`*^9, 3.799925959893572*^9}, {3.799926044080681*^9, 
   3.7999260445957108`*^9}, {3.7999262314346294`*^9, 
   3.7999262351857553`*^9}, {3.7999262726727357`*^9, 
   3.7999262844495373`*^9}, {3.7999317039080462`*^9, 3.7999317101227074`*^9}, 
   3.799979879372825*^9, 3.7999801680924687`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "REEr", " ", "is", " ", "the", " ", "desired", " ", "orientation", " ", 
    "of", " ", "the", " ", "EE"}], ",", " ", 
   RowBox[{
   "orEEr", " ", "is", " ", "the", " ", "orientation", " ", "of", " ", "EE", 
    " ", "coming", " ", "from", " ", "direct", " ", "kinematic", " ", 
    "solution", " ", "using", " ", "joint", " ", "angles"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7996787615495386`*^9, 3.7996788256322327`*^9}, {
  3.7999255452270713`*^9, 3.7999255596266346`*^9}, {3.79993169605285*^9, 
  3.79993169883074*^9}, {3.799932269768146*^9, 3.7999323633002615`*^9}, {
  3.799932479021308*^9, 3.799932496470073*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Left hand", "Subsubsection",
 CellChangeTimes->{{3.799931596536627*^9, 3.7999316156021595`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Errore", " ", "di", " ", "Posizione"}], " ", "=", " ", 
   RowBox[{
   "differenza", " ", "tra", " ", "la", " ", "posizione", " ", "del", " ", 
    "punto", " ", "sulla", " ", "traiettoria", " ", "ideale", " ", "da", " ", 
    "seguire", " ", "e", " ", "tra", " ", "la", " ", "posizione", " ", "del", 
    " ", "punto", " ", "sulla", " ", "traiettoria", " ", "compiuta", " ", 
    "dal", " ", "EE", " ", "in", " ", "funzione", " ", "degli", " ", "angoli",
     " ", "di", " ", "giunto"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7583843731790433`*^9, 3.758384391547526*^9}, 
   3.758517595732815*^9, {3.758517630742379*^9, 3.7585176307428803`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ePl", "[", 
    RowBox[{"time_", ",", 
     RowBox[{"{", 
      RowBox[{
      "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
       ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
      "}"}]}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"posl", "[", "time", "]"}], "-", 
     RowBox[{"posEEl", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7",
         ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}]}], ")"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.388311363518482*^9, 3.388311369027895*^9}, {
   3.3883117682455077`*^9, 3.3883118370321207`*^9}, {3.3883119051312776`*^9, 
   3.388311912586855*^9}, {3.388312997558428*^9, 3.388313003981845*^9}, {
   3.3883142201999006`*^9, 3.388314221055314*^9}, {3.6698048930469093`*^9, 
   3.669804912695345*^9}, {3.669901156960788*^9, 3.6699011857448387`*^9}, {
   3.7999252602993326`*^9, 3.7999252692377605`*^9}, {3.7999253082413626`*^9, 
   3.799925316950251*^9}, 3.799925362104393*^9, {3.7999254915457883`*^9, 
   3.7999255483755445`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "posl", " ", "is", " ", "the", " ", "desired", " ", "position", " ", "of", 
    " ", "the", " ", "EE"}], ",", " ", 
   RowBox[{
   "posEEl", " ", "is", " ", "the", " ", "position", " ", "of", " ", "EE", 
    " ", "coming", " ", "from", " ", "direct", " ", "kinematic", " ", 
    "solution", " ", "using", " ", "joint", " ", "angles"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7996787615495386`*^9, 3.7996788256322327`*^9}, {
  3.7999255452270713`*^9, 3.7999255596266346`*^9}, {3.79993169605285*^9, 
  3.79993169883074*^9}, {3.799932269768146*^9, 3.7999323633002615`*^9}, {
  3.7999324586481266`*^9, 3.7999324620144434`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Per", " ", 
    RowBox[{"l", "'"}], "errore", " ", "di", " ", "Orientazione", " ", "si", 
    " ", "utilizzano", " ", "i", " ", "Quaternioni"}], ",", " ", 
   RowBox[{
   "imponendo", " ", "che", " ", "il", " ", "prodotto", " ", "tra", " ", "il",
     " ", "quaternione", " ", "che", " ", "indica", " ", 
    RowBox[{"l", "'"}], "orientazione", " ", "desiderata", " ", "ed", " ", 
    "il", " ", "quaternione", " ", "che", " ", "indica", " ", 
    RowBox[{"l", "'"}], "orientazione", " ", "effettiva", " ", "del", " ", 
    "EE", " ", "dia", " ", "come", " ", "risultato", " ", "la", " ", 
    "matrice", " ", "identica"}]}], "*)"}]], "Input",
 CellChangeTimes->{
  3.7585175957338166`*^9, {3.758517630746891*^9, 3.7585176307473927`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eOl", "[", 
    RowBox[{"time_", ",", 
     RowBox[{"{", 
      RowBox[{
      "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
       ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
      "}"}]}], "]"}], ":=", 
   RowBox[{"QuatVectPart", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"REEl", "[", "time", "]"}], ".", 
      RowBox[{"orEEl", "[", 
       RowBox[{"{", 
        RowBox[{
        "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", 
         "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}]}], ")"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388485969619128*^9, 3.388485990650378*^9}, {
   3.388486608587878*^9, 3.3884866126035037`*^9}, 3.6698048668730593`*^9, {
   3.7999259073452373`*^9, 3.799925959893572*^9}, {3.799926044080681*^9, 
   3.7999260445957108`*^9}, {3.7999262314346294`*^9, 
   3.7999262351857553`*^9}, {3.7999262726727357`*^9, 3.7999262844495373`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "REEl", " ", "is", " ", "the", " ", "desired", " ", "orientation", " ", 
    "of", " ", "the", " ", "EE"}], ",", " ", 
   RowBox[{
   "orEEl", " ", "is", " ", "the", " ", "orientation", " ", "of", " ", "EE", 
    " ", "coming", " ", "from", " ", "direct", " ", "kinematic", " ", 
    "solution", " ", "using", " ", "joint", " ", "angles"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7996787615495386`*^9, 3.7996788256322327`*^9}, {
  3.7999255452270713`*^9, 3.7999255596266346`*^9}, {3.79993169605285*^9, 
  3.79993169883074*^9}, {3.799932269768146*^9, 3.7999323633002615`*^9}, {
  3.799932479021308*^9, 3.7999325131412463`*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gain matrices of the trajectory tracking law", "Subsection",
 CellChangeTimes->{{3.388313341285452*^9, 3.3883133579923897`*^9}, {
  3.669901892953491*^9, 3.6699019016427064`*^9}, {3.6699019430853024`*^9, 
  3.6699019561893253`*^9}, {3.799926326331081*^9, 3.799926356859374*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"KP", "=", 
   RowBox[{"0", " ", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388313360710966*^9, 3.3883134221728525`*^9}, {
   3.388320537269215*^9, 3.3883205374039717`*^9}, {3.388320941997217*^9, 
   3.388320942165175*^9}, {3.3883214153848867`*^9, 3.388321415480584*^9}, {
   3.388321752326212*^9, 3.3883217528544984`*^9}, {3.3883769440061464`*^9, 
   3.3883769441467714`*^9}, {3.38837928302395*^9, 3.38837928321145*^9}, {
   3.388387707896041*^9, 3.388387708255416*^9}, {3.3883898752242265`*^9, 
   3.388389875527918*^9}, {3.388483562464546*^9, 3.388483562542671*^9}, {
   3.388751692888836*^9, 3.388751693160302*^9}, {3.388752359018076*^9, 
   3.3887523594975367`*^9}, {3.388752519172864*^9, 3.3887525193720703`*^9}, {
   3.7999263621401215`*^9, 3.7999263622019815`*^9}, 3.7999264251173625`*^9, {
   3.7999803502366147`*^9, 3.79998035947952*^9}, {3.7999807077734175`*^9, 
   3.799980707901066*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"KO", "=", 
   RowBox[{"0", " ", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388313416904635*^9, 3.388313440307434*^9}, {
   3.3883205432678547`*^9, 3.3883205436682196`*^9}, {3.388320947061346*^9, 
   3.3883209472127037`*^9}, {3.799926365052382*^9, 3.7999263651281266`*^9}, 
   3.799926427268155*^9, 3.7999803573250685`*^9}],

Cell[TextData[{
 "Control law: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox[
     UnderscriptBox["q", "_"], "."], "=", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["J", "w"], "R"], "(", GridBox[{
       {
        RowBox[{
         SubscriptBox[
          UnderscriptBox["v", "_"], "des"], "+", 
         RowBox[{
          SubscriptBox["K", "P"], 
          SubscriptBox[
           UnderscriptBox["e", "_"], "P"]}]}]},
       {
        RowBox[{
         SubscriptBox[
          UnderscriptBox["\[Omega]", "_"], "des"], "+", 
         RowBox[{
          SubscriptBox["K", "O"], 
          SubscriptBox[
           UnderscriptBox["e", "_"], "O"]}]}]}
      }], ")"}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.3883135856252813`*^9, 3.38831360111843*^9}, {
  3.388747584037561*^9, 3.3887476182023664`*^9}, {3.669901960635333*^9, 
  3.6699019686849475`*^9}, {3.6700618821679993`*^9, 3.6700619233208714`*^9}, {
  3.670061984582179*^9, 3.670062052801099*^9}, {3.7999317806138387`*^9, 
  3.7999318075638685`*^9}, {3.7999803334205704`*^9, 3.7999803389875364`*^9}}],

Cell[CellGroupData[{

Cell["Right hand", "Subsubsection",
 CellChangeTimes->{{3.7999317438014135`*^9, 3.79993175441311*^9}, {
  3.799931839662698*^9, 3.799931840759882*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"qpr", "[", 
    RowBox[{"time_", ",", 
     RowBox[{"{", 
      RowBox[{
      "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
       ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
      "}"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Jwr", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7", 
       ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], ".", 
    RowBox[{"(", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"velr", "[", "time", "]"}], "+", 
        RowBox[{"KP", ".", 
         RowBox[{"ePr", "[", 
          RowBox[{"time", ",", 
           RowBox[{"{", 
            RowBox[{
            "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", 
             "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}]}], "]"}]}]}], 
       ",", 
       RowBox[{
        RowBox[{"angvelr", "[", "time", "]"}], "+", 
        RowBox[{"KO", ".", 
         RowBox[{"eOr", "[", 
          RowBox[{"time", ",", 
           RowBox[{"{", 
            RowBox[{
            "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", 
             "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}]}], "]"}]}]}]}], 
      "]"}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388313603754004*^9, 3.388313687552352*^9}, {
   3.3883140204792852`*^9, 3.3883140504451404`*^9}, {3.3883140906105385`*^9, 
   3.38831418094753*^9}, {3.3883142420149107`*^9, 3.3883142518463125`*^9}, {
   3.3883145305394125`*^9, 3.3883145679891644`*^9}, {3.388321829194339*^9, 
   3.3883218441845903`*^9}, {3.388321911388297*^9, 3.388321917259015*^9}, {
   3.388489216765004*^9, 3.3884892562414684`*^9}, {3.3884893736008434`*^9, 
   3.3884893955383434`*^9}, {3.388749269863255*^9, 3.388749279518887*^9}, {
   3.3887497010221825`*^9, 3.3887497043647423`*^9}, 3.669804941313795*^9, {
   3.799926456054603*^9, 3.799926539095886*^9}, {3.799926924657916*^9, 
   3.7999269260121827`*^9}, {3.79992699489312*^9, 3.799927085589289*^9}, {
   3.7999289315546017`*^9, 3.7999289413518944`*^9}, {3.79992916865453*^9, 
   3.799929173141063*^9}, {3.7999295008476*^9, 3.7999295110428314`*^9}, {
   3.799931843215028*^9, 3.7999318632239337`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qpr", "[", 
  RowBox[{"2", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7999289447586966`*^9, 3.799928994064047*^9}, 
   3.799929162719632*^9, {3.799931867994717*^9, 3.7999318682747145`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.02382702254935534`", ",", "0.015733357462720553`", ",", 
   "0.002431378846639779`", ",", "0.0221039967775644`", ",", 
   RowBox[{"-", "0.003216237059264224`"}], ",", "0.0006933105766801108`", ",",
    "0.00008363326118275213`", ",", "0.0006933105766801108`", ",", 
   "0.0027848761209002355`", ",", "0.0018831721728126524`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7999292136672015`*^9, 3.799929465453414*^9, 3.799929516948886*^9, 
   3.7999320302139435`*^9, {3.7999797055588*^9, 3.7999797105177927`*^9}, 
   3.7999801950745516`*^9, 3.7999803691768136`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"velr", " ", "=", " ", 
   RowBox[{
    RowBox[{"linear", " ", "velocity", " ", "from", " ", "data", " ", 
     RowBox[{"(", 
      RowBox[{"real", " ", "values"}], ")"}], "\[IndentingNewLine]", 
     "angvelr"}], " ", "=", " ", 
    RowBox[{"linear", " ", "velocity", " ", "from", " ", "data", " ", 
     RowBox[{"(", 
      RowBox[{"real", " ", "values"}], ")"}]}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7999271376964397`*^9, 3.7999272018443213`*^9}, {
  3.7999318814318876`*^9, 3.7999318845203705`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Left hand", "Subsubsection",
 CellChangeTimes->{{3.7999317438014135`*^9, 3.79993175441311*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"qpl", "[", 
    RowBox[{"time_", ",", 
     RowBox[{"{", 
      RowBox[{
      "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
       ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
      "}"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Jwl", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", "q7", 
       ",", "q8", ",", "q9", ",", "q10"}], "}"}], "]"}], ".", 
    RowBox[{"(", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"vell", "[", "time", "]"}], "+", 
        RowBox[{"KP", ".", 
         RowBox[{"ePl", "[", 
          RowBox[{"time", ",", 
           RowBox[{"{", 
            RowBox[{
            "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", 
             "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}]}], "]"}]}]}], 
       ",", 
       RowBox[{
        RowBox[{"angvell", "[", "time", "]"}], "+", 
        RowBox[{"KO", ".", 
         RowBox[{"eOl", "[", 
          RowBox[{"time", ",", 
           RowBox[{"{", 
            RowBox[{
            "q1", ",", "q2", ",", "q3", ",", "q4", ",", "q5", ",", "q6", ",", 
             "q7", ",", "q8", ",", "q9", ",", "q10"}], "}"}]}], "]"}]}]}]}], 
      "]"}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388313603754004*^9, 3.388313687552352*^9}, {
   3.3883140204792852`*^9, 3.3883140504451404`*^9}, {3.3883140906105385`*^9, 
   3.38831418094753*^9}, {3.3883142420149107`*^9, 3.3883142518463125`*^9}, {
   3.3883145305394125`*^9, 3.3883145679891644`*^9}, {3.388321829194339*^9, 
   3.3883218441845903`*^9}, {3.388321911388297*^9, 3.388321917259015*^9}, {
   3.388489216765004*^9, 3.3884892562414684`*^9}, {3.3884893736008434`*^9, 
   3.3884893955383434`*^9}, {3.388749269863255*^9, 3.388749279518887*^9}, {
   3.3887497010221825`*^9, 3.3887497043647423`*^9}, 3.669804941313795*^9, {
   3.799926456054603*^9, 3.799926539095886*^9}, {3.799926924657916*^9, 
   3.7999269260121827`*^9}, {3.79992699489312*^9, 3.799927085589289*^9}, {
   3.7999289315546017`*^9, 3.7999289413518944`*^9}, {3.79992916865453*^9, 
   3.799929173141063*^9}, {3.7999295008476*^9, 3.7999295110428314`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qpl", "[", 
  RowBox[{"2", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7999289447586966`*^9, 3.799928994064047*^9}, 
   3.799929162719632*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.09785036604032742`"}], ",", 
   RowBox[{"-", "0.06160860306927423`"}], ",", "0.03255939468988081`", ",", 
   RowBox[{"-", "0.06113059056145696`"}], ",", "0.023183483209712533`", ",", 
   "0.0108328026550596`", ",", "0.007979387961668114`", ",", 
   "0.0108328026550596`", ",", 
   RowBox[{"-", "0.00446654164737224`"}], ",", 
   RowBox[{"-", "0.0727626818181981`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7999292136672015`*^9, 3.799929465453414*^9, 3.799929516948886*^9, {
   3.799979705587844*^9, 3.799979710556862*^9}, 3.7999801951236396`*^9, 
   3.7999803692309184`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"vell", " ", "=", " ", 
   RowBox[{
    RowBox[{"linear", " ", "velocity", " ", "from", " ", "data", " ", 
     RowBox[{"(", 
      RowBox[{"real", " ", "values"}], ")"}], "\[IndentingNewLine]", 
     "angvell"}], " ", "=", " ", 
    RowBox[{"linear", " ", "velocity", " ", "from", " ", "data", " ", 
     RowBox[{"(", 
      RowBox[{"real", " ", "values"}], ")"}]}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7999271376964397`*^9, 3.7999272018443213`*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integration of the kinematics", "Subsection",
 CellChangeTimes->{{3.388484805902046*^9, 3.388484817667671*^9}, {
  3.388485027370796*^9, 3.388485039636421*^9}, {3.669902114316833*^9, 
  3.669902131491274*^9}, {3.7999322214194775`*^9, 3.7999322276083364`*^9}}],

Cell["Time horizon", "Text",
 CellChangeTimes->{{3.388750751508658*^9, 3.3887507634991016`*^9}, {
  3.6699023375992365`*^9, 3.669902343654047*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"t0", "=", 
   RowBox[{"1", "/", "samplerate"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7999009647634892`*^9, 3.7999009696913867`*^9}}],

Cell["Initial configuration of the robot", "Text",
 CellChangeTimes->{{3.388313168669546*^9, 3.3883131783427553`*^9}, {
  3.6699015135692244`*^9, 3.669901524879244*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"q0", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.3883129329365873`*^9, 3.3883129332422323`*^9}, {
   3.3883129804394064`*^9, 3.3883129835905724`*^9}, {3.388313101461934*^9, 
   3.388313131586959*^9}, 3.388313163065413*^9, {3.388315219433797*^9, 
   3.38831522039272*^9}, {3.388485348011421*^9, 3.388485376073921*^9}, {
   3.388485565027046*^9, 3.388485565386421*^9}, {3.799927471754503*^9, 
   3.7999274935337133`*^9}}],

Cell[CellGroupData[{

Cell["Right hand", "Subsubsection",
 CellChangeTimes->{{3.799931916982396*^9, 3.7999319453410234`*^9}}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Risoluzione", " ", "Equazioni", " ", "Differenziali"}], ",", " ", 
    RowBox[{"con", " ", "Condizioni", " ", "Iniziali", " ", "date"}]}], 
   "*)"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"solr", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Equal", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"q", "[", "time", "]"}], ",", "time"}], "]"}], ",", 
          RowBox[{"qpr", "[", 
           RowBox[{"time", ",", 
            RowBox[{"q", "[", "time", "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"Equal", "[", 
         RowBox[{
          RowBox[{"q", "[", "t0", "]"}], ",", "q0"}], "]"}]}], "}"}], "]"}], 
     ",", "q", ",", 
     RowBox[{"{", 
      RowBox[{"time", ",", 
       RowBox[{"t0", "+", " ", "0.01"}], ",", 
       RowBox[{"tend", "-", " ", "0.01"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388485150683296*^9, 3.388485195636421*^9}, {
   3.388485412839546*^9, 3.388485425667671*^9}, {3.388485527573921*^9, 
   3.388485542511421*^9}, {3.388485583761421*^9, 3.388485588667671*^9}, {
   3.388485837362441*^9, 3.388485877409316*^9}, {3.38848687364633*^9, 
   3.3884869285057044`*^9}, {3.3884880517125616`*^9, 
   3.3884880819469366`*^9}, {3.388488418701748*^9, 3.388488436529873*^9}, {
   3.3884895251964703`*^9, 3.3884895254152203`*^9}, {3.3887477709132957`*^9, 
   3.3887477830394726`*^9}, {3.388748104301137*^9, 3.388748214630013*^9}, {
   3.3887482714330177`*^9, 3.3887482768164625`*^9}, {3.388750054648963*^9, 
   3.3887501125700607`*^9}, {3.388750200514627*^9, 3.388750204745802*^9}, {
   3.3887502580939493`*^9, 3.388750259341916*^9}, 3.669805013954338*^9, {
   3.669901869145849*^9, 3.6699018709866524`*^9}, 3.6699021731277466`*^9, 
   3.6699024170873766`*^9, 3.669902500180066*^9, {3.799927506220837*^9, 
   3.7999275087434263`*^9}, {3.799927542008089*^9, 3.799927568546587*^9}, {
   3.7999276805383396`*^9, 3.799927751527281*^9}, {3.7999289009932137`*^9, 
   3.799928914224619*^9}, {3.799931947869667*^9, 3.79993195262736*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"qsolr", "[", "time_", "]"}], "=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"q", "[", "time", "]"}], "/.", 
    RowBox[{"solr", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.388750404220339*^9, 3.388750420039639*^9}, {
   3.3887504706037855`*^9, 3.3887504712033567`*^9}, {3.3887506575644755`*^9, 
   3.3887506792105513`*^9}, {3.388750730879119*^9, 3.388750732388788*^9}, 
   3.6698050201319485`*^9, {3.7999279255397797`*^9, 3.7999279381543274`*^9}, 
   3.799930487058312*^9, {3.7999319582429347`*^9, 3.799931963380864*^9}}],

Cell[BoxData[
 RowBox[{
  TagBox[
   TemplateBox[{RowBox[{
       StyleBox[
        TagBox["InterpolatingFunction", "SummaryHead"], 
        "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  GrayLevel[0.6], 
                  AbsolutePointSize[5], 
                  PointBox[{1, 1}], 
                  PointBox[{2, 4}], 
                  PointBox[{3, 2}], 
                  PointBox[{4, 3}]}, {{}, {}, {
                   AbsoluteThickness[1], 
                   Opacity[1.], 
                   LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                  GrayLevel[0.7], 
                  Thickness[Tiny]], FrameTicks -> None, 
                ImageSize -> {Automatic, 
                  Dynamic[
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.026666666666666665`", ",", "2.99`"}], "}"}], 
                    "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Output dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "10", "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  GrayLevel[0.6], 
                  AbsolutePointSize[5], 
                  PointBox[{1, 1}], 
                  PointBox[{2, 4}], 
                  PointBox[{3, 2}], 
                  PointBox[{4, 3}]}, {{}, {}, {
                   AbsoluteThickness[1], 
                   Opacity[1.], 
                   LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                  GrayLevel[0.7], 
                  Thickness[Tiny]], FrameTicks -> None, 
                ImageSize -> {Automatic, 
                  Dynamic[
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.026666666666666665`", ",", "2.99`"}], "}"}], 
                    "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Output dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "10", "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
         Baseline], DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->(
     "InterpolatingFunction[{{0.0266667, 2.99}}, <>]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", "time", "]"}]], "Output",
 CellChangeTimes->{3.799933439509365*^9, 3.79997970585724*^9, 
  3.7999805376118875`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"qsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"qsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "7", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "9", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "10", "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"time", ",", 
     RowBox[{"t0", "+", " ", "0.01"}], ",", 
     RowBox[{"tend", "-", " ", "0.01"}]}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "[", "s", "]"}], ",", " ", 
      RowBox[{"q", "[", "rad", "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q1\>\"", ",", " ", "\"\<q2\>\"", ",", " ", "\"\<q3\>\"", ",", " ", 
      "\"\<q4\>\"", ",", " ", "\"\<q5\>\"", ",", " ", "\"\<q6\>\"", ",", " ", 
      "\"\<q7\>\"", ",", " ", "\"\<q8\>\"", ",", " ", "\"\<q9\>\"", ",", " ", 
      "\"\<q10\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758443792821266*^9, 3.758443795038574*^9}, 
   3.7585175957573547`*^9, {3.758517630772461*^9, 3.7585176307729626`*^9}, {
   3.799930517891491*^9, 3.799930609091443*^9}, {3.7999306456064987`*^9, 
   3.7999306681464467`*^9}, {3.7999319666248035`*^9, 3.7999319970849423`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$42525#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
56OjGg4YTlHL+dNtgntEgIuHCg72OkoXMlg2wb/u7pt0RRy0KNPKjPFtgkH/
tYv6sjiQvWSOX+HfBKlruZEJMjgoJq+cPhbaRO9fYe9JaRwkf7EI55DYhAtB
LmOJEjigy6iaELixCapS5oZ04jjw86EXvwGboGSms58gigMbmZrR+7c3QT/o
UuacCA5GzzBef6K2CTm/nHLy0PsDnXKC3LU2YZrvU3/QNRw09dcOBeluQoBx
KJ+rEA6ky08JJ9zbhO6UgQT3qzjIj7UOyHqwCQu6hgKRgjjgdfr8u+whGs8j
d7xKAL0f7jBdbbTYhMyKdxV7/DigEbZ51fN4E/7RyReqoexLV9879XQTZost
WouvoP5ZYubffLYJWNlYciGUrX88fUnmvAnXuNvM6i6j/slu+MnovgkSz16P
m6KsjWO9xOO1CbjjD9WsKH+zsnsh7LsJwVYaQROXcCCp+LUTAjZhrVdd6TPK
uefZL2jhNsF53303D2VusmfuJmFovrzeJReiHDv+rc0OvwlqPHnXmlCmIp7h
8Y7dBC5ft/IVlL0Iz13CEjch4dK4ED8ab+1FU0tKKrp+w9dEd5QfGXJw5qRv
wvyPE1sDKP+WdHSsfrcJ+6tpiCZ6Hg3W5qaWj5vAomH9shflL9vnzg7kbgKz
m0reMzQf4j1Oz+YLN6FTWrydA83fp+KWr7ulm/DKkHt0GGXOKC42yqpNGLDc
HitA8x39zMWWpQ79Xyg3Nw7Vg0LzR/3Fhk1IZXvTGorqtXLC7YlCyyZMiuyO
ZqH61vz3pBtp34Qq0vUHTaj+OMMHUje7N4Hx3urM1n+ofp+AWnxgE15ezeb2
EcPBareIw38jmyDqJdM9iPqpdv/8gNDEJpSs+UcoSuLgrgpV9qU/m3Du3KyQ
8g0cnHc4YLiwvAk7VmOM46hf1xKX3LnXN2H08DZpEOrnkPkuZfb9Tag3v0BO
JoeDz0FJ8yeot6Dp4iAShdZDaEGoNuXJLUA/GTkC0Xox6PeuxDBuQeZH+nO+
aD1t8Jnjjti2wPJqS4T/HXSeaeK/vHJ5C250+og038dBBLb2cbfyFpQFYPtV
nuLggWB+Z7v6FhQu0UrFovV+WS9dolV7C/4zu1o6g/aDL28DKL8abEESZdg2
wRkHO3IaH0qttyCcJu2txUscfLUB+iLbLSB5qdg+64sDfLSIW97zLViJK6Z3
8McB/yTz7Sz3LfiuXz2ajMOByavR2QTcFpxKc+NViMGBQHaXZmzYFhw37vZS
o/1rr+tLOR6/BdxGW+3ziah+3B8CgxO3QNdBx2vrDVpvxGd8Lz5uAf3MQTiS
i4OYObMIt9wtULU8P/WrAAem9Ho7ToVbcClTfcMX7a8HJpJNtpVbsETfL3u5
BgdCf0msTJq3gH9h+l0OOq/Z5TffZWnbAtawSuOGTtT/JvjbHZ1b4D3cVbn6
C90/keuKbP8WiEcXyWYNo/n0lV06N7sFAzTjy96rOLAUphjp/bOF9tVGS58t
HLwbb28PX94CybspzGn7qF9uGRccb21BwcZNDil0/uMk83IcwWzD2hvOr/1n
gsG4WN4ijnIbFF5277Ryo/eROY2eBs02ZKd7mw3zBcOZr8lidae2ofQfr9X9
68HAElC1l8qzDU1V9T2ZGsFwkmL3pRFsw2DDU6W76PyjXv75GZP8NgR4Xq6n
jAyGEKtA0zalbZif9IzqiQ8Gqu/McjKa2yBceV+6PisYsDhRcg7jbQjWV1j7
9h29T6kdQ4c8t+HuooBFP20ILJ1cTjAs34a0Fyue3mkhoBM8WmRevQ3PGL50
qmWHQCW264fN5200T4YedCUh4H9Y/M+zaRsCbzI2Pm8KgTN/3B+n9G3D9Fa7
Z/ZSCCh/w0oM72xDXaquLq9EKOTDjvb0wTZ8f0p2WwUJBaaaOZulv9ugyxfh
8FglFMaKWt8cUexA1mdu++AHoeCahqc4x7oD5wZfsD/yCYV3nhx9xhI70Jb/
vvbm91A4sXNyzfLGDvSfUmOO7wqF5w7/qO1hB/wEliIpBkPhhvXkzZe3d2Bn
58fCteVQ+Kn/8f2bezsQbJ0r+o4pDEhERF3G3HaApkCL1Mk6DKxyL0bOvdiB
Gbxe/EunMGi7xJq96rMD+NNurrkvwyCB82D4X9AOjL+5xPYsLgyEaOsVuBN3
QLTHZCryWxgYzakxmVXuQBJp3MPcy+Eguniq4kLtDhz7jX5KFw0H2tWB+/PE
HcDpwEwqEg41O4/Tnn3fAc+9kEt5BuFwhiKA/2XfDiy4ScwIBofD7wu1SMrW
Dtxk/4/FbzEcCi/7T5ns7UCF4jOjot1wwAmqBvIe7UCVUERBEyYCJER//8jG
7ILURakXb89GQLz81t3KU7uQJRaWflE1AnTNBe16hXdh4fv8oFpmBPBbbdIn
ie7Cu2W7/MHcCCCzqS42ktyFm5O6/YoVEVDsoLw3BbsgOi5Omf0jAhhePfLf
0NwFclHxtsyNCJgPEOAr19mFmczTCqRHEVCP22j2uLsLbEJk96TII+EZ3peO
1GQXrHs71cRZI6EjLTWJ3m4XLGgMzSykIiHrrYXMr+e70Oh28l3ErUh4+YF/
LN55F5bc2rNjVCLhakHlBU6vXWDanDO7fj8Swj73FAiG7oIelXeTgFskqI7Q
Nqlk7wLVW+Lnc/mR4Mn/3Osgdxf6u0f5HpVGQo7br/9yCndh//EoWVR1JNCe
Sk6jrdwFCRnv0jdNkdCpdMmjs2kXrrfnKuaNRIJe4S1B/eldUKf1/aWKxYOJ
v2u0Kdce+HN+ywjgx0NE14Ay4/k9yHgjSbIqiAfiuZv/Gvj2YLY5OtroGh64
KzG254VQPrunc0sUD1NLeMVZmT0ouNgrJyKLB+u7OXtPDfegl75ErFwHDw5X
xk3c4vZApaDvYsBLPDTfspN1T9oDm0td+MhX6HqGB+c8CHvgJsKYnhyAh44Q
phHP93sgTjmTUxCCB8El5Qcvy/bAYHrIqzceDwHYPmmfqj1YV6amG03CwxCH
xRnfuj2g+VKjMJuKhxAN74FXjXug9dX07XYmHubzi+697t0Dee9fNyfz8YB8
l5UIHNgDW1sLpfIiPCSM/WAJGtkDnoyIR26leFBimO3FzewB/V/RifoqPBAu
O5UF/9mD0CEnUKnFwxZCEheyjLLRVPHnz3h463BGL2x7D+pu7f5+/hUPB8Ef
rofv70HFgm1oXiMedDJFT0cc78Gn7W86/d/xQPJL82ck+T7sssxwbfzAg8Hi
UBGeeh/ebYddnGrHQwHmSVTUyX2wvTgBDZ2oPqL+2jHM+0CkD/+I/MJDuTqD
cCz7PlhqF8oO9+DhpCWBPu4c+r7wyT8mfXh45M2/GsezDw1bjh+a+/FQG1fR
EX9xHyqfFnuwD+DhdL5CfsKVfQCLEfM7g3iwaeoOT7y6D+0nXjx+PoSHL6Mm
dkki6HoC/jjXYTyw7y6qJ4vtQ1jFQpPFCB6e03sIpkjtg3Z61nnJUVTPSxS0
qTf3oao/J20TZS4kZjH11j7gtVZvxI/hwdWA+wdBcR8y9i33ucZRfZ/nfXqj
sg+l37EDeJQvBkuHpGnsQ0xO/dA8yl4Z35+k39kHqoQIsssTeOip0lPJ0N+H
kRcWmpooC/6cuJx5H/2fWvCxCcr+C/ZUb433IXvOdur/PEh2NPfWbB+Wyt+7
/f/5/84Gf39nuQ8yRo3nr6IcfJ3lw/sn+2AoWDV3gMYbV3sbmGW3Dx8zn3+t
QFnykbDVB4d9UC6ZKbdAOdKrTvGjyz4Y+5788hc9z2ys6sVsj31A/huexqEs
m9eP/eS9D9K9GlxkKMc1Ppr+9GofdtTMHGzQfCyNrH/Neb0P6waMQw1o/hR2
Xr7NDd6HxF5DIyqUU+ho/fPC94H7p8L2TTTfqsAnVxC3Dy54x8euqD5M47hP
T5P2AcOE7Iag+o34Lp66TNgHLR9EIvY3qseXwqn0d/uQFiWcH4PqH6d443V0
yT68rGTfUfyJ+meWsKxZgeopaR7C242Hy0Ekd2lq9uEKCXvVHuqv6uZGvoAv
+6AZlzkT1f7/fGg3u3Tvw7YcmadbMx4+LRUL/9e7D5zzqePcqH+dwpmTVn7v
w5lP9ye+ov6m6Bx88nh8H2RNmn/sfsGDgI4lzf3VffhdOPxNsu7/+ntqypw8
APOaVjkZtN6Q/eHyPYYDaJqm6CoswAN1MnCVMR2AwwxtFS9an6lD2LWrHAfw
YfXem7+f8NBgEhnFJXAA6zf4PFLf4YHW8l0PmcoB7HXasFUk4CHDocOwJeAA
1BTsGF554yF6xHCpF3cAzeG0GuUv8OCnMuc9GXYA9p4ONIseeDDnIck4jD0A
O8qmk7queODtFpm7+v4AJBQF+M89Q+tZOM4puvEADup89UpN8RCbykOe1nIA
mj2bSgsmaP+hyo/PaT+AIarxFW5jtN7Gm6q+9R5AAemRCf4+Hi7g9/7tzBzA
cLoa0Q3tf+9XH4Q9oDiEQKSBYk4BD/EP5s9ZnzgEjYq/zffk8RD43bnAme4Q
1vSYOrpu4cEqLfxnOMsh5D25lz6E9tO7NGceJZ85hBsx6nZ2N9H+5Ja1ncV5
CCHK2V6UMnjg0yKy1fMdwp2ay+Z6UnhgqVH71MZ/CDcFTktSSqL6XPp9Y0Do
ELpDt7S+iKP+/btmsiF+CJtlD5L10f7dZ+O99lf6EPydNQ/FruOhqY/ajwYO
oYjM0/LSf3j4kM/7/sLtQ9DTVNO/KYyHxDMF4iJqh2AZVjtoht4HuMAbzTe1
DuHezMUnCUJ4cN/4fl9V9xDY91xIRq+i94GJ3uLde+h+HHPTxVA2aB33snhw
CGXXf6i8Qe8XZXE7uucPD+HPt5+HrChLZu6neVkcwpeclvJMAdSvdIEiwY8P
gUj+w1MWZTbPU1/jnh6CdNvA7UX0vqKafaOX+ewQpoTpObNR3rsjMJvvdAiY
kcRjN5Tn6yrcatwOIV/r9/I9lH9fUaBufnEIsoWWWqooN8d1Jff4HIJjVa2o
NsqVpMaCE/6HQC5FePsE5Wy7P3XLQYdw+7xeajzKG7ynLOZCD8HhQ/S3XpRl
fktTTUQeQk1WccMldH+vwy3yBmMO4SJPaUwYyh1yYTo9CYdQwJIgjUXPx7pX
utuecgjPYxvKI1A2zRtJ/Z52CJc/MFELovnJNqeQa3h7CJyWiSLDKG+wXpur
/oDmv0NdOA3N7432e2GlOYfQMilC7oLmP8DPVyS/4BC8M28XGqP6sCx3v8io
OIR2b7OQx6h+DzMPuFNqDuFxDEUBDtX3473zTbHEQ/DrqG6pRPWX/uLMgPt+
COcTBRylJdB+6kYoe/XjEGx3fOpDUf+0CTYZvuhE8zHMTDOP+sskgfW9fT/q
l5jPcQ2o//xsq6X05w6hdl749Z4cHn7wTI1qLh4Ck5B4dQbqd6Z+mgDl1UN4
z9O1pK+Eh6xbxh03dg+BothdbUwFD60sJBa8lEdAMtJcYX8HvZ/aLlNx0BxB
Sa9RlqUuHoxe3cljpj+CsGFeLgt9PKwsZu5SsR7B9Q2vfAe03k41KIat8h2B
+9VrMGKGB8OnoWW1Skfgmp9yb8kJD4tEFqp7gUewt+B/RzsRjX/MJE4bcgRw
n3DVNBkPZjdOP2oIP4LUnklNB3R+6C+nrxeIO4LZx59up6bj4WselTvJuyOo
fs8vzJyN9uuUg7nshiOQW/Efjq5G63Ngj/lh4xE4T50t6ETnA0bWXXmmliMQ
sR95Sk/EQ1D0ZtrLriNYFTrcT0HnA6fgpXu6Y+j6WpLrwmi/VXMb/X50dAQS
Tylf2U2i9Vo2vF1Ecgyfzk39UppB+9/G4PnH2GPY+eclJjCPBwn7fp9ummM4
oa51kXkFD+ctuySyzhyDh5DcE+8DPIxmdlg+4DwGxv0Vw9pjPCSNt8Uw8B4D
C/Zm2gnSKKA3aln1vHIMXcXNXL2UUXCo8+WDluQxhBQpkvKyREE5vr4XK3MM
PbfwuCH2KHDo+IyphmP4I1Bk/u5cFMyp1Dy8cPsY2E5l0D+6GAW/kFLWff1j
sGi9iKSIRUGOUFZQptMxpEnQ4r0NoiBMomP0g9sxqFV3f3AyjgJ7ZEcs78Ux
SIxS7LmZR8F/OkrTFf7HsNBOL5djGwXVLrNIe8wxmK1u+da+ioLmWr6D3ZJj
CE7+ULORFwXTqh9sNbaO4SR13nU7mmjgePzxzp7zX/CKn8nGN0YDTS3tHWHL
f7ChwaiVsBwDySUNKXcvkyA8L2Y+4CZiISDw/Cd9fhJk0F9hmWYmFuzvv67U
EyRBZjcbnQPnY+HWP+VeHWESREBcVtVsNRbmVbvotCRJENsEG/r8o1gQmxx9
dVuZBPk1HBFexRwHnGUIXkmVBFm2/FncyhYHVLjMN4rqJAjJpu6DkbNxMHzV
qkZemwSp0EsUp+SNAz8P9GPagASx+o2ctROKA1t1LQwYkiDvSU48DBGJg7tc
RYyyRiSIf6vfpWzROLjS6CwkY0qCkOn/U1qUjoNTiX0yN8xJELtHz9/QycbB
kY2kmvQjEkTVTvTF9Vtx0MVw9FjSmgR5u2+l/fp2HFDai4ue+UiCXBAWNz4k
xgE/OYZyN5sEYbbiwdN+iwP11M6BXzkkSJXnvN2F5jiIbrX2CS8gQRIGyjru
d8UBx6WUVpIKEiRp4+zrvvE4+G/8n+lcIwmSv3AF2MjiwVinJbx0igRxSdLT
b1SIhxJxozlNLlIEc3byhXpjPNiU1HXo8pAi5IE92OiWeOAW5io3OE+K8Gg2
D/S1x0PYlckA80ukiKI371OTvnh4xGHN63qNFFH/La1gORcPTGTOxgQgRSJ/
ZVW8oE4Al/bQX4sPSREW2k932jQTQFB1uXrNjBR5Mm0aKaybAJNNmpnbFqRI
fjp1c/y9BNCsZ3T495gUyfL2vPrENAH4ShLoTj8nRa70joxddEyAvsS3KtK+
pEitARaLi0+AMGZyEfAjRWJcfC10UhJALtqKTSGAFOHPDVe4mp4A+aFX5jRw
pIhol0k406cECHxZEGCGJ0Way6ZUsj8ngMSjGiIuHT3/j3UDnkU03vugp08z
SRF2Nax10VoCsMzqsmq+I0Xcjvjz7+0kwNbjJfvTH0mRL+p2k7OkiVD49Bzn
mwJSpGJ/hoLhTCJcdvLxKvmMni/7anGUZiKwlqpdjq8nRVpbSW3C9BOBYpu1
x/0LKbLmhVSmGyXCtGuhgGwTKTLzFsPG8jQR0j0nBpvbSREJ09i568GJwOYn
LzU6TIrgmoXZbrYmAuVX+pn6UVKk5J2qZtfPRNjBDOPfjpMim2/UTrgNJULP
a+d562lSpD67PvlwKRHwwe8TNhdJEYqYN6cnGJKAOopyh+qQFGm0xddwGCXB
QdqP4uvsZMgJbNNc32ESxJNbzdOeJUMe76kZd5Eng8hTEs5ZDjJEbGGBspM+
GazFxYITucmQ71c8D4bOJ0Nf25uHx5fIkJYY27E5tWQo3neg/S5Ohthd1JsT
Tk4GG102K0M9MoTsw9EWXigFKKqKU67fJUN8PukKPZRIgQxOjW5aAzJkwnXt
NieSAr//vJIhPiBDZOOJo3Z3UkAJnZ8vWJAhvzTnyQ2dUoA37zNx2YEMYQjp
azQtTYFBCkv2V5FovMYL/poCqUCtE2vhF0WGfJA34hj9LxUkCV/z/GPIkN7u
rD8m0qkQf51XLjCBDKFXt2QTVUmFO6ZjNqFpZIj4+KNIQatUaK66XxtXQIaM
sPW5IoRU2MUGUyQUkSEkCHV459tU4NOu1E4sQffLKq6n8ikVAmZZZpIryJAM
I+PVo/JUgNM9J9OJZEhEsY3Qo85UKLfVfPipkwzRYd1sFTxKhZkK7+ycbjLE
8HKctzEpAZgweZu5v8iQ0GUZxJmCAI5JNLiCfjJETZlrQ5eBAFebmgtLx8iQ
4riEtSFeAhgx7h2UTZAhNAW5NDcvESDE6JJixRQZQv76inCAAAHmN14PVM2R
IQFvNaO/XSfAOy55MuIqGXIsGsNJJ0+AXzaO6vXrZMiuaN7mWyUCkJVnxDds
kiGbX+R3L6gSwFSdRODbLhniN6x3e16bABwedbot/8iQ87vLJ/5f2Wrflgit
pBhkMPlEpbkpATzpOeZ/YDDIz3vbXjIWBPj93tOrgxKDBJ4T0yyyJkDMT4n3
v+gxSOg+u2C6IwEOJrpLihkxiLS9Q0+DMwHM159+iTqNQaLphK79ciXAfwzp
Y1qsGORp4/Px754ESOaSXhFixyCPR4zFc7zQ/V7rOTp5FoN05XwV9XlJgJ8a
VGfaODHIaF73lf1XBJA2zrycw41BdDIXudL8CZBpKyMRwotBftSb1Im9RvMb
+lxPmQ+D8BTLLoviCICew+LSZQxi843PhxBMALlP7xwo+DHIHRmjip0QAjC2
/I74dhWDlJ0uZX8RTgD3346Et9cwiF+CoXxWBAHG52hz/UQwyP5Z/VNfIglQ
SHGrBRHDIPbJpme6ogjAxjLUzyWBQfATZZYt0QTwvegy+1cSg2RrtuGrYwig
rZCNqZPBIBjWDP+AOAJU6sqfSpXFIH8mzqoaxxOA22KE+wWCQQpMO5evJhBg
7RWjrJQCBkn+/rK1PJEABlE56mxKGORkgw7ZsyQC1KcrPti9jT5fQMfMlUyA
SKKHe5kaBvF8rPDNKoUAOx2ng2I1MEj5Xf9Hf1E2Gc2Lc9LCIIL9USPhqQRo
Wr79TucOBkmxnBBiJhBA6HiiWEQXg7Qf0RjEohxP69XAoI/qOTN1l+YNAf6e
ZelavYtBcuRlmD1RthIoHO0wwCC88YM24yh3SKsu5xlikM7Il/qyaQQQV50+
DDPCIBtazT0xKL+5//KErQkG8XljOT+OMsUTNnY1U1QvUgr8xXQC2LsXX+I3
xyBp+g9+mKHcF6QuTv0Ig5x6tZcUh7JswqzCvCUGoYssPqxHOSvLV/f7YzQf
xxZrUyifLD9jnvUEgyyQprr9Rdm5sfT566cY5FexRhRDBgGGezR9Htmh/stn
vXkGZYXp+XD5Zxgk3KXX8yzKuZt+qbwO6P/lVqpMGf+v13M5pE4YZMbLPweL
stepiqpxZwwSNX1MWELXn+a500x0xSDFp/N52lBWF1nse+OOQbIYKLIzUC5F
Xs94e6J+NeI/ZY0yhzbXlpEXBpGdLPLhRDngYRWZzEsMwvyGnroRzceSvS7j
WV8Mco3WKv8Bynovl7kOXmGQqoDuZ5NofmvDg4QG/DFIy46dxn2ULxB4bla+
xiAed+7drkf1Cs2tUUsIwiDj/tnGrCgHZizYvwnGIFt+R2aaqN5+8ezR70NR
vTon6xxRP3iHKpflhmOQd3QZDgGof9x93X6XRGIQsV9W3v6ov5xdsg6ro1A/
37CdeIb675lNL+eXGAzS/HGJoIL600rvumVXAgYh7Livf4slgJmKOa4/Ca0X
jwZzK9TvRrJROaMpqJ6PC8o20PrQvby6vpSGQU7PZHo3ofWkeY6TeSsDjXc2
dfAkWm+qpzQkD99iECazh9dlQwmAHH16Sf0Rg4x9axq4H0SAG+sDGQyfMIjB
NbHLimh9i89SNbLmYpC520dO7Gj9X+2youErxCCmHFfIvdF+ceYdb6JcJQZR
vR3GLoz2H+akOzUq1Rhk8YuyiYUDARgifEe1azEI5V/hAl97AlC6j154WI9B
aL0GP4Wh/WxLLbnoRTMGafS2iiEzIsAq0tLj14qeh+O0+mcDAiyI7e0Gt2EQ
56zhAFt9Akxw3ZVN7MIgmtpWbumaaD1sMv4o/Y32nxQDayuEAB9TgqeX59F6
qGpOUf9/f190ZzWlxiKDz63T6OdSAUvu+s2YBotcFbU+7z+VCrmcTg4PTmIR
XnUc9cFYKhzesftxlxGLKCr0Hq7/ToXkSjMfDXYs0ipP737iRyr8fq06J30F
i/CJTZ7tKkgFXW6OCmYVLFKw8KDJxjMVDqTYH51WwyK3cqVm2N1SIVOXhZFR
A4tYGabZNzulwkYgw1PaO+j/X+0bztulAn4Zy4W5j0UidN/a/HqYCh3Vy4Fr
1lgkNqu4nF0xFVT1iXd/4LCIZYx9jiJjKghcv9ScFYJF5t/4zBvTpQItY6SU
XxgW8fHJWH1FkwrtbSYcUngsor7SkLFMnor2w78TWQlY5END30fdwxQQ5rXS
9UvCImcaTsy27qUAI0nHN+MULHLxrDa15k4K/KwhfGBKwyI5TAw07uspoH/9
pp1fFhY5qpVaMZxPAXHG96PGH7GIl72FjshsCrCs0mpLfcIiv/O/DZ2aRueN
T8P/reVhkZtybsdrYylgyOu1Z1yGRdr8rC9u9KeAKWONv9Q3LLKq9vk1aUsK
3Frl3WZqwiJTmwwVMt/ReaQ9xGrtOxZZjmbEeTemwBTOUOXDDyxiW5FOw/Al
BaxIDuiYf2ERBYvkh6w16Dwzaua71oNFaJiKhm9WpcCl2pb1H31oPnFctPcr
UmDeLanHbxCLFD7M87UrSYGnq5LJaxNYZB/rXkGXkwLq7ek0bVNYJD2b5/Pg
xxQQzKHy/jCDRdbxOOeUrBRYsfr90OQPFpmc4ls9yEiB56NuF9vW0PwrK36/
mpgCd2rH4j9sYJFqk+KY6LgU+C/5NpX/FhbhP7hImIpOgU191kWpPSxyWXbR
QjU8BVzbyws//MMi5keuufyvUmABXyKeQ0qOzBtqdH7yTgETvcLafAw5Ot+/
zT/tiZ5vKLu5jJIcIaq7vUlzRPP9J3X8Kz05cjVOVj/NPAUqsP4M41zkyPXl
ExMJkAJ7N7SesyHkyPByxnbeRjK8+DR3LdiXHGnelORnNEwGYlxLy9AeObLg
Xmd+qJsEbHL/CCUH5IgJOT3luTtJ4Lgi6hh6RI6IZf/bVdJMAr7b6WdukFAg
QSdWPEqUkyBsz/VpMiUF8u2+n6nNzSQweHDh5H0WCkS88eNV84tJUExpOCHM
RoHcmvxCL8ubBDSlkWVUZygQB/fhC6e4kuAz7aFx5TkKpEXKaS6TLQkufO7O
Z71IgXBFqd0zpEmCNW4f7b7rFIjgDduF78uJoNpeeiFfjAJZCI560PwnEd56
LOy9lqBALpA9TK+YSYS7P/UzxG5QIFq5+QnmI4lQ6y+4EStHgQxTGrkv/EgE
3OxAjO4dCkRlkvL53PtEmIymtxbQpUBW3jq4jqcnwg1QlMHoUyChffe7W1IS
YSWhcLrYgALx9PkSYBeVCHoqQWKnTCmQkr6Nyb0XicCdK9rfZU+BnPrvfV0c
+j1yUvYfses5BfIfjbSllnIiHHS2fOxypEAG//uyhJFDvx82TTy7XCmQjxyR
b4zFEiHoRvC5rpcUyEaxyttfZ9F4rSMWnRHo+U+Zax3OJUDdn8C19nwKhC3m
s2efXwIYXhqg/rFCgVR/MtdYLYsHX2+6io9rFAjv1RqJ0oJ4yPol/yhwgwK5
l+PB65YdDxs++Z9v7VAg5yanfu6mxkPwb3+nymMK5PE797hp/3ioDBYaeU9L
iUQkh0k9vRMPo2MWIf50lIhQb68qk1o8YMWTJMwYKBHO53npNej3rPYkJpqD
iRJhayn6yyQZD3PSA0oxZykRjdjVekmueGBZ8i/05adEJp98oryzGgcyclXG
JoKUCE/PuWKfP3FgnrhyQkaIEiGv/sdYORUH+Qr3LXdFKJG/Jvsbir/jQJEg
dMZeCn3euTJvpSEOnDUH/B8oUyJ9yqerxhLi4Feh0D1xK0qkxjQ2n0kjDiIe
CkarWaPx7grH8ynHgSodf7upDSXy5OsbW0Q+Dr48vSgfak+JnAvgWQyVioNC
Po5r466UCLUeo5UfXxyEpVJThgRRIm9NqAd7SeJACTddPvKREhkw62mYL40F
MonJ9Y1PlMjaRdt/UoWxUDczJkiVR4l8Taw0jciJBVH5ocz/iiiR0k7NECQz
Fs7/7Y4IqqJEVHmeG7VGxgKJM9FKpJUSkbc/emFvFwu1vHUZSm2UiMImYS38
SSy4dVcPP+igRNqf2/g0Wsb+L6EAXv8/7i62UobSB0A5unHofF6UP93prD7b
2gdAPk2z0gxRlD+YmKp58NwHQKENGgPtTZQ/VEeotAXfB0CG30fk1EqUPxD2
pe8a4QdA8Ep9qHxHlD/MpKMqMOMHQN+onlrZQ5Q/iFOhZUXlB0Bn8zH66j+U
P0MCn6Ba5wdAdjPFhrE7lD/+sJzbb+kHQCms2v8sN5Q/ul+aFoXrB0DpitBk
XTKUP7iWGmA=
          "]]}, Annotation[#, "Charting`Private`Tag$42525#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUl3c81f8Xx1uEELKzK0Xli6yUjpIRyh5ZmRGRZK9077UyQlapFGUkZCbr
TWYys2Vv2eu61+r3+f3l8Xx8rvf7nNd5vd/vc/gtH2nbHDpw4EAY5YED//8b
LDFWE3gnCfSN6/e5P52Az1ZNT+quvoGtBx3T3vos0BxTcIri/FvIgU9r44fZ
gGE1EE84mgyxPHrzv7U5oVk/7sN18w+QaXkr9I8lH+iekLWQ5/gEP+v8ZOvP
nAXrcPyoXNgXENPmPBWvfQk2T3mWmB7KhtVP0k8tuy9BUNnDKD+vbJBn6uZ7
bSgBGX/15Ctsc+AD8uh4bC4J7qeZNXkEvsKo3ZRntZs0lOKmc9/u54F7eOXF
qawrgGsdTboomw8r4kZhJ0Svghrnn+AKt3yQUfMbvVdwFQbz2u4NLeSD8u9X
Etrf5GB/tOQ4958CqDYS5HxTCFB/oWDnC2shpOVTGg2yy8MLz+yZq9qFMMSS
YU/Wlwc+hhRk8rMQRk9Ffh3pkIcbEPbozbci4DSSnJivug4ecgJLIqQiINw1
FTHbvw5frnx/WC1TDAuf9BjpZG8Aq8zMg+nvxfDd5boz35cboCblP+u5XQzW
sRG9hPEbECDBYnvsyjcYfTuXdYZNAeZEFaxFy7+BZoyKC5ePAvD8NzD+Y/cb
rOiJabl8VgDti48t9ORKoFWvzO1InwKUCyWbeVeWgDTB/8HQxZsQJbBjWFv1
HdRk7Ifdam9CHV9Mr/7BUuBxO97NPX0TtnmE9Oeul8LmNufJh5SKYH3SQIe+
phQ4t9XKN24owiuOpY73h8tAMpBM8989RWhlC9S8dLMMiGxOGnTeiiDDXHDb
sK4MuB7dfVeUpQiOTKrNfynKYbhKMOnpD0VIYRhT9VMqhz0JO5fFXkXopff8
eTy4HM4y3eL+N68ItHTHVVIayoEmeSO2cF8Rrh9Lq5egqoD1tYrfdAxK4E4t
p9igUgFXZJY6afiU4PPRrpq7oRWgt/HnZZaIEoxQONxY+FkB0VfNJFauKAHz
kUPV/jSVgFu90TyrrAQqh14Bo1olXBsxM8vQVgK/A6KVqWGVQIjDU0mbKEH+
fv1VqeZKyH2R9ivWWglmdk3LGmkRyFd2ZlQ7KAHXzsZl49sIyo68eF/xWAm0
yGElixEIaH7MFIa4K0HQloB0QCuCT/+ZTgt4K8Hw9qBR6NEquN3/UjrcVwlI
Xude/z5bBYElV6kr/JSAifyk/6RKFdT6nhJ4h/FFT8RuY1cF3l2pM4+x36ts
0RjmhFTBCNtQAxu2nqW7fsJWRhUkaf3tCMf289380CP/swo6L6lTdWDxJLgu
sjyfq4I7RVRLU1i8+esyep3U1RD17w3bFJZPswshlku4Ghy+fgxYwPI98Pjk
iVz7apC4GPDpsZoScK7c1yY9rwZumUCe8zeUQPJRfvT1rGr4LepJ9pNRAnvH
Wwxd89Ug8pqnZ+2UEhAWYjW4aX8A/Vf7BWYOJUh2GI28f+EH1AhnB3TQKUHX
Aw868sMfUHD/v9ucREW4dv8TDc/SD/jmsPVxvloRZs+9jVKgrQFN6fsMXYWK
EDMfy/pAuAZO9gllWKcrwowzQaDwfg3ce24vVhqOfb/km9FPqIGsOzErbAGK
cJX4RORfSg2skv2M1p4oQpSPlazqSA00eMSd5zZVBNlrxlWP9mrgIHtgtKO2
Ikwe0FGKO1kLfhdfJMuqYH4NuqE9alAL1nreeaqSijCuIttH4Y6xFG9hxAVF
CD8mbnY+thYGL50xuX1aEcai+O3d22uhyYEp/gYL9l2HYyVpqRZ0atvOeNIr
ghQro3s1bR303s3QE6ZShNE+qt1p4TpA7J9P3z2kCM+TDuBob9VB5xW+qSN7
N0HCjHRU3LYO/jKft/Il3YRhvpUIg8A62HHJ3sjcvAkhEzMn/FLrwFnCvals
4yaIp428Sqmug8Gj9VN52PdBu17expE6kOAxUg7H/j/ofNunxb06SAx5vayK
rS+6VH/+BFc9XKb9MrJ4WBH+fK3Mk5GthwdNJexutIoQ9KRY2sywHrwm/yaN
siqCqFROBd69Hr77PLQXPaUIA6RPCpmx9eCbZxtoLaYIhLK3P1vz64EpnXLJ
97oiiPjHaWy010Or35NPXjqK0Ccf0c2xXA//9Pu+GNkqAu5woDHQNQBZ5x4F
n58iXKj3HbM+3wC08eJff8YqQk+Iq+3zWw0QE27YbZCjCAFqDxdzbRsgMY9V
+NdPRehuNyZvpzZA/h8GXRtKJQh4qfOU70cDrNk4D0efVQJhfTUKpdEGMOK5
9ShTVQn8/8gyRnM1Ap3M3LtX8Upw7p14QrFsI6SYclxxQUrw21yYe9CwEShE
W3sl/yqB4DSH0Nm4Rjjpb03rr6gM7RmMueoFjXDmqtWHQ+7K4O1ALenS0Qjl
TZWiLhnK0LZCkq+g+wnhWmvSTCdUwHOn11An6Cd8La86bfhPBQQq24Y9P/4E
drvNR3RwC5oDGqzf/fgJLCU6UxNPbwEf5Tfnuf2fMMUz98npsCr8ZIgPeerR
BNd+q64NM6mBLI9zFl1cEzCJD1hwGKjBl/OqrUn5TTAZp83/L0kNIpX2T5Qs
NgGVWnZU81l10PW9n7xi9Qvk439LPlK+DaMzUsUWms3AL6OlVhWrAdqbDP3L
js3AMjG/3P1HA2oOze/4hTVDjjMVYmHUhDTu5Ouv65thXp9fWk1fExx0jrb8
vtoCeQeIQlKDmjBoPrZsbtQC1f6vtqp2NeGOUxnTskcLCG0Kt89zaYFo6CPD
YwUtkKJlnM9vogXEyt4JBaFWOCCos5XRpQV2zXmUv5VaIWfW33txRQv6+8OE
zK1bQfqi3NZ9Wm0o34BHvsmt8IHda5Ykrw0XD3HG0FS0goIp3orRSBveHd8o
TBxohWNncibMXLThmXDGdiFLG8T4EA6+eq8Na9I4boVLbXB0KzTav1gbrBVN
5Ds026BE11Et5pc2KJkzBC2GtYHYRett13VtKHH8m+GT2QaUhPZtSUodEPKp
/UXd0AYc10VPXmDXAUq1cqoTB9tBSIVOvviyDiAtIc6B4+0QrdSmdOKWDnga
xp//wNMOlrtpe8oGOiB677Cc3cV2iON87KFtrQNzNs53/rvaDiMhXAXizjqQ
8nDoHlG1HWjsnuTOeuuA0RPVxxV320FKV9bBlaADJ7y/4Qh27RBr0T7ZHa6D
+eV0rJpHOxg5552ki9UBQnD0J6agdgiZu3mc87UOyEXuF/fHtsMKbXHF7jsd
IMY6NL5PbQexsXHBohQdyEnq67fNbwfGoMhbCp90wDZFcV6kuh0SItDp9DQd
4MvM391sa4eBaJbGUYz7cnnpK4bbAfdvpnIF+310cTgvYbEd+KoVDXtTdWBy
7n132F47vC3Wspd/rwMy3EVhL+k6QIUrmVc9SQfCNX9eT+LuAO0bF/23sHhH
8UNbKRc7wC9CxNQwQgckvq1mf5brgM+rdJ0PsXxD/lJY59/ugI9Ep1EJTI9B
bk7OUtMOIKweDPrqhOmpJdJe7dgB4UoRtSMWWP6EG0E//bD1T06/+aGDxftN
/2pHRAdopAgz3L2pAxfm7df63naAGOMKb+olHXjK8zRjNLsDnOTuNb/n14Hf
Wi/NZis64KU9Bas2vQ4IBqYzr7R0QH0O7l8xWRta59sC/i12gOPT9IKkZm0Q
4J2UOrrfATsZR3AnC7XBXZu0QE//G/Yqvm7cea0N3N/57vKI/IZAm7teKlba
8DDosZic028w4Tw1oY35m4b/xLj30m94z2Yt17CvCWa6ZxNx+7/B1+LnkP+I
JuQHX7nznL4TAr/UBpGQJtxdsip9JdIJJ+48HhYL0ISMssKYEqdOuH2/vqaE
pAHK+voKxKVOKJQz9FZGt4EQ9urj4+Uu6Pnumm/crwLvRw/72+53wY89p9GR
FypQJulkYErXDRUlb847K6nA2sgNmlvnuyGTG3EUFSiDhcTCIz7bbpCtCs7p
jlSCa0PXrrQNd8OyzeslKZWbYCSeyVy32A3/+VfH5P9TAPfgE0uluxhfp1iE
bwqQLTb7Po2zB1Z8rsTFCCoAV1A0pb9+D2x1JesepbwBZJHJjgutPbCWHzQc
bA/ATLiTJTDUA5biWqHktmsg2l9CYF/ogX9NtGXbl66BHT5C+ghNL6RXeExk
bV2Fnl6pt38UeyEq1vNZk6MsrF344N6h2wvrdP+SvzdcBnrcMc0Gq154tV36
WobvMiheGD1U8KwXeGTyBEWapaEwINTueUUvMJNruJVIEtDevX49oLkXbjL6
lwtcloB5YbOT7n96IX/LQHfV7RIIdIu3WpB7ods+LMV6QgyihQYvXZbsgxXn
H1dUT14Ep98i/2a+9AGJ0lWrIIYLzujK+/FU9AGVyn0enA47DHZr7ei29MHp
y2flqqiZ4Va/61b1Yh/83fSxYcmmhNOjpctJIv3wL6xuI152u3JgUWlU42s/
eEeqf8w4JYiUqO9VfysYgOOPxq3+0V5De8+dYalmADK9DA+vSQEqpMVVnO4a
AHE5Fvq8/+QRP8On79EbA2C9UvRnSO862mWdz3OQ/ANuh4nsIq8UUP5pjxTe
b38gNnFLtXNHGfHIv8AHlw5CC7W3qbONJpKZYdR0aRqEOsa/zPlfNJFOZCyX
6cAgCJcyMZDXNVHI4Ksi8e1BiDw21OD7TAuten6cGbo8BDLml+7cSdRGtXnf
1SS+D4Emz9y7U0W6aNjwKjvvzyHI9x+dOb+li8j/Kiep+4eAusVmdkBGD4nc
qfUbIQ2B1j5TzUypHkr425r7XGYY1iNZ2z6W6CP7U5Mnxr4Ng9H666dhrw0R
oen+6K+GYWiiOaFq2WWIkh/PfSnuHYaH/LJ30unuoi60pBi+NQwnbt9rfu5/
F8mZkD2kpUdggpgR+UDXCBke9r0poDwCx7iy3vEHGyGXz/sMdAYjsHXtqkRV
iRFKIx3+PO4+Auc879V8ZTdGDHH0gxHFI1B9V0rz3i9jJHw1OsOzfgQ++vOy
qG0aI8WJE25WPSNw+tDf29w8JshbjIP+MnEEvjN2g+tDE6S6cHuR8fAolH3w
edYXbYL64IXO0WOj8MHqZq9zkQlam2bkW+McBfeh+owQogl6KqsTNCMwCpHr
qpJUzKaINjJ2YVB4FKZtzr94+p8pejXWrf1bfBRcUr0ql1RMkaAk2/cG2VFQ
HlP/pWduigpCDHkrbozCtXuWqNDNFMkPvgrMVx2FrSXftGOhpqj1vz/z6dqj
oNCf+szotSkyxnNpvzUahcBzYPgh0xQ1z1A1UVuOAp1kXjJtsSm6pr553f3B
KDy5ZO9bUGWKcr+OfR93HgWenivEuJ+miI+lVUzDcxSoyj3YC9tNUbRXaWbZ
01HAf5KcoOsxRYeG0/jPBY9ifmt7+77fFD258fJVbOQoqHNaC2r8MUWTaU8Z
D8aPgnPxlbd9A6ZI79jDUMe3o8D3bX3wcp8pqn9keHDgI7ZfbciqS6cpku66
6aX0ZRRONunO4ZtNUYaM2Gp+wSjY1Cq0P6wxRRxvuR/wlmH6SPzLv1hiip4f
pBkL+4F9PyHzrv6zKdqxIRqSfo7C/r+7ydJJpuhh03i7dccoGJfENwdg+gyJ
tKl09I3CV/ex8ymYfndellXJjWL1aztYmXTPFKGtdJnPM6Mwe3z9jaOyKRI1
if3Kuozls323m+2iKfpQFXAOTxwFYugz29cMpojpjOP75b1RyKR+4rC5aoI2
FxWjGmnHYPZeVemlHBN0X1ucSpJ5DIbLKxK4QjF/FPMEfDg5BgklLJ2tliao
9OnWI2/hMVg9Ufetn8kE+TNmalxQGQOBvuVnz22M0bJbXEOixhg8EvJ++1Da
GJkPPAMKgzGo8V3QFaMyRjdSjf4bthmDF1rKLZZpRuioJO3xKPwYZBZ0T9h0
30VRho9a1yvHoEvXcHuU2RAdrDBWMq8fg7MTR1QWhg2QC79KZXMLtr8uOTYj
0wDp/uXL+TQ4BtJz0/QS1w0Qh+/vCIPtMQjs6sLFe+qj56OVFLUHx0EhQihQ
SEUf7d7M8hOlHofw892+juz6aJiO4EjNPg7vj94ToSrTQxouzlNuvOMwJ7Q+
ahahh6p6TEzHBcfBxKyN74e5HkpJlrxdJjkOjclvNV7R6SHz125sjXLj8MDf
TJdxUhfxxhWNdSmOg9oNKWvqCuy+ebGZNXZ7HGxXppyfJeqiN88l3Zf0xuHG
7jkHL3ddZBzoJr9jOg5WLwWUVvV1EWdAEQ3V/XF4NLxGnL2si/q8N7uYncaB
lrLUxZxXFyW4SSbzu49Dj3hijsFRXaTv7PZAxH8cXCKyk1tXdRCzQ9GlK0Hj
EHiN80rdsA7qtNncU44chy9O+25XWnVQjLlko248lr+St6JYlQ7SNHaLsXg3
Dkl/P7xLK9RBx/WLTJzSxoEzzt0nKUsHtWpuCvrkjENvRcMhiU86KFxNcjW4
eBzyLoniDFJ0kJqSW1ls5Th8UFVQFU/VQTTXiwI/1I9DemL73dp0HdR4ZVMj
p3UcztL3fKX7qoOCpSQ5y3rGQWBnQIu+XAcpiblNNgyPQ+4Fimv1v3TQkQtF
OV3T43CxjdJLckQH1Qhueo4tjcMq0++jJkQdhOOXVFgijsPNo2ZLlxl1kTyX
G93O/ji8iKaWaPtPF/1jLeo9enQCaibHRk5q66JKxs0PzMcnoMPs5iKfpy7y
pZV8yM82AeOSyn6DH3TRlaNuUiK8E+AWz/BCo00XbR8sOnDl7ARYRd6+6H1A
D3lsScTpSk+ARVB3uZyTHpJac71nARNwveOjY9gXPbSxUCjkpDwBOieUbYJW
9FDBzMa6t8YElG1uponI6iOXcYnKYIMJYDfMlySE6iPRIdeQ2HsTkMXqwBw8
rI+Wewu1P9hOQCfdcSXpywboYYvETKnHBLhzF+Yk/zNA5xtd8xqeToDHufZl
AwdD9PdHoU9X8AQI1UnFVQwaItsSCYalhAnwU/Xijm6/iwQLXAe2kycgZT+Z
6p+2EZrMLvx4NGMCks5nRMAfI2SZKnGZv2QC7vz63uy/a4z43rkeFqmaAHPu
0fIXcSZoJLGwRbZxAv6lan4Yv2SKTCIlLHX7JuBnlg3zuQAzZOAlERZMmgDH
a+qXErPMEaurq17sgUmQka5/ukNrgbqcCnk/UE0Co8acPNnZAmlbSxSWsk9C
o30pVa28JVLXkBhalJmEbunCxYx/VmjJiPf7Y/lJODnp17TkaI2i79PEbSpP
wm3lP8cVh61Rj9+o+p7+JPRHcBTY/LBBFl/Cy2ndJmGAP38pOt4WuVNPJZ3P
m4Trt55e++HkgNhZ2j1ySyZhsipqX2HJAZXxlelcqpoE9/OXC2qdHqIDMtHH
rrRNwtAL6E9zcUTP78v5qC5OgsnbozOHPB+h5Jo4owdCU8BTJPLhXcFjdKMt
QGpRdAoUDItkVVYfo8kBB6bHMlPAsqbhniHigoTXrjd5Kk+BEdGoOTzDBRXy
LV0OsZmCs+Ety3MJT1CjnxJH+ocpeHnaYdZP3w3Zh4ptCmdOQUPuQq5QmBui
i+PqyPk6BcK1W3kCyA1pf1kLKUZTkFRGf3HntDsaGnhHqhuagvs6+yWKs+4o
YDq069bUFPRzesxLsXkggTXXry0LU1ir6yAiquiB7KjV7Lp3pqAPrQ7IvvNA
a9JbvZMc03DH6LtF3k1PpNTD+ecG/zQMFApb8Dl4oiTXa8Pvz03DUky9zIco
T3QzL3DSRHoavsh7Bff1eaJEjcyZ0mvT4HfwFvWLHU+0sNj8l11pGva3xL0M
uL1QnDDzapfuNCjpfJPhMfNCfxulN8RNpoFJMsuRyc8LXbM13oqymoYEt80W
gSQvNJ2asqfuMg2kirD0xC4vJMMtRlP3YhpkX+KL3eS8UXiZLt2phGmwu6Hx
NE7PG43d9WR49m4a3NIpTo089EbP4xGrXPY0TJ2RPLGS6I2GJSY4kgqxeENy
Hb5leyPxTkpuctk0MEuwfcuo9kZ/jt85VdQ0jb33Sxz7095INOex4Inf05Dd
UmnlSPJGBPU4ocf909C22fSdktoHXQgd/O/i7DSUO13+9O2sDwo4e+BS2PI0
cNK+j26T9EHddaek5ojTsCdz7b+TCj7I/5DD1U8UM/DHy7zVwtgH/X4fCYfp
ZqA/RPSk6X0fdBbyb1gwz4D94V8cL519kO9QtyI6OQNU0jQdh719ULsPWYX7
1AxcfNyonIvzQac5udV9hGdA/98IIe65D/IskdfoF5uBcOHzL4qjfVCzvrW2
9OUZ4E/DOzIl+iD+zWC9OPkZOKNYI5j51ge5v8wyXFeegSmW2mrvFB/UJNZm
rKUxA7mC5orBaT6Ip33NLFd/BjoCH5e0ZvogFydWSzqzGXh1/Te/1hcfVE8r
a+NgMwPffE1C6XN80MksU7ufD2fANJeRSJnrg5xvPXM46zoDkkzXn8tiXDvz
0SnQZwbOR3rF5mG/Zw9qfDyBm4EF0pfEp9k+yPH0guv15zPg2n/NKCvLB/34
cdwzOXoGDrmqD0lg+7NaXPLZS8T0ms87xYXFZ/9P39/4/QyI/hQSt8DiR2+9
n31PnwEebvZjR975IOar7whsuTMghmcoOPLKB9kNVAe7FWP5ZE+LWr30QeWe
U887K2bg/f50BG+ED2Jko44Uq5uBgTsCTZeDfND9ogvRL5pnIOBd4lSevw8q
1dGMXeycgZeLt0aD3X0Q/dqTBLU/M8B0Vaq0zNEHWUYlvM4cn4F4cWG329Y+
6FjL8Hub1RkoXZcuea7hg74c1CdakWfACe/lKoP54Y5Ui5rlwVl4Qc+iKCTl
g2KSy4hmjLMQObPUtMbhgyS6xNVNOWbhndy8SCeND+qh+vzBmH8WFuxidil2
vBGnS6K6odgseKS+H7fs90blacdT9C/PwsfpsEMRDd7I7E/Qlu71WaiovZBE
XeSNUm66pWhpzcLaspTKdoQ3EmbTJqk+noXdhZC579LeqFnt5+1bXrMQUixr
4MnnjZwC5FOVn81CYNIH21Aqb5Q/J3LnZvQsbEyZTX/p8UKy5cc+yuXNghy3
nd4DBy80uIIjX/k+Cyp14wRqDS/kf2b7jmw1tl/NyRM04l7oR+QsWapjFpq/
WBpeIHoiVYs6DdHVWfjFXjm96Y7dF3FXP4mQZ+EU58jDV3qeKLKpYPvCwTno
W7sa9vaSJ/p9KeWTEOMcmAmZ0rQseiAjyqc7AmJzsBjwtN3U2AM9yJJJZ3k8
B5OFzVmjXO6IZjR394TXHKgLPn71ec0NfWE+q830bA5O6noyLDS4oRU/lj36
6DkIsc0v7XZ2Q56aa9pUeXPQ5d/3+2uFKwrZzNrfXpkDFwfjhf9uP0H0V1pt
nElzUDfEWWzE/wTFBqw0T/2bg1Pq+vMGmy7o/THJpHb6v9C7ei/h5xsX9I2/
Ujrtwl/oSqYZbp97jKZvtztr2f2FgfUjfBtBzuhm2sZ4+shfuGmrN3I2xwE1
zbOqcs/8BYdPAupzRg5IU+xyXszSX2C1k7CipnJAJuV+T/32/kLWKLe1jZU9
evKbkkvn5Dy4NcoEhPE8QCn77Hr7+vOQ+0AeJt7fRwcM5Bp0W+chKInJNu4l
9t6KFwTY98xDtt5EiMYVC5ROLyQbMDwPpn8jOZgnzNGdeubsrKV5qBqwuFUu
bo7eSC7EHDq+AEmatjb0n7D5hTnJ7KvGAvSlWbnnChkimhUG9nqDBdA6/ro0
088ADf8K6vhzbwHO4asnH3bqIwLe5eZR5wVInPp7/jZBD/1euyVsFrUAKrwK
9s472sipg7R5rGMB7MZrfhf5q6Mb2U65/P0L8JGxfbDaUg2xhE7aSY8tAPW4
OcvL26qoXL79j+XqAtjf0WxQllZBL7iU4jzJC/DZKidYWEoZWZLK7kQeXASL
3z+PV1xRQtRf06u/My6C65bN7rLRTTQYxu3TxrEIb9X8Ul+4KqCvti8lpvgX
wV/iacJQ7A2kz/s0nUF8EdJsvKZwc/LoY6R+hK32IhBqlt931V1BnvbNSn5G
i3BQoRgFWMli/eyNAy8tF6GsNmuzh/YyWtu7+KTSZRHsQxsdGHFSqL4/9UKX
9yLUrD1c2bgtiV4VcUzP4RbhmiGziMkZCSTvSHGX5eUi8MadvV9IFEPMt3yY
zictAuvlqGcfV0TRzOnVX/KpizDgcIpdZOE/FDk4eO1hwSIotVR5HVa+gCxK
tEnPyhbhda5O6Vq8MJKIbcxLqFmExprntRN759AftcLTNZ2LEHR+n6GJQRCZ
l1pSFPxZhA7T13OlP06j6XOM0ykTizDun3HK4fkp5JCA6mPmF+H596FeaVsB
tELhlI5bX4SFKooEoiE/cnPlCnHZWYQMweCZtHt8aHu8yc7y8BJkPSTHRBF5
0FMtr1vax5ZAyvq2RoEBNzpSdVb4xoklMCwAiYLxkyhUpIdG/OQSiLlKX4lK
4ET0bwnz/KeWAKVJWKu6c6DYY5eaGc8vwYyqdO6YPzvi8B77cvDSEkybA5d+
Hht6N/siYlV2CZJm1bPS6djQaYNrTmM3loA0ds+k5yUryqxbuNOhugRctz3/
G1dgRSISSf9Vay/Bm9iBl03crKgg5RZDntEStL1c/BPGz4pkGEkr7y2XIPi7
H8NZDVZU+TStI8p+CVQuHU74kMmKFJZ08wNclsDu8CUj8iU21Ghy+KWz9xI4
uVnlOq+woTu/8p6Y45bAgJ4j4c4IO+q8bK6r+XwJZq+fOh1zgBMZZtBLyscs
we5Iy+hl3ZNoiLWCRfT1EiSbzKUpDnAhy0AHIm/KEvDcLpwrjOFBs+scvcc/
L8FhN6WpH9f4kKNl47d/eUswbkdkMLnNj9ba3ROXvy/BM/7Pn8+4CSBPOOM1
Ur0Ezxuo2niKTyEcF04WdSzBXnA9h0mgIDoaJnoytx/T16ziojbTORROHt55
N7YEHrp0XZQlQiih50qF/+oSHHQy5ey6cxFxKf5960ReAlb2k35y1/5DKQWJ
/mYHl6HdWkjlZIoo+hK1CdcYl2FiW05HoEkcif1L5RPhWAbO+Sb6/5YvoWJH
7YM8/MsQSXvYPYFXElWr5v7YE12G9w+9TbxSpFHPkQeKFZrLsOmgMBAgKoeM
n7AJZhsuw5qnjND9r9fQ6Fgd5VvzZUgKbJLp5JZH85UCjb7Oy3DQ/0TfydLr
6IDXoOrVqGWwle2ZCxdSRMKLGpplbcvw0izoT99rdfTyYeYNgd5loBP9OWMa
eBvtzh+SDB1eBo5z6ou+LndQ298iDoPFZRBirHW5KayJZDciHntRrMDrpQGL
SE5tNLy6LstyagWWAtr92Cj10blF1KJutgIXCL2JbHOmqGzCYL2sawVGHs7r
bl6zRTGvt0M+dq+C+5cP+YWjrmjG8Z/Oo7o1oPQLcTuh6odM1PUy/H+uweW7
Zpffu/ihduGs3YiWNVA611+48doPlczof/rSvQZ+PJOdG3/9UIhFDnFuag30
9yrLtEL80Tk901fWlOugFCY3KFTyFNlfLRu+q7wOBXezg2M3A9AwJ+OlB2rr
wLE9q2dJ+Qxpk+8He2qsw0SMxSY32zMkW8wkmmCwDjfHUz+ZyTxDx0Ttn3XZ
rsMXd6/vFN7P0JdTHKc1QtZBRuaS5XXyM8R36JGnWfg6fKAP/RlFhUOxo7XN
jlHr8Oq+j2EpGw75vnV2C09ch4acsrkkSRy6zdZY/zNjHYxfGVYlPsKhJRqP
Bzd/rsNr5h+lCoM4VCb+oEO+ZR24NY+86Z7FoRAj48tyHetwFf++4/ImDgl8
Bmqp/nWwLmmV9qLDI/1bVJln59bB7WvcWOcVPDr1eJvh9OI6wONHBiQlPFpJ
XPDkW10HkWOt3MtaePR8tl2Fg7wOt046vtaxxaPK4FezNNQbcDuMVbz0BR6F
5YZpHqXbANtlpzXxV3hk2OtXcphxA5LoNp7bpuDRmqBlyC77BvgcmVU4UohH
6I7uColrA9S66awfluNRuLuS4SbfBvTkdRpH1eKRYL3wuaVzG8Bv0NdxrAuP
1he5ov5e2ACDV7MaVn/wqIrlOGladAMog4293MfxyMhmvWFEZgOo88Mz25fx
KPJIuW2HCrYe36VOk6MEZHwhp61FfQMedyYxZdIS0Dnd99JNmhtwoKoptpKR
gH6kEo7WGG6Ad7O+peJJAnrxy/0RMtmALl7unGJeAjJZt+stM98AL14/udVT
BES8cTu90G4DGl1/nf1xnoBq7OF43sMNyPZkwxv+R0BRMWIe2c4bEPLgm0CJ
OAGZlp4ayXTdAM/cHsoxSQISHmdRTvPcgF6Jd/91yhDQFjVVborvBpDetZtE
XiGgWrFt1uSADdjoNzt+4hoBRd9d8E8ibIBZJNVRC3kCMns2PJ0QsgELyee6
PW8Q0PnM9jux4Vg9iHb3bW4SEKn9R3FU1AbwWrdliSkRUB2pkCcidgOG2Ppe
DCsTUAxfelBo4gZo2JaVONwioHsqr5YC32D/H4IT7FcloAvOYfq49xtggU73
C6oTEDnBr9L/4wZ0NHxu171NQPXokaBPxgacbuOhs7pDQC9nLCI9vmzAxKGw
SC0NAjI/rkt88nUDXkaRdfk0CeiitJKZc+EGlH9yNW/DeNtMpv5hyQZMPaLM
M9MioIYgYZEH5RsQz/VdqRXj2ByueJuqDYijjOfn0SYgix76fYvaDbAXfnT9
DsYi+wfumzVugPZ972wzjB1zGvVZmzdgwEMjSQvjL2ZRyq1tG1BT/LhVCON5
ekOZoM4NQH63n8xh6wsjXqFrvRvAeexmThTGDx7NcBAHsHyt4Ckvxhm8uTQ5
wxsQGwTTcVi8M23uOzbjG1BQcWxiHctPMODaAvf0BnwgMLpdxthGlHKoe24D
WK1uvbmP6fFxtKUlYnED2E3yDX0wvSai4ioVVzfg61h9pgemp8B109y9DSzf
lXMvjNWw/FZPvy8ibcCvkD6qs5j+7z8sRDnubgB+9QfrgAoB8RzydRk6vAnS
oV6LREXMT/kKVnFHN0GUmF9kjtX7jeUx3dvHNuGZSj9DPuYHzprXkhVMm6A8
L15ACwR094mloBvrJphrsq2clCOgxFPCbBc5N+HqiJ8qJ+Y3VsJ30hv+Tcg3
8deflCIgPYlnc7pnNqF53vHoVwmsHpMqA7RC2H6pkV32mJ+ZFPvKfEU3wXGu
vTr7IgHRUW75m8AmeJf5jtph50O9uPIRs8ImzDT+eJDNR0DP7weZNyttAg1r
J+0YNwFRNbDcuHpnE6Qk8t6xsBPQkRAJCi7TTZjV8KpsPkZAu9QuYX+8N2Gc
V8D/4BoeXSm97PvSfxNKqIdic5bwyNv+oKMabhNUfl88qD+PR6SmqDtloZtg
r8D35+UkHm2E5TImJW7CJaPhuF89eHTpqschnTeb8JzX/KBiJx65LFxbp3m/
CT/Mza0/tWH3nXprl3f6JtA1UkazNuLRAt1iglHxJvTF0saUfsMj7dDhPMvS
TcC3kNUPFeBRyZH2X/aVm3A7U+SPcA4e4Xfy/3nXY/H5JN3j+YhHnHOetkk9
m+BJxie8iMQjldoj0oPETWjveyuKu4dHOUDUnNzeBPJ6891nd/GIuWzGfmF/
E5afaJd56+DRSF7Tu11KIiRSVJ41UcYj9+QoSm42Iiw1fMroF8GjQU4c35mT
RNAUYUz4fA6PbsQ/kb3ISwTF5OBKNwE8oovQd5I7SwQOthKGS6xYvlQqIYrn
iWDpt2pmw4BHffjLKbf/IwL5Nw17Dw0effTm6jGVJkJOB0ejywE8oiHSrdhc
IYLDeGfFux0ccn78j9oJiPDrQOZJ6i0c6llYOeWuQISVBx2jeWs4dMVuXM5f
mQi7RoG0r5Zw6P1Ep0GQGhHoGffeVv7FIcp7dY8jNYig/NM5VmAGh37rZXx6
Z0AEscaL2Z9GcUim4xVKMyaC2gup1tohHHqnHtafc48I/lcotAX+4NCRRt/1
YisiMDKkXa3sw6EHCk50yJYIrJ7s4kk9ONRaee9sgwOW36Tx3aYuHJKQ1bre
9ogIIWm3BrQ7ceh10Q3j3idE0H0iUSjxG4cOiEm4jXgQQfyx3fSjDhy6/+XM
ixkfIhg0qDsfwbj5LFvm8lNs/y51rbV2HBJPparZwhPh1UpzyGXsewLP9uC/
YCL4UnCyDmC8+2qeeDScCPZfecid2PqWLEMMDFEYX7oldhaLpzGqVZg9lgj3
H56p7OzGIRHaqpt8iUTwpg9P7u/F3v/gPLNzb4hg/XOyS2YAh7YPpXqKvicC
RS6P2Sr2vpv7x8bIfCRCaNyy7GFMrzpy4Bf5DCK85UXXnCZwSNjNo17lC1bv
tyW4C5i+USt2o5pfiSDv5hwqMI9DJjNqzBYlRFCXSqWJX8f0mWf6drqcCB5G
M8N1WD1pl/vvziIibP1nfZx7F+sniLbJjxqIEDEUEXidAvMzJUHYv4cId13i
f1lyYO85tVrL9QEiCDhcD2rhwaMmOiZnimEiJDTGvbt3Go+8WN4XhU9h+mr9
N0f+D/Pb6XL5pA0iUHrcH25WwaOv5/ATZiQi2Jw7w0KvgUchF1SDBHaJ0EGh
8vamHh5JS/T9yjy8BdteVqnRFngUr7ChX8K0BSd4W6KzvPBIx/KCY7foFvjF
vTMYSccj4fvrx19JbMFB7SP5T7Lx6JB9ab6JzBbMpSt//ZuPR/mPVUgTsAXs
QV+WnCuwfsbteFK6whaEMNH8F/ADjyy8euQclLegUODQn4cNeMTwzBq/dmcL
knJl3Yfb8WiWcF6wWHsLZsPLbay6sf4jZK3RS38LYlpMquv68ehRVAD9QbMt
eLcSUiGA9SOtyW9eHXfcAp7D+Ba5VTxKS7W62um8BUPEvwI5G3jkny48Eu+6
BTUqpts7W3h0MbfkNI/vFux9L2OQ2MejIwVPG8aebsH6FuH1qYMENFisZP8J
vwUXu6ZoiIcJKLyyK/dC2BY4qWUkK1ATkPWPJO2VyC04TD5bW4ndn1frLTcL
YrbAi92vjYsee/9aVmSvvN6Co5WHkp4xYf1Ox7eh/bdb8LvBwjiEmYBed/sH
/PiwBd7SG4dcWAlIdYi2/lbmFtTTXqBa4iAgb2Fn3+0vmN7l2/WeWH+U5dEp
nvV1CzaOJeFnuLD4aqXmjAu34KHp2ilZHgKiZXqdTFuyBaM9S9HOWP8kd29P
r6JsC9Te+X97jr0HTl/MaZ3QFmTOJHkH8RPQO3LND56aLdA9G8hrIUBAbUpn
vdrqt+DV9s8bnNh7ciD2+X8BTVsgbf5sMg9j0bHFKdHWLdB82HXk3Gns/RTR
ejPWsQXM6ZIffTGO8SnUjunG9LQr+pGL8Y9GNmqF/i04lq9jXo3xOosPWh/c
gms4Br88jE9bDbt9HN2C+P559gCMdb9ev6A3uQVMJVOXLmJM2Ps4TjGL+YN7
v6UE279IlepV8fwW+NBIzghgPJ3goGG7vAX3/Z8/dcDiZ51qpWBf3wIPr/34
GCw/ZXHx8kbiFmTvRF1MxPL3fBrn4rW9BSd/aCv4YvpkNJPOCe9vAT30/L2G
6dfPYTIycJAEpfT8tv/Xl8YWxYVRkIA4Vk2Ox/SXLRRQv0pNgtUQoTldTuz9
vzNX8paBBNsm7MM7bATUnKT+6A4zCShHoyYmsXruzeae+cdGgusaZYqDLFj/
iHePMeclQX2cIB/xBAFFtverMJ4iAaOjbSI7xohb7l+1IAlobY0cb2F+WbF/
X+QiTIJv+H/vQrB+ma/k8MNTIiRgqtG/2MNAQFoUtgJdYiTgPmPOLo4xTrup
jyBJgr7Mk+ZvjhNQfvLFF5KXSWB4PfEIC8YTC1GK01dJIDvERvkG8yez7MZO
vDwJXuLzrcUwvhlskK98kwTHv4zzd9MRkFtXqR1JmQRnblx98wLjNH4e3kw1
EuREX6F9gHGP07PuuxokwHOtullgfLR8MoxGhwScz836PTGWoVa5UaZPAj/t
F1K5GNvpZ5EcjEhQN3g08gi2X2IqfS6XGQmMJhZHPDH+ufLYpsWCBHL3r1+g
xeLdlus+6W9DAmFf4yeVGAuHyfwWeUACt5nSohdYvkZ9SSEjD0mg99p8/Smm
T9iZf9einEnw1GDTIwrTr9zFclPelQRDITnrCNN3AdVlrXqQgGvi02k6rB5c
dEKWKT6YHo5s2l5YvW4bhbPrPCWBhpiB7xGsP/JPX249jCcBu8H31BzsPOZs
aAcWBpHg50nBJg/MDyPXi6/YPCdBhvqgjwXWXzG84FhjiSTB8729useYvx4L
jZp5xJFAdbr9Kw3m58brjtc8X5EglHb1UrMgVk+jbW6vtySw6e1ZKBcioNbn
zEPen0hwVNnlwAVRrN9N/VDuk0kCfkNb48+XCMivTOSNbzYJ7pW/XzCQxuaF
BRVj/yISfMwxy5fH+k3CkR7Zp99J0KsrMOOjQEB/uKw4AypIEOKfoT2NzR/P
b/v1P6sjQVW4d6sK1m/P5uQZBHaT4H12hc8HGwKSb7gmHdRPAtPXruvJ9gSU
MPKLNXiIBA0es7jQRwSkxDDdHTJFAqgMnOP2IqDUx5y64ZsksGLi7VcLw+oV
mn4pgkyCxIQbTKkvCEg7ReJE5B4JLATOW0+9xO6Tzju/X1CQYVdlQPv8GwIy
nP+TF0VNBr2p6WWR9wSUe/hBdDQdGb5cVk3j/oidFwm85ksWMsiZFRsnZxFQ
sTqDaCwHGUoP+ShS52L9r83b43HcZPBqZBe5lI/dx37Cy3H8ZEilTGfhLsLq
H/etNf4MGQpKr+3WfyOgEzk3cxKEyOAr2z0pWkpA9vUdEYkXyVDXUNNpVI7d
V8Nmjq/EyPBk9b+mm5UExLE1r/5akgxnc67+XEIE5Hzc60LSZTLgNmh/G1Zj
9TxLSftGjgxnymqmcD8IiFf+5fyb62TIJeEpHGsIyN2Q79dbRTJUpzqLs9Vi
9XXO/vzuFpZ//hfHZxifCZV9nnybDAe4jUuyMPb90PDgvRYZnPrenYjHuOu7
7q0PemSY/vM6QB7jC7/HzqXcJYPCrRj1z9j6+L9OVKmmZNhvLegYwfYfOLQ7
k2pBBjENodJBLD7xk6ENH23IIPvkCOWHKgIKvcSa/ukBGW5IGxRdwPIZVUsN
SnPE9B+41Pi0Ajuv1qL30x+TgWcs+9rrMmwe961QzHAjg6VsH7vvd+y+jVU9
k+lFhl/f6vTPYHpey+498tmPDN8fhJHiCgkors568vMzMlz+D/Zb8rDzNrRa
kxVIhu7STduWHOx+Ifqnfgklw1WDWslYrJ5J9LT47AgylEnV2ApkYO8fCN7I
jSPDsm7BeCzmB+bRkM8Or8jwKV6vpRrzy1DAPNO5t2QYSF3Ur0vE6vHj68T7
j2T4Lbrv6xKF7a94JTCmgAyuYf6bVv6Yf6bfLt75Rgat6kyuOMyv54IP6B8r
I0NKrZ9IhisBlTbWCRJ+kOHnrN0JV/v/66HZ6NZBhtGsl/MpugT0eSFfVLyb
DFmnWB5PYPPlkwiWV0t9ZEhPG52gwOZ3yraBB7ajZAgsz1zfukpA57Vtjt1d
xvx2s7bU+fT/6+995yrdNrha7A64Y/OUPHmwmMSwDZzjjmb8C3hE/Rp4i5i3
QeIx90r9FB69+XNk5SLXNtDNWV87jPU31WYvonnPb0OMZOh7d4RHtDYfuw7d
2oan1V6Xa7H5ppviqBxS34a9hPcHFkLw6F3ag08+mtjv4+PFTuHxSGxWxH3D
YBt87npRlHjgkb7Dd7bp+9vwMLrZIBjr7z48bjX6SdiGOJaTu4IyeBQzZLTQ
HbINXpY2HKPieIS7NeM3Hr4NiX6CytkX8ciS/8CHndhtmD73qRN/Co8EOsRm
Ln7aBuX96Wx+bL5JFY17ElO3Dddo/fS9FrD++g0/RfLPbUBXvOzkZnGIQJUT
n9WyDd817Mh0kzhkPVr/vbZ7G+5fiE/owuaN01Gkf8Spbbg80lW99QuHmHcJ
0Yf/bsNFc9NG3kZsHrFjPMWwtA3MHfK3dWtxaBKElYSI21BT/7V5tRyHPi0b
hxtT7gBruuB3sVwcijee5baj2YHff9clSFk4FNTgmutKvwO8eiZ+XRnY/JEc
8TuCdQc8RmpdWlNwSP8Yp/Vrzh0I4jvHu5CMQ0oeaZtpPDsg0rQQz/sWhwQ1
EHuV4A4YvDKfaUjAIdYytc/NwjvwZ8QFXY3D5q2zfVf6RXbgcMcXi4YYHCLG
WLdMie/Ar/HCCdsoHJreXzFbk9qBs93/jl6IxOY5e7+VfVls/Q56dv5wHKrv
ocYdgx3QkM6uUnmOQ8U34k+wK+yArHfLwdQQHErPEfh0WnkHlDa7B/4LxqFE
zlwpMbUdwMs8V1sOxKGQoCuNcho7cHWpSGeMgEOeaw13VXV24JvxyhoFxnZm
uvP6BjtgxC8qZIrHIcOmUV8r4x2IZDxPnMbhkIqUI73zvR14zNZ8NxVjmRRy
sq/VDmja0enGYHyOPkgs1HYHplZ6JgswZvdmqolz2AExOkFaKmw9qul3uimP
diDjO01TJMYkrfPTOU924O7yBx4VbP/Zim8eZR47MOwsf1oCi7dP6CZ1ow/2
vchj6m4QNq/Ftb/ueroD6GX+YCWWX8lB0wtj+B24rn+GyyoUhzId5yoWg3eg
bdHso1IYDq0JMFnNhGH1PZwxaxaBQ1f7ZKnGXuyAZ8Lr84UvcCgwwip74OUO
VGdIOSph9Wi9Ea7dlbAD2dK+2SxYvdhIhVstSTsgrnFpkT8Rm/eyh940JO/A
CRYWEYckbH22/2ZK03cgSjakoBDzx5UWg/DCrB24+JqDVJiG+RkXIJaTuwOm
uCm5tc+YHxY7fD5824EzP/+2nSrEIdkfrgwhDVh+hpWHyjH/4j3eFj37tQNx
1FfG+VuxefdCvZFP2w4I6rGfScbmZbMEtk9OvVg+ulw9I8M4hHtYellvZgcK
bFfnvYg41MR6wErg6C54fqK92yyERyeaz1FxHduFm/e8HJRF8cjkmVY2y/Fd
MFNdi8yVwqOl+ZQtKrZd2AtdpFBWwCOmasXwZcFd0LHnSo4xxiNjdyexOeFd
uDDef9oduw8+nk/oGRfZhaWxkiIlWzySip/l65HaBdprnZs5Lnhk5BBWVK60
C2W3yu1jsPsmla/QqFh1F4RsOAvSI/BooXvwX+6dXdDkc7PxisEjyTCKT5na
GP/ifHY0AZu/5EVUU/V3gebMIwrtJDxq2NRffmO0Cwcbx1YNk7H5L+tpbLzZ
LpSb9itypeJRCkvHcOj9XTCJVhDoy8Sj+SYyHm+/C+KBnzPbv+CRRICAkJ/T
LnydiosPzMUjP0m1VneXXYh2D58l5uFR/d8nT5zdd4FVhOhzuhCPjr9/w27v
vQsjolXx9MV4ZKhXV2HlvwvyE2YsRd+w/WiWLE1xuzBw0nWL7Tu2H2KlMgja
Bb4WWxXpUmye3GOWon2+C8k4bTOaMmx+vXLCujpiF3A+bbNfMObyYoxxj96F
eDZdvdPleNRbfLzqfNwuTAd9/OqMccwG3dJoIla/4dztaIxvi9Nyxb/Zhbp3
9y+FYEzlTKOq9n4X5m/VGOlgXJNN5Xng4y78vlvrvI6t7z9PmVaUvguB3vfd
7DC+LETRZZ+1CwzvPtvlY/Ft3D98iC93FzbF36l2YPHnfjwo2p2/C1Mqiifr
SvDIfvyf6fPiXXgknj0QgeV7hm8/DEp34X7V35DzmB6jprvfNyowf0ywC77D
9EpK2p7JrN4FOQ21/ClsntfvJ7Hcq9uFSbaMi4cwfRnZthSYf+6C69jNxPUc
PAqOWU/2b8f8tqCg4fgZj56ELhjojOyC+vjJZ7c+4JGax3DD7u4uhCtMnLJ7
gUeURYObeQf2YKzSKlIS80/12sAp2yN7YHpRkZMiDI+knXqfdhzbA60DIvGf
g/BoLas7O+j4HnSqvMsKIOBR9lznnysn9iA802DSDIdHp2zapdM494BD/MRJ
H388Gk5ptTHm2YNvCQuh5b549Gq0+SWDwB7QagiI8vngkS7Pr+q6M3sQmOBD
l+aF+cPk57K30B5cdkb8dzzxqOlVA7foxT2Av4UP2bH3M7C3Tm1KdA/UTp9a
OuKOvecstV6vJfaAKa390wk3PNrR/pGuIbMH3e7+L2+64lFxVFX3kat7EBq2
XJzwBI8et1YeLoU9yG+bOU6H8QXaCrFHCnsg+ED43UfsfM3cKrt3Whnbf9/V
wgzjlODvEf2qWLx+wXdlMTat+1YWeWcPWt4KBMlgzH64eE5BG4vnbCzrXYw7
5QvZyHp7cHz21+skjCP98xVz7u7BaTVjl38Y3yr/+sTKdA9iTZJ78dj+R7Zz
PrBb7EGd6PDEOSxeJJ3d1mK9B1aE+fgljL3dsvZwdnvAU5K40oXlJ1mQeV7m
4R6YE4pW/mD5r6yk3118tAfRHxgTDmN6ZYmkBac8wfRv9J1Qw/QMl24dTvfY
g8ETvO1d3njkJE+UzPbZA+F7ufwErB6at3gi8p/uAR/bSu9drF7i2kqT3/B7
0DyUsqYXgEfMxk5XKoL3wO5yxGNPrL5Eq/iYH2F7kBEer1uN1b/UbVq+5eUe
lNayKNWHYv2TP33i74Q9SDXRu4ULx85LsNRyb9Ie2DsPkM0wv11/FfR2PHUP
fPLzq6Tj8KixXHB7q2APpn/c2VXG/Pm57o7W3rc9+DjamHbvIxZ/q3vGofI9
YK4VavFPxyON0Xp9uto9eHRmILArG496DtsWCHTtwZ7bz5Qh7PyV0L6gOde3
B0Z//j68VIlHr1m+WVwc3AOpqPIj0dVY/c4eZZCZ3IPiWal6+UY8mlRNf3h7
Yw+UkycYvnVh95VOW402aQ/u9JXPpvTiUYbJFqfh7h74VWX/8R7AIwcn5Z+W
R/bh7lo64/IIHql7POKzo9oH6mkO3bBxPBIJSPBwpN2HlB7XryewfnIteuaM
J/M+/M0kFs3O4VHX6+N+fuz7cORwsZkk1n8Wp0p34bj2YTQ5gM9pCY8Sv9w7
H8K3D5161asxK3jkVRSMizi9Dxza/iHJWP9qVJnbH3MO+768/yNwA4+uNvSK
Jl7YB/k2JnMFIh7xtP8Lfiu6D2O9eff6tvDoQP/ZkRSJfZhw7qq+Scaj8TEN
qQyZfWBonHEL2caj2r8eEdlX92Ey4+jb1B3sfl1PnsyX34cPMumC8bvYfbLb
cKXk5j7I1fxkMt/DIzuKlZgKlX2AUE+Lg/t4pErP/veH+j4se1QzeWN8gU3+
eqPmPrz0zxdswpiezy6xRXcfXMLvvl3FeOVc1PJvw32w9WhyX8H4t1iJUp/J
Pry15C6ox7hQdvTtkPk+bD54qO2KcZwC1ea49T7YP/tGsYPt764uqj5rh31v
OBZyb+//74dh6uLDfQhl+6aehsUraxawvea8D22zDdndWD5cthlaJNd9eNVx
ZmYFy9eZ9Ensu+c+nODIZD/6//xDUxm9ffdh1oTqJTWmD/vJD6uyAftw3Z3K
lYTp5/DlXccOfh8+H2op68T0rZR7k1cevA/ncN72SZvYe972KtovDNPLTDpA
A6tH6Wqs1r+YfYhQeTrmu4rlj48Rq4rfhxvu9y4Sl7H+nTmK8dnrfVB+Shw1
xupNLR3WcSgFq89hioCFv1g+vs+0KPP2oVnva6/0BB59oXsq1lC4D4eZ8BQS
Y1g9k30ZQ0r2Icz8FOV5zH/p1R4d1FX7EFSnEkD9BzuflE5adG1Y/M/UjUN+
41FstJEW8yJWP4XfZRFVeDQrYCjWvbIP2z0rPjLY+bhaqMcYv4Gxvv3jWew9
m+jR7GDb/V9FVh5O1ddG73guhZCIkBAVSUSRnDfXPGRo0kDEFZEplZnrNqCU
SkiKJCShqISfrUiZiZREpIyFREni29+f67nnnL3f9a619rufi/UNI40H8Pmk
IW1iu2LxArl8Bb9VPD5fWrI0beXXLpDkxQ+Rard4aHG5gK06Z4H8cOOjgAHO
i5LELMMe9wWy/ce+0eM4T1z9YMsFrwWya5GTTxbOmwqlgJVDxxdwnFu7C+J8
8r3c9T0taoEcbZpIHfbDfnbLjV2SvkA2LFbsp7jyULqIafXYhwVydZeixGZz
7LdvfU9TexZIKfmqs9WmPPSnJuS++ecF8tUd/vy9JjxkF1pwJWt4gVwhlaVw
yZCHmIPizo4zC+TD5tz7BiQPPXpeuEtgboF0b1rZ+W8bDzmmmpuWLiyQBF88
VOjx0Mc1SOI8nQIbh7Na9XRx3vZMzg8sokBfeGXQ3CacR/Vo5j8BCuhlK4Sl
aWI/lVyYTBCigJlN7t5t+L528arSgIEoBYK9eVc8NmC+Tfc33pKkQN5tPfnT
eF7U11Z+dWIFBf6zudT3Txn3R2Gq0lKGAio9xYH+Sjgf5+OKZ+UoYHqnSc0S
3+9Sip7f2LOGApJuVmqR0jx0+qxC7u51FCj7UEuESuE833emZJcqBUzaSq65
LsfvL5i+tVOnwCKt6Xd/l+L1zVuErLdQIKLhwE+DRdhvMhoyO3Qp4J7vcSaT
xUNlE1dVrPQoYH3oevMkA+8/ca+pBVCgZrblwu6FKKT1uYdrYoqfP2NldeJn
FJJ9DPHG5ng/RXfFzk/g+0Z0xi0jSwrkJrW1532PQh/Xu5WxbShApZ8ixfB9
Myro+xRpT4HNYb1l/t1RyMvSmk7up8C/G9KmQx/wfW/lQxH9gxRISbjX4PE+
Cq19GaCm50SBiZyEing8j4smd+htPUwBCH+rov3//5uObrHQdaWAbqbe5UE8
v7cIzx3Z4k6BC5avhoProlBpv8PJzUcpoLQRyZ7C837mE3Ra24sCosbBnSk1
UehizKqrWt4UWFC9LzmA76+nDvJub/KlwLzvZI99Fb5/bPhaoOlPAdsLzLU/
n0chc5pJhUYABYp1eb+LK6PQprc5DRtPUuBEa6fZLYT5yFnUpR6I+Z9pX1lQ
gfkI8RreEEyB9YFHgwb/w/cXq6bfaqEU6Fb6sNsE449y6oRaOAWk1ncVN+H7
8sufl8XWR1JA6J1LYhjG+TU/5VWjsL58H/7ZiXHy9d0bVU5TwA+d6rEt//99
5Cm57izW28FCw1MYe5GSO9ZGU6A3JUS1GuM9oiEH18RSQDiiv0wHrwdfPx5V
vkAB5WeJYp0YryvRD1K6SIHm3GUxGXi/S8+nn1sdTwHBVSVSibieOQdaouIV
rBcXm9oiXO+AumumQgIFrMIKEv5iPlroNY/kEykwHXEj9Bjmq7RD+fmqZAps
kx9tFniJ+b4X0yyXQgHH9UGKbzHfcaGj3StTKXD80xLnl7gfJ62tvsneogCh
G/3sE+6Xk3zBrEw6BY4FPF2v2Ij5nhbml8mgwON83/+uNGO+X/tLSGdiPfCd
c1d5E4VY3tqbpHLw+uXKwl3vcD1MOuv3PQpcUm1GZVhPlqnNnW33KeD5yb+v
FOvtSp17RFwBBUqGv15u749C0so36ihPKSCX+6XTCetXo3fBafAl7u/oI61u
7I/dpxo0q19RYLuk4KodQjwUKHSduF1LgQK14VM1Ijz0n55G3v5GzKfB8J06
7DfT666/G9spIFN4se0U9q+DXW1ccT8FBG6fvHAE503k8DWny18pEJtwoNDC
AM+TkYc1vQcpUNrqNSdvhP2Z//e98igFXEW0l9zH+bbI+PV9xncKPK0uu3bA
iofWdyeE941h/6l8iJy35iH/xWqKNyYp0Kp2p1R4Nz4fM2Z/nZrCejoEv4L3
4vzVeVW76xcFBpTsk1r28dC/I04+QrMUuFi6TVDfkYfkFlQNRv9SoPpt8sBu
p///f/5H7PU/CsjOCK/bd5iHoquvlHKpVJg+4ftzlRueJw8cinOkU2Hz9/mw
QXwfbZpUcdrKpMLniOhTyR74/rvqJXOajwpJPIU7pV74vlpy+X3rIiqERQ5M
rPfG55m14/18ASp86HIvuuDDQ7fCftu4C1OB63Z/cjGehyvFqhWMRKnw1kxV
di2eh/vvx/9aJUaFLIl/W9fh+ZdgO9TOL6OCWDzz9iI8/675sDa1S4IKztWP
f9ZhbOH3y7tEkgpC6vUZnnge9uar2n5tBRVur9K9+Q3j+LRLYv4yVKhICei3
wveHIu2DgztW4u/dGz1xCeOjRf817VxFBf97GuWPMJZTX/nEXoEKpL/wi0KM
O/IibzqspsIaF5HoGIwvrP18+rAyFW56VAptw9ggi+11ZC0VSr1y9tTj9Wbk
7+70UqFCmaSt0yaM89OIrX7rqRAsz1YNxPt1lXaXP7mBCpMD9LJEXJ/U9Vr+
kI1UqI/5wozH9bcsU/kRoYn5eSeT5IL5OXvlwvvTWlTwezVQKojPR70lYyhm
MxX2vr3cGYv5nDxvnX1RhwpNxw3WdB3D8yrfw4tXt1LBbXVc9rwnPt/OiJ5M
3kaFYVFB+2ncLzFagMNNkgr/ljvqItzPuvC3hhnbqWAqJm19kIP1+ldbNZtN
BZ++z4kNWA/fpv7MFppQ4Th2v5ID1q/fgc+PzajQcSUuS3g/7u9YeW2pBRVC
9jtWNu7B89RgRHK1NRX4lkglPsd6DXbti6i1pQKbf85uxoKH1PsMjjTtpEI7
18KEhs/v1A9M7fd7qWCwnFV9BvvFbu8Rme59VGip/s03jc9fvvbXjM8HsB74
Z31UtHnoROP5ttFDVMhrFTg1poLnTfPvpRPOVLgSh5aHYP99rtmRMe2C3z/I
Wt0sx0M7KkX8Fo5QYU6gMbJRjIeUipKElvpSofO6r4PCLM7jDX+mJfypoNWx
2Gt0EudF3v5u6QAqGL5d+y14NArN35XJUwqkwpKflksnu6JQR/IdM91IKtgu
2h2pgvN2s2sZik6nQlrv5M1vW6OQ0t1znp4ZVPh4tqqrdFMUEh/YKbEjkwrx
F/ps09dHoakj37yX5lDht6LKWOHKKFToKSN7qwDryfqj8jAjCqXlDddGPqTC
dYk2e795Lrr4/fEJlyIqPBFpqhOe4SIvnx2Na55SQdlV9uS1US5aczwitKiC
Cm1eGlmf27hIothiTWIlFVZnmdF9mriImJZoD3xBBVHbNTu1a7noy8lCFf0a
rAf39/UnEBe1PQ19J/eaCo5uC1PfS7noxYwpj15HhWhGssjtJ1yUHtz34XUj
FWZiW1aX5HPRpbIHZ+83U2Fbdq2M9H0uCp8L0rjYivlrGOAvy+aiY9uMe3zb
qNB7dddIQiYXHQwXjd35Fj+fTKJ7t7nIAvVoab+jgtXx9ug/t7hIl3K/b3kn
7u/Sd7GnU7lo7fZTcX8/YH1WfBu0TOGi5VFsnZ6POH8mHsRbJXMRq2rJ18oe
6v/P710xiVz0i/4x/k4vFRSEnKjUa1z01TBH7+xnKszO0V4WX+Wi9jMBQ+5f
qBB7Jigt8woXVdVAgsUAzq9VmfEtl7noEUsQ1IZw3jm5Jm/B+LZp56jwCBXK
4fqTj/FcFB9zN+nnKBVKeK4j5RhH1PmxO75jPnKF1Dsx9l6sP14yTgV3Eccz
G/H7DpaLbtz4gdePth16ibFlXIdx+E8q3Oof3JOI19/alDHpNE0Fo58rmzPw
/tYt8bnF/k2F/piZHaMJXCRls9Vc6Q8VjgT5tvvg+vgvs37x/aVC9dWzDuq4
/pnWttujc1QYydUZUsX8DImmWzXNU6ExPtqfg/mrSdhy9yqNBvuTGEFHMN9R
yR67ZBfRIIz1W/xgHhf5dWpRqAI0qFD4VmNawEVOUrS8fkEabP6XGGT6iIv0
U1Po90RoMDr1+GtkCRfNptU/0pSkgetsfPPbl1yUyHQbElhBA0Pf0mJTrKeN
nhTZAWka8J5SuhsbuMhdWysmWY4GcDhyWqidixipzRV+8jSQ+Pji16t3XJRG
PTplrkgDR11JKf8uLupouHXonzINZHW0HR0+c5G/hs61jrU0uPPw6fpbX7lI
MLmtrkCFBjq2RTVlQ1xk6MKnfXgDDV6+1NwTN8ZFva8zPLdupEGiQqDV9h9c
FKK27baYJg3qElOWvPmJ+/vHT+CVNg3s8hf/isH+2XFIwCB9Cw2kLRRWPJzl
ouHqrFNBuvj7Y7kCj+e46PS67Q/s9GjwdSmr/hr2n1x812cVfRoc3JK6Zycl
CpVPn1jOBBp8eNdU8J0ahfYeEN7Rs50Gyd70d650PO9V5vKesmmQft4r6Qn2
80Ulo2fxRjRY8ZXo72fieeXCpzEPE7yfHc9XfCHw/PcjSJFtRgPaUDz/Exae
h/aK7Ze2oEFPaljePj48j5XnX5q2pEHh+HlGM8bJ8mYvm3bQYOntXFFx/iik
Gd0/m21DgwYx53dqGDd9D1Pn2tGg07zAThLjozuXu+3fRQOFvR2n3+L3iWeP
bmjuoUFA3YS3C8a3Za1aBexpgDxWilTh9fVODxID+2iQZ3zgyBTe3/thrh46
QIOtleNFP/H+A6yl/ZMdaNC0ZyHiNa5vyeMn2X6H8PNlxUwfXH+ulG23uTMN
iBOhRoOYH+PIUVFFFxos03tFbsT8ff56xvSfKw0of4lpS8xvmIVceIcbDTz6
TwVuxfwXi+8ejj5Kg9N9meM5v7nIJnRc9rAXDXzHFOxVp7lotC9m11Zv/H77
34C4SS6Sf1CBvvvR4Orfobqhb1xUIbpvuuY4DaQeJtL7h7loX+DPdeknaDAi
/3q8dAD7mb0m0S6IBlek2/rovVykeu9FvUoIDZjLtg4GfOSiV0IOVGYYDaZz
2WlV77lovvOy19NIGkxsvKI028JFKaRqRnwUDfQeP5ruw3rXulvzzuM0DYJq
Zk9mv8b57PvXQDqaBhukeZfqcb5+IDiS3EtYP327rldg//HbJbhEXcbvn/b3
tsF5ueVm1QPeVRpcl3UKfon9mqgpb3A2Cfdvhqu5D/vf1unT0fNpWI/G35Yp
h3NR5H2hxxdu0+Bay7G4N6e4KP/XtoW4OzRofpWj7ezHRQJxqVfjs7G/7/xY
scaVi14/21d+rYAGDMmiBTNTLvrNiCGSHmK+spfsngcuUrIpsUkuosGiSi/t
eB2s/wHxrylPadBBdbphuY6LyKXtgumIBi2ZyZ+VF3HRE68dh3KbaTDclCbj
XRWJvj4Nu3e/lQY2Dy4eIUojkRj9wc+8NhpsJ//JRBVGIv/ri6ML3uF+tvCa
FW5GovU1rwuLP9Fgod+XFD4RiTJXsmlonAahj2+tiV8Zia6+2Xy3bQkdchzP
zdO6w9FsX2vRIxE6+L515jv8Ohwd/uH54vJSOoT2qVUUFoUjDeH0T9YSdKBX
hX6kxoajN1Z8Ug2ydLDcyin31wpHIrXvL1avp4NxyOc3cefC0CUUFPjYgg6M
4dbgYJlQ9Ktp6bkEKzpMpDxwP0WEIseeB9eOW9PhxVSFkcd4CFL71/do4046
vDcda1R5HoKadM2/P9hPhxX5dYN1LiFI8InU4SwPOgiP7FV7kBGMzueVWSSd
o0OwqYrNdmoQOnt7xPtWDB3qjnxryf8ciKISJa/cPU+HJI2V0rVVgSgw8tT7
okt0KJS2kWScCURuuzQ5LUl0KD5o0nKVHohgLjecP4cOjUTWbuqPk2jKIuVh
yGs6TD4/cNX/SgAah9r2qDo6eAh8rNjrGYBGtGZ+xzTQ4cnC+ngNwwDUt3KP
fnILHaiT/XK108dR00+R+uL3dFDbfL4pyP44yrkR8+X7EB3S6+ze31nlj+7E
l7CmR+hgtSp1k9qcH7p1ZnDd3Dc6LPqTVy/8zg9d8zHyW/SDDsrySpRPcX4o
ik2dV/pDhw6NvHM3F3zRwdFACSd+BpzrgsLwIR/EYJ6sdljMgCe6oUftcn1Q
nuxxvwOCDJgQUSwc9fJBf22P1e8RYQA3b9dH7ylvlFLiHGElyYBnOd8ePhXw
Ru/PmA/qrmVAop5R8rSzF4pMM0nYosKA9qq9D75u8EJrnhlu117PgJtrLU5c
mPdEp77p39i4kQHO3Ocy8zc9kfhOTes1OgxI8Vso9vt6FO2Uk366zIwBo4lX
WUqJHmhWR9J1qQUDZFwChYV8PFDGTnERESsGkCmKjmdMPdDkWWFPAVsGqBgX
Na76547ivzNW0vcx4J8re4PoMXe0hUVroBxgwJ5nKCbA3B31yi0Ezh9kQOw7
zU1ua9zRhl1/3vxxYsAF57yw31+PoKbS72cn3Bkw+5yR1nfkCDrZPqI5dpQB
XvLdmn1mR5Ds2GDvqBcDZhRNU3mqR9CxVZ91B30Z8Id5frbwpxsSiO4Y6w5k
QKjPCCc/xg0V32670RXMAL/Ai0tf+rqhg2Utpp2hDIh4saQs3N4N3R+ry2iP
ZEB1yb0lXWvdkB3fa+s3UQxI8op7FbbUDc2uejnXfJoBWy0eXar6x0Hmu9Ge
+mgGjNgeO0+2c5CKpvLrrFgG6CiLi8m/4CABkUs6URcYMK3W2r/mIQd9G/uV
63CRAetubVDZc5uDGhscpXXiGWAfl/nj3hUOys+tiRO7wgCpuyn6imc46GK0
2sL4VQa4eZ+TfBnIQT5uib711xiQW70j9sIxDrIxnO/LSmLAcceW5GAXDlKX
d9sZdR2//1jc6tJ+DhKhNFU73GAAPzpZUGfHQZPdWto6Nxmg8OvlgfWWHPSm
7Ga2WBoDzt8/rPnEmIOKrjMlJ9IZsDYi/Q3HgIMSTh2Lrc9ggKTRHrYeyUEB
u9/+zcpkwPMp/zidbRy0W3PbsagsBoj3rCh10OMgbZG7PQ45DLBCcUuyMBYf
F7DRycV87ttLZ+hz0O+GgOdieQzYey4uxxU46H3uR42JB7i/evuv+7M5qCTa
MLO+gAFv/svgSJlw0HW3vGXZDxnAUdUXO2jBQcGGYueiihiQIySft9mGg/bL
h844PGYAGnDd9GA3B22lfPHQecoAgitTXH6Ag6R7LLrEnjGg8d5hDbfDHDRX
VmQ5UcqA2/csntzz4KDu6ysq6stxP/lETM75cVDFKd6G7AoG/IJV3+aDOOjW
7tH0qErsh/LxPGEeBzmJlPF0qhkwtfJaGi2Jg7aPy0+L1TCggyba9xn3U74x
1m3iFQOKLU4cdHjAQf3R+82y6xlQwDNfuaqGg6rdXpRGNTLA6DR31qiNgzIN
16k6NjNgo+umgp5PHORGmRVa1saAd35F64N/cZBxj3PkRDsD5kQ0p0Ipbki5
vPZHfQcDwq/kit7hd0N8KRtdst8z4HdP8LlvIm5o6NT19qgP2K8JX2z2Sbqh
2t1UY8ePuH4kfWx4pRvK1fR4qtPDAIan/YfU1W4oVqR1zbJezP/thsTj69yQ
5/iWlIk+Bsj65qcfU3NDlo3pixv6GdDZq/ErdqMbUr3PF5b9FefLwsVr9Zpu
SDDGdyxqkAGm0Z2hG7Tc0Jjb+0OOwwzQ479z7wnGTYbQqjOK/aPZJeWMcYF8
jsGy7wx4mDbdqLbJDcVThIsnxhgg0LO8YKWGG/LtObW6YYIBwl92JjXj9W3L
PyVmT2L+F31q68F+1Egx4eNNMSDKdJGZpYIbEg0sCHL8hfW3znFMYoUb+rlb
YlRnBu+nsqJsO+ajXTPi4LLZ/+fN4txaJva/yGDjxF/sz6NLCwtmOOja+A6y
4R8DaOseV/8c5qCTjU8KsxdwP61beq51ctBIfJH2fSoTLG7Yus2/5CDHXYXl
+XQmfHRO8wwpxP6ReGDwiMmEoWbxfoHruF9d914/ZjGhUWTZ80cRHFR6K2vH
M34mDO/8/cfLlYPUDt9pL1/MhM059mLrsL7Fh1N7q5YwoTWlYIHO4qDYvOtu
r0SYsCHBlVD84ormfRK/1S1lQvDxCMEG5IoGfl2aaZVggsM/xfY9x13RUwZP
uHclE6LiP3xaU++CVF9HJPavYsIrg2zB8ZsuKP18qPSgAhPKrHkuPj4uKFr0
5JoxZSaIzz7puynkguzlPGBuAxMePByxK9p2GM1stfZdDkz4saT14s3jTshr
weLXCgMmeEZ+9RbUcUK9L0xDVxoyYZWDh1Hg3CH02swgWsmUCcV77YkHSw6h
63u10jfZMEFaelD/7wYHpHt8RYuNExM0IhxyH+7ah0JyBzfERDLB+FzCf/Yi
tmiNhnXw0SjMz+rYHavibVDHsyfVFqeZENA7nGEqZIPUa8/sE4pmgusjIN1E
dqAvgwq8q5eYQKVNN4yNmiHL1U4dN28xoVRCuGqL73b0J++VXEQ6E1TPUXOX
uwLK2rTB0ymDCWqhNmr8xfqIYji/IJ/FBCv9yCZKsi4qPpy6NucB5ndGxFvo
sgaSSX8f+qicCdvLLsvUsxehOmV4dbWCCc47CPljJ35XBBZki5yoZELOYql4
Af52/TcVJ7M2VzMhpvp8koSIEHm2W6ylvJ4JOrr6iuGuiqQmJ1TqViMTTqan
NG33UiZ7v/W7RjQz4dyrI31FTutI3blHf7a3MaH5v1f/Wljq5JiUrcKrD0y4
lt0Z0GSgRd7IKDmW85EJCUMJxzhB2qTpOrmSmB4mqM887V+etZnM0Bm3tPyM
+ZCvHM/v1iGtn+9JWv+FCfrzavkiQ7rknGlFn9AAE1i9v/rfD2wl99jHnWwd
ZsKlXvfNl55vI+m9U5WPRplgduK7Y9RNfbLwyMHFCd+ZUNHn+ef9MZJ0GK/a
fWKcCUw/9cNmkkAuOqWSvucHExQdl1a8OwHk0/krI5t/MiHMZKt3UgOQrmdn
N0lOM8Gy/LRNtMx2El2rre2awXjDV2LhwXZyucHCzaJZJjAuCG6y/7ad9B/b
5H9+jgmZdkXHFFYbkA0pR41d5pmQSgZKu9gbkEom6VJbKQQsBG7bLXnWgIz8
+XZMlEbAI/vwN1MFBmRn2uKqEToB47nztF3vDMgLMyc9U1gERKqZ54fLssmB
zDzSn5+A8gBjhrk+myRtPy81X0zAYOaLxIsH2GTyP4mhVYIE8IRK7CxPssnJ
e1blf4QI8LrZuTjqIpu03MOLbxUmoOrdlpUbM9nkXdoz13uiBCwWSvu87ymb
nM8f28IVI8BZpCTy7ys2aX9AUXCfOAEC289+XdbBJh+x9vepLyfAfrHzXE4f
m1xcfOkxnxQBz0ZWFBaPsElXp5cxvSsIyNsXO7rlB5usEPjrUCJDQO6biOta
02xy+TN1jfiVBCi1NGfm/mKTfhw3wn0VAcG2XuEX8O91IqkfSAUCGlLsen0m
2aRiRWu+xGoC5HzmmenjbDL8KIs3rkRAlIJxktl3NvlOfNveV2vw9wedE7xG
2aR6lb9K2joCrrzO/seH9xPrk7NwUpUA3efhbbLDbPLLip62HWoETIGBeP4Q
m9z2emmOkjoBZQ0RNU8wTgwwC53fSEAAvfLLFvz8hFyETYcmAeahF/024e+Z
NxYr5msRoJqac+weXu9O0MjMmc0EUGuedibh/cytlmt00CHg0kALH2WCTe55
s/u21lYC6OoKe/twPYXh508IbiOg225IQg/Xz6/y3OyrPgFo+xZL4Vk2efjd
L5n/gACfRV+nHObZZDlPdTLBgIA7jujYarohKa5+uMbLENcndcjDk8+Q9PmY
lGJoTIBkQMjBDiFD8nV0o7e0KQE/vHXThsQNSXktOnvKjICwT0FmGXKGZGjf
FokGCwLikqs5dFVD8m2c9+gdK1zfknvzi3UMSTXdTBRiTUDGrn7ZchNDMnqg
8+pOWwLsyp1al9obkp+vLHFX2UlAkovIqqVHDcmtpJEefTfWYyVDsjTMkEwY
DRbu2kPA4yJuNd9VQ3IsqfDLI3sC9Ova1RbuGZKmhgMlsfsJkEp0cbn5wpC8
PbEi7vBBAvZ7tRzr/2hI7jI7pyXqRMAxZ5rmEXEjMn+6nH/EmYDbNeHMu1pG
JCtjsvu5CwF/FIy7Y/cYkaWzDmf9jhCQ9q21vTXViJTL2/SuxZsAwQ3btDcr
G5OC+guoxZcA11r7F9IWxuRsc21Oiz/utwjpbeNtTLb/dAxuOUmAobTS6oxH
xuTzM2tdWgIJ2BsYt7GyzZjMl5iyaAkm4EDBzkOqU8bkua0xMi3hBDCDrZTG
NUzIgMadREsk1ldj5QsjWxPS6ZDseHMUAf6soZgRbxPS6sfQu+bTBDheOBra
fd6E1OUVVTafxf7c4nlLNseEVF4Wfq85moAam5g3oVUmpFi26ZXmWAIm1J6U
vO0yIak6S0OaLxBQcjjzQ+K4CTlW1+3SfJGA0XMODWXzJmTXwRzL5ngCgF53
zJDflHw95q/VfIUA4c5rt9SXmJKPI7fJNidgPQdzTCOFTckMUT5WcyLWS/aA
maagKXkp8814UzIBtLFdXDOmKRmqffN9UwoBm3pGG17MmJAer488b0oloJAY
XJQ2aELu2a+R23SLgJBfXMmeVhOS/W3uSlM6Adf1ZjoinpqQ6uGvQpoycF64
n1l1OtmElBG+4tqUSUAni/NuJMCEXJRx0KopC693/01HkaUJ+VtTWbsph4Dz
vfzzPStNyC8vf8g25WL/5w/cPzhmTP43fHaiMZ8AlwK/uyrhxmRuiG1nYyEB
zQKTZ3NIYzJRUPpF4yMCom3/e/J2zoj03fjwauMTArbljFyAo0akQ1VIaGMJ
9lu710yYlBFpvtuY01hKQGVFrZ5njSGpGNSl3VhBgE3Ny85dIoakyOKslY2V
BJzRtiy2KsR5mOrL1/iCAHcpctMfczb5vpL5oaGGAJkC+leH4zif+dTDGpoI
6DcO452IBzIoZZbT0ELAFtEzZzcK4jNe9eWOhjcEPBQJoScvJkmw2S/X0IHr
9Ttfs/mtHvkz6XRVfQ/OS72+he3MLWTvWuu8+l4C9j0u2ZdUrk02lEleq/9M
QJF+0aFsTy0y61O+W/0AAYqRIr6/CzXI/cqd/PVjOH+vBUVvebiWjAwTepoz
QcDsFre/I21KZFYb2/XsJAGtzzazD35XICcj8iu2/yLAwSqyJE9Amox5zzte
8g/vN6yupY7/u35JjFr3XQEWfMy/K3tddw0S/8YrjFzHAgUt2xO8E4ZIz+CZ
g6MqCzzN7sc1uRuhw8lji/TUWDDwRXTkuoMxyjfcx/m9kQWHRxS5Dy1MkdFN
NSlvHRaE3BBYUbvREgXs6OQdMGVBg8/te0uodiglU2ijjjkLuhoTXfXC7VDl
LLtH3JIFG35v6vb7a4cEsvO3vLFmQe59T9bv6Z0oc4H33XQvC05vTWk4ObIb
tRWq7dV2Y0H3Ite1MZf3oYuHVK9YuLMgunnC6Nji/chcaF2j01EWeCQNN2vz
9qMXnqvZ573xfmenrgV5HUDhUgrh6b4sGK651zrZfQDp1Mo9e+zPgqCS/jnS
6iAqVJLe0HuSBcLa71xzVjsgr7eSR6cDWSBxePtRtYsOSPm0xN1FISygqVcq
if10QLf6RFdoRbDAZG+2yY6Hjmh/vPAecy4L/Db6jTxYdAgtI4UuH+KxwOHk
snQdp0PoQio/K/YcC0bulZS1LxxCphYsg7QYFoSWHB//oeiE6LOMsOLzLPjQ
mWuyxNQJVeTQSmrjWMB/bdW17R5OKHgv5WfPJcyH0VXz2GgnpE3Mr5+6jJ/f
opU4dNcJTRb/dedPYAElydvj4HMn5CH6u0czmQVHv9l5nZ50QorPpyTNUljA
5qflbuZzRvjQ3eWYygJDBwvGzApnlCo7cen4LRbQv7EPvVjvjOwbv9dFp7Ng
Z2hcS+I2ZyQWOsq8lcGCvqFcsxMWzqh53TAUZbIgdRJKHfY6o9jOgZDXWSyY
rbcSsXF2RsbRX55057DAK7t5m6WHM6Jt/vxjMpcFjk+r1ex8nNF/Xz+p8j1g
gZ6aSpvzcWcUmNB9RKYA90OfKhVywhltYndlaDxkgbMd8fgmxhM/3nebFLGg
MixNvA4/n5fesdzhMf7e3/qpBfw9d+v2nf5PWaCo1WVAHnVGCvOtF889Y0G6
nPrUucPOqCevuTa1jAWCTWjXJ3tnlHKgkfHoPxZYq7XIDVk5I9Fnr4M/PmcB
r7h4vYO2M2o6UvP4RxUL5t/cL36z1hnFiFdPEDVYf8tc+qqlnRElALltrGNB
82MnmZVUZ1Qu/99t4waMxd1Xn8N8n2ot/XigiQVCvIKXnv1OaEztid3ZN1iv
/MIvc6ucUPdwnn7XBxa0jCYGLYQ5oeTk3KCJjywofrN8wcLTCe0yySlmfmLB
yyp7bU17J9SQeWedej8L6pac7IvVcELRO29zjL6y4MSXfNYSOSfEpqWl7x9k
QdyqKVaToBOaL0zt8hnG9Yx/Lbn0+xAqPZQifmaUBdfOSs3NtB1C/wO+lu77

          "]]}, Annotation[#, "Charting`Private`Tag$42525#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
luBeW5YhH7a9hdGw8bklOMg7UFsqwsDn6k6vyxeWwGDyhONO7GMq13mdLy7B
s4IXs49xP5Dm9d/7yG4J4CbnZ0thBgjf4S+JdFiCkKKjnHWbGMDV99oo0WkJ
/i3HqGhjD3x8f6vg1hL49oca7xfC+StzZE255xJU/evSzsf9pjyyNrrh3hJk
lYp0I2za9cGPowFLwNHxYMdFQZwvkvyX+x8vQXydC21egAEHm9W5up4uAXO3
Z2oU9sOQy4xfz5Zg33S86EHsGs1gg4aoJZCT7OHtw/1t03zOXHXMEnTaONyJ
xLZktMWWxS3Bw8RISz1s2iUOzeKkJbi+3aaYgj21aU9/ftoSvBxrif2C++WB
6nPBORlLsObf9NQj7Ae+PnuzmEtQaJhdYoRdrUr7mZa9BPbn5NZvxxYarfNM
eL8Epm5ZjYu4/15MXBSPKVgCwpJn40/s9HPbSiOIJXhCB4532JM8xx2elCyB
+8b6/pfY6p9vbAgsW4Ku5onM+9h+t17l3v+2BNciss5ex67aVWrq+X0JPtSJ
d5thb+weW73xYwnWPrU0OI1tEbUpxbFpCW48DEvVwU47jvTsW/H8Q/LbNbEn
yFfGrTqWYNJhYVEDe//7sIgLPUuwbo/b0hFs32v5+8/24/l/ku/Ux/4m0dN+
cngJ951LNGNswaa1D46N4/zU/u+cDbZ5sJKM5vQS+Os7Dd7CTtUwrzkwtwRf
NYItn2CP/33opry0BDvcnxWmY6tlZgnvWV3CfVx4pRT7vlXTR2n2ZSiu9Qke
wK4UIl2W5FyGn3qSOjw4ngJV0lxb1i5DpNziFkVss/tnGBvXL+N7x8g6U+yx
4cQ5rk3LEMjHQixs1YRvsWz/LUNO7nHfdmwf4xmN5a3LsPQlup0Xry9/sXbw
+A78vq3DfTexL7g77h2UXYavNh/DM7GT5aJ+dssvQxVfl8kfbJXnA+I/VZbB
Y0f+PnOcX6YOj3MLjy5Df3P7hA3OzyTxHNN3essgWuR8KhN7pPH3KvPkMkhv
F6iYxr6L5PWSjJdBd3ztOn+c34kb69of2S5DU5hS43tcD8OVC35+V5ehwsFn
DSeuFyUfSRlvx2U4lKdgcg67dMjNzdl9GZi9W7WXsIcJIa5z/suQHlVtehrX
Y+qKoApP0DIc3lXBloRtdUDAujhkGQ7uthGZx256t/6TXCR+v+ulyQxcz+Ez
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
fToq9XtkaZB/MVro4TAnyv2bxLtuOw3+B5Nuuow=
          "]]}, Annotation[#, "Charting`Private`Tag$42525#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
fgvLWci4MzR3nPTDWwWDlUKdZ0GBZtgsRPrnZ+f/vh+8PQt006eexqS/HpNe
ebI3bBaGqlIv5hLWatJY8uv+LGy5O7Jx9dYEXKF916Quehb2FJoFdxAeE9/Z
m59K3lduPuNC+nmNj5eEQr7NQtIjWW130u8HerNyb/yYhVl7Gq4mXLb9q/W1
yllw6evjKJP5wC5a/Klb4yw0PTnweJ7wzXP5e8x7Z+G7WFxlNJkvfmzsaj/W
T+7jzFSikHldpHFZ0OHhWag1LDU8Qzhl/4kKzalZ+KWjVrSXzO/Dk7cuqszO
QomE3MpnhNUzMiV2Ls5CtcXCWlEyv9xwaHy/lToHCX4lfX6ES8UoJ6X55uAT
qnjRSXhV2dYla5fNQc1CkqQGmX9sbxi/EF0xBwdKbu0KI/xU9arJilVzEPof
HqslPNSfPLVEfA5qz0XYipD5Se3RDya35Bwce6XlYUA4wIK9f279HEyNUBR8
CZcsW9c7IT0HP7rWMR4TXll88O7w5jn4rleb9pGwjZeb0l/5OejvtHdqJvxk
W3TDb4U5UHLmrewlPNiJr7XumoOXa3i6BgmrMvo2NKjOwe0NKcn9hP2PCH+t
1JiDy2uEBX8R/k7RcC3ZNwdeXeGyFYSF8xyFPmnPwa17+n9fErZ2Dcst1J2D
etmUxXuEH294bZ2nPwdSnudkHAgP1LcuZh2bA+uibCU5wiphtKfPTMj9hl/I
95L7+yEF/ccWc4CPxAjGE/42YTHMtJ6Dr/5JbTqEhdL9HzLs5mCUMx3dTex7
3D5tzwPHOQibq957lXCyaHV7qNMc5EdYVNII95dOBwaenYNKqVyD28R/ygHS
ctfd5mBRSjRvgfj7usqRCi/POTgXnbTsHOGv/y5e9PCaA73b+w9XEr2sSGJK
nL06B2JcDK+thK3Mv7w/6TcHyYygCG8yn/ZjsSWWwXNQcKLlzhTRY8q8iKrA
nTnYlGuZqULYQXPVqeLwOfhjVH7PZXsCbsxbUbSNTvb3/nYvjeg7kr18qDOG
2O+xVXoumU+P7hJYy2DOwceZC4p5JB4+vVjiQ3kyB0kK7pciNhP79POm5KbO
gYBO0O5zsgl4jxyt7mz6HBxBjjYaJP6ynnAp1r+cA4VtQ3+ySbzGx8/0Piue
g+0PNvTxkvxg0cwR/e/LHLxJaR/2JflEWHzqgEjJHNxZoDr0kPxzO3I80a+K
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
34oKTxGeq/fMHJWjod5+H6eXfcRese7KE9toSOe3QLH1Xwbutj2Xz9lBQ458
ChtHCFttOIPmdtJQZYfKbc9/DFzWdfrrohINSYxcH/9FGKU6GlCVaejjnt5t
+/oZ+PXZ/2p4VWko5uGOc6GEtyrYWi1VpyH5Fnj+iTBz1Kp9uQYNXQPungHC
Qrnmp4S1aMjolJkUbYD0Ez4m/0T20VDZ8lUWAoQ5moYeEoiGfmqJ3eEmfG7x
yKSkNg31bd5V0Eu+7/x42FdKh7zf5PqrgLBZ8EFuGV0auhi8VcCf8Hc97ZDN
h2nokeCp3UqEtZaDoLw+sXfgH4sacv7sKs2HOwxoqIbnvJcj4U0P1dcoHSN6
UHkV8YvcP9ZSJUnZiIYmUzzSDAkLSu7arG5CQ/39J/IziP1utitkaJrR0PnP
vN84xL6Tj7btAgsaksQVibsJnz299a22FQ2NrTnBZUv8075Vdp+uNQ2tDitM
u0D8ZzKw8bOeLQ2lV1fTLxH/alyUrDKypyGaznOkTfyfqSphYeZIQ0phigsC
v0g8zYi0Wp6ioYc9Y5QvRD9Lbwj22bkQvV1+Uj9H9OWns8zN8SwNTXcYpPoS
/Y3xLWGfPkdDCwkns/8Sff68x0U570FDafU3nocR/R4zWbjl4UlDwr8nwouI
vj+Kzi67dImGpI9ezP1N9P+cyRa/5kP0eHjQYojEx7XnvTtDA4h99ZZZLftK
/LvL8OrZmzQUv6FB9tsnBm54l/f5SBANqZ3ZbupRzMCKJbeOC4bQ0Ejptx93
Com+emUCo+4T/UvlKXfmMHCEe1j5pQga2j+mNs9L4nnf1Ji4RRQNXRfml5Uk
8R7D+zFDIprEl3Js5LIUkg9k7RtYCWS/UU2f1SRfTGd82+CfREO3Bp2v5NEZ
OEV5p6t9Mg3lZMk56UQyMEVnYVE6hYZkr6zg3h1G9OnIlEt7QUMU5mZk48vA
65KafF8W0pAop8my2YaBS7egb1EfaGhFfnTQfUsG9slKFb5cREPL1gjNIFMG
rvnglaL2mYbm30++p5N8GtwmUlX4g4Y4EVWPePeQfLTGWObbTxr68ankMU2U
gTG9pKSFQ/ZTsbZ4S/K5hPYi69UMDQU5fb4aWkL6uyFlz7A5Yo/7bdvsv9Dx
5kNJazQpvMhEtVFq/Xs6vsvxco3j40Vl8ofdczJIP2WzaflxMV6U/iggri+M
9Fsb/I0advOisdIZ/4HDdKxf/npTpgovqs+6learQ8ePr/zj3FLjRTdHFzuo
iI4taswfqWjyog81ny5OqdJxYeD2sYfavGiV4ojOxU2kn+tpjjI15kWxJ1ep
fp9/iDdkKDdWufEinfeNLP/nD/HyfYu4yoMXsWPSDPCTh3imsiStypMX1S4P
fMuV+BDXjdtdrfLiRbxVLqX3oh7i25qh66r8eBE9+OxQie9DPFTadrLyHi9a
8Wm0od3wIX7/N3ikPJMXnQ8r8bo3G4WfXzNuLs/mRRaST13DJqMwY/naj+Uv
eZGS7T2P+6NR2EMpJ6o8jxftjvv3IqM3Cm+60qJa/oEXHZY9vUKrLgrfXaJ4
vayCFzFeXdyekRmFrbc08/8Y4kVPnp3U/3Y6CgdcF3yTNsKLjEvT+ekOUTil
9sCp4DFedFJ5WMr5RBQe88/8sH+SFymKO51abR6FQ5sCL76d50VppTZH83Si
8NtQhbanAnzo9ftqrppNUbi94+SdQEE+tPzy5IN/G6Iwj2qsmoMQHxIapdTy
rYvCRr+pkWtF+NC+95uDTohG4V6NZt0oST4UuWPQIYs3CosNBGYHyPMhOS5L
mOqPxFra707YbedDX35HPe3oi8SOMUNLtRT40CuLyU0NfyJxps7x01NKfOhA
0T33wY5IfJClsMZtDx9K1ptdrK2LxGfHT347osmH+P5q71GricQP9GIvye3l
QytWesulV0bi1glqZTfiQ1Z9T3d+KY3El441B9oc5kPB517+Ki6OxHFPBJX2
6POhWyeg9TmOxEUzB9rFDPiQ+BLW/SfvI7FAaqZ6jSEfmgkt3VD6LhI/WQwc
PGzJh66ozEo2v4zEpebv4jYfJ/ZgnjLRyInEI+lDh3hs+NAlW8/rj7PI/ayO
J2M7cp6rHjnhGZG4NlvBUtWJDwUEZN4qTonE9/7bHnnEhQ/ppQzRNJ5GYn1B
+XL7s3yo2fPaucLHkfijq+yBMDc+9EJIrK89KRJnb167s9OLD217rP8jLj4S
32Xy8925Te5P8a3wj4jEh4/waSeG8qFPwswWpQeRmDrDc/11GB/q28N/69e9
SHzVkjLefp8PCfNVpOy5G4nPrJxq3x1D/BFbvKQ8OBJvKmav1ovjQxcP2ui5
3orEne5jZnZMPhQ9+vgtV1AktiofLA1J4kNPy9+rCd+IxLoh3XltaXzoo4ea
a8HVSMyt9nt07DlZ33eNufxKJH7/p2P7khd8aEp803IL70isfKAleVcOH7Jm
vE0puRiJZRaq791+x4d+cAKTNc9F4vaMyhJmAR/a21GUAWeJf2zKeV6+50Or
M76m73GJxCvffb/aWkz8N1KYIHgqElMuYSelUj4UqFUir2UTiQul3z/SLeND
SSddkwetIrF3dX6rTQUfutdTnf/QIhIPKeSZBNfwIf8b7T8+GUfitr8Z+1p+
Ent6PrR/eigSx8Q8vzLSyofSHHsrqQcjsdmhtNe0Dj6064XqcivtSFz25LG8
Yhcfkheccu/VisQhpo9OH/zDh1wTRZ5Ja0TiA9z/2/wFUc+B6efE/Ymh5pP2
/9sw53b+S3aHlko7rQaTSft3xc8Sa30NTG92PEWLDCftBwCbHzv6
          "]]}, Annotation[#, "Charting`Private`Tag$42525#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUl3c81d8fxy8XDSVC0wpFKiEr5P1JQ/ZMka9KuFZEVtkjlHWHUWkSDSur
hHxoGA2RnRmyx8XF5Rq/8/vrPp6Pez7nnPd6vd9nn627qT07gUC4xkkg/P83
SvHv5zuGqaAgXqnsurgTf3Pt282vGo/AcH9Nr4H2HvwHtVCC89BjaGr6ED30
SAjnnbkTHrHhKXx6VL/wJFsM/2GR9Pzklefg6X1lPebeftycX+0qtjsDfuaP
zranHMX/vZE9foWcATK96rSP7nK4j5YEX8iGTHg++LFRVUAev++xpQqfz4Rj
Omd0ZS8r4F2/esTg9yvIqVj9LbCqiNvFhvediMmG3e9P+ct6qeHzEn4l/7Hn
QOSu3Z4ch9XxyDJXcuCtHIifvsR68U8dfzV2HvtIygVtzO7HuM0J3EdSwFhE
/C3oQslMrSKGl4YN5T1ey4eNX1scWtxP4VoQ4/7ofTGYGPBUXsjSxX1PiE/J
MouhK1/2w+Zjeni2+gfXKtV3IP9T8qlpuR6+Q3XYaejDO8Davos/b9LHR+VO
2cmVvwfzqyYPVAWNcLI46+KXyg+wSVxO6PCsCd7L6aI1UfcRuD9VHLp87QKu
6ZCxWWTqE/zgMjuWeeMqXsebHB3s+w0EPD3PjV9xxSnvYkUjJhvA+Nnf7cIC
Xvjg6LOWmNUGeNhYct75qBeuKlwcQ9vaCH8mD/gQ9LzwvvDuxbQjjWAykKA5
FuaFy5nINlRdbwQX4b+1HQwvvH78V8j6ZCN8M+v9x/XXG9+8j7//9tRvOJFy
pGJToy9uYy51P2ztNyxV7b8eR/fFC6LUDe/xNEGTipytKK8fbjl1rfSBbBM8
qKxeu27kh78qK6KWuDVBABYZy/zhh2tbWJxamGqCvWl75psrbuEP7zovra41
QWpARp1C1y18qjwoj3NbM/zn7yp7eekWnizxcq/g0WboXpx7I3HsNj5EX5w7
5t4MDJHbhN7023hEzIMXHtPN8Ez6/HSbtz/+rI8YRFprhjfgO8WM9cfLlNwu
/Le1BcYyFHoa0v3x2V6tzTqHWqDJLDAho8Efv6o44S5GagGtphbjpQMBuGa3
pvqvnhagPViI/1YXgFspvBb4OtkChjU1wvrdAbhPFP9U6UoLdATsin1MD8Bz
5EeeZe5pBXZcw/3VjkBcKJLCFWTRCkMS/IMxVwLxJdnBxsP1rTAzV2KpMB6I
C0QYZol3t0Kn+t7c16xAXK6jJGLXRCvsfdrzdZo7CHcMj1Ph2NwG975sg5FD
QXhrm/LjzjNtkLV07Pw9pyB89vBzn0bzNgg7m1nl6xeE84RxG9dca4PcwLf0
Y1FB+JnDfeyFoW2QRk/z2PkiCC8Kuet472MbjJxUsrfvDMIbWuZOhvxoA9bn
rsuFI0H4uIzNXp/ONlDRXWd+nw/CxVsU6q8utUGpqMLm/7YF45SDXceOK7VD
ysaHlWsQjLv9ll0fzm6H3XFaR91SgvH95ligyMd2EF3yy3BLC8a7WkxY5j/b
4bi4ctWpnGBcp8NrsWqyHTgiTUddPgXjkn2l06myHZBcNb1SOBaMd179cf23
ZgfYMkWfWTKCcepA9/hGow6QTBcfbVoNxteHCCPe7h3wTtZXWWJjCP5n8myf
0dsO4FbdcdZ3dwhOcb9oE1nZAYP595OchUPwczNOXeUNHeDdW/P9yL4QfM3T
32qurwOq3/03UykZghczYtsPznTAeJcip6R0CO7q88TiCtsf8NogwXXhUAgu
zsxrTub7A8l6cnOWsiE4mfW7gajwB9KGeuN+HQvBtQMHDdW0/kC02JPjWspo
/7X5HzdM/8D68cKfEaohyN8b9F7a/oEoySM6KWohuAv77rpuzz/wuHF31i0N
tH+EjLZA+B84mX979pBmCN7OqfFVl/YHKuqfiORCCJ4QZXAqNP0PtBzJEF3F
QvCzmy5XvS/8Axp5n1r5tULw1Xs3YOrzHyB9atr8D3HRlrCPks1/YC1HRpd0
KgR3jqepXxr8A5cWR2kPEe/jzfhAYfwB/+MOw0GI2ynvVGo5OuFB9MdTAojj
+WuL1wQ6QffGtldWaL8zSR3HlPZ3wjHHH/ymJ0PwlR3j+S5KneDbqh+5jO5X
eH/laNqZThheJK6bofs77+HJbT/fCb+2XQ20QfaJPRI9vM2hEwbJ04Q9yP42
Yfk3Z3w64d2Xi1ciVdB5T7WkAyI7gZeyOJGuGIKf3meeWZDcCeXlKYGe8iE4
K81ecjSzE77fG+abPRKCF0j6pom+74Rioje7hEwI7pQZLWZR0wmSZ1azNhxA
50k/fBLb1gkFOuGpmSjecYc+Plxa7ISTPJJjgrvQ/jn1u+Q2doGidYjO0PYQ
fFm2L9lhVxfoyjnVe2wNwR0ViLQm1S7IHwvTKWULwUWLBPg263TBsvOJkKmF
YLxV6UACZtkFh7GjpT2jwfip4zoxObe64LzBgIB4fTAugiWER5V2QZ2vlpci
ORhXHeYz9vzWBRuT7YRyg4Nxs/hEof/+dMGDlRu5WW7BeHTXg2KF5S5g9n55
aa0XjM/4vRjuPt4NfWF7GHfXg/AtYlJFtTrdsFh5PTN4PAg/UPM6pNCyG24G
6OtztQXhVoJ5u+/e6gb5jQNS1dlB+Jf8D3qKH7ohdccmOp9ZEN5zUWOXaF03
TOrWaCeoB+FL6xWDmzq6oVQuI+mxRBAua/glsJfZDXzG2l+7ZgPxlLH6vHuq
PbAcasn2KiEQd5YY5P/7vgdC7mZ+f/4pAI/45tD3vaYHerXLtWxfBeBPPUaz
37X1ANuFBxtX4wLwZnzqTOxiD5jcWEn5dTEAP2G95Kui0gv3Ol7Kn5v0x3mT
eLri3vWCiLb5tVk+f/xSuJDpY6s+CMrPyc1VvYX/GN74bZNtH+gr3/txfc8t
XFN//qSPUx+MH/uzoZvlh4sJ1ssb+fVB0eD36u8f/fDBzGA+tuQ+UAzXOUvQ
9MNdv/U32DX2wTHu6vxn8r54t+yvc43tfZA5eObjMI8vbkgrqzzR1wfiSjt7
x8d9cDnrxLc7pvug+NZb80MZPvj85Bly7Za/8Ebn0etIAR88iO+10eFzf2GX
Z/63jr9e+LR3Us19o7/wZ/C6afwHL/zKn1DgvPAXzg31cTWRvXCtdKujPfZ/
YbTBZGaLphe+QWnLNnL4X9A8c/mHFu0mTr7oXj9X8Re2x0eeHzrsiac9VTIo
U+qHKeX2gzkJbviVh947a0/0g5Tgprw6KTdcNKn4b/OZfrDw7bgtjF/HH91T
8pk63w9hrYGDzuOueIq30tN9Pv3Q9TfO4LGaCx6rpzQT9a4fvPezHQ8rIOF6
Z73LEiv6ob6vp9VXg4RvPll853l1PyjPFec1fXHAo5SV9pS19kN/96WIigZ7
PGyf0qmphX6w679obNdyDfddVEwyVxmA3koD132Sl3HlWa/LV2EAHhze8PoH
hw3OmCg66KY9AMnbkyJE+61xz37FiqgLA9BwKs66gmqFu/5UHC71HYCjhxgC
M9/P47bpisf3lQzAt9aKPoMT2ri+kWL3pOogCLcSjxrHnoEpK9EPHtggsH2O
LE42PAcUh81J89qDMHqn8US0gB60Bvbpr1oMwuy5+IxhU2O4mh1bvsV7EE4E
v+khTJ4Hn03/Ug/lD8LrRZWHmmlX4OnnJCung/9A5JLC4JEtrjCrstg2uHsI
OmOyFIqH/eBs655OrX1DcH9gRPiF2i1I9dLseSY9BB9ZLfaRcbfgdP6dQWuV
IeBI2nht/7HbkCQjMNNsPgRSVsd+/wr0B1Vh+c1fE4Zg8xNuOok3CILYXTQy
OIdhwvBKdCMtFH4/iwfi1mHgoh0ytysPBSko0LoqMAy5kgyv5cFQaPBfOics
MQw9V5q75JTDYN981PkkbBjcufqNa9rD4MvwC7c7/sMw8Orlg4ciEcD9s+eZ
/cwwfDaPaiY9ioRsNouFa0vDsOHf/Mrr6kgwVP6pZ8s2AiNnN47V0iOB+rRs
wYZvBNrXrhwlnY6CPZ739S/Kj0CANCm6bCQKZHaaMnU9RuDXU/aumv134Yde
nYHOrRGYYHptMdO/C24hWLp26AgU+Hk5PfO8CwWjsoanKSMgovJH4lrFXVAr
535xIn8Egr9lPxQyuQe6V78ayc2MgPSYwcVHtjEwkaSRIbs0Amo27m2TYTEQ
/61w+TDbKDCpOKElLQZ+H0vLOMg3CsFePewOf2PAiiuYJS4/Cpv/WVh9sowF
pyzVl4IeozDFdfbmoEocbO7LW+G/NQq/rywMjJrEQbaAlOn20FGIzRIbj3GJ
A3qg4CoPBe2PF9zLeBwHfsazphvz0f5ad//dWo2D6PmstWX6KMgKm1xOz4kH
HvV6+xvMUXikJ6neXhkPiSH0H//WR+HojwWzr03x8IxbKbWBZwwIEhqStcx4
eL+vQiXz8BhsPV01mwoJMGTQcMPEcQwGfl1vU69JgNOZjP6XvWPQd+GuQ5Qt
Gb6N79AVHh6DRq3bN085k8FY/ng+dWoMso/Nu6x4kMG6PDA4cHUM9pZ8FrEP
JcPN31xCZnvH4UKlViTfMzKkre06v2YxDjpPhh+rd5OBcOFEjXn9OITfZG+/
dokCzQqFIc6t4/BGrPEFhx0FXvIcVAvpGYfc4qGqp64UMKwWyMmaGofxKPv5
L4EUeKQ0QWXfNgGN4q0B359SQEUg1eat0QS8tZ3Ky+2nwGY6767qCxMg1ZSb
WjlGgZ7vkY2dlyfA7q6KVf4sBSLCPU9vuDEBcC7f4ig7FX7P6sjYkCcgX6vX
/7EoFTLr8YGb9yegaqbqcOYBKtx6o/T47rMJ+EY/lhd3hApitvt4i99OwJbX
7F5LalRwa2TOczdOwA9mz7iWORW0ctzy9nVMQFZFztgJKyoI3h10VPk7AdQN
cf3br1ChHGvotJ2ZAMXfcTv1XKiQIHQ2yW9pAj6VRJnl3qCiubHMMJ5tEgxi
ZDLGvamw6e3Lqg98k3DOPiOKEUyFrhhh/1+7J+FIxsOdlRFUeEuiKf7bNwkr
J2+W2d+lgoVo8EtehUnQSnmpDlQqvIi3iCOZTkKlbO+6TBoV/Jx/nA20mgQV
pv7FnxlU0DurRaDZTsJQvreF3WsqzK4euVnhOQn8Mm/2+L6lAnad01KQNgnH
04XIRyuo0KlXJPm5aRLSfnxOHGujwpVSW87CzkmwYYt8PfaHCkPSfENpA5Ow
UV9oYaCbCnROt5dhc5Nwy/am448BKnBUSslo8U/Brx1vF25PU0FWMfVolekU
BLR0bzPgokGYUJga3jgFBc9DSyvkabAhRm5vXscULOooRFkr0iB2qYf15O8U
cCVoWS8q0yClVf1j0MwUDPzu7pbQoEE2eR40+aaBQ1L8jcFZGrRyOJ35aDwN
b/6wlTRb0kBm0si47Nc0xC1Y6ZsG0YDm+lpLvG0alE4mG9mF0GBlnF3pbs80
pHsKTHuF0eDXWPHuC5PToGu1jUiNpIEaI87jFicdNrKM6EXxNJgqLB07vIkO
W87SBN6SaZB+c/ha3xY6TP9KG0yn0mDLHGahLUCH19vc73on06BnZk5NUIIO
HT8N6ZWPaUDNFyuqPUCHZSWuwNCnNND2MDgSIEMHY+3QErXnNHhLzxQdkKdD
TwV6sr6gQfi0JUc+RocUu45I5hsaqOZFBtqdpsO9KLX/grJpMOFWuLDzHB2K
o0Nbl3JoYDG1ZTTIiA7+u9S+1b6lwebc47YKZnTYvDqlJlRAA/y6Q+c/Czo0
WGw3ti2kgfQk/lPfBt3PwJhUXUyDruyJswRbOniNnXQafEcDiuvuykJ7OgTU
GG2bf0+D5XHPgj3X6XD1hYP21Aca5GU9PVR/gw7y3zU7WktpYOfy40WoFx1+
YtM8BWU0+Dm2P2XEnw77VFLtsY8o3m9MeR8F06E9zi5yDrGyc/Bdo3A6UBJ+
6j6ooMGz0Xb/d/foIHGaGFSF08D8Nee8UzwdsvhfvLGopMEmJwU3YSodrms6
bGUg9hyJuRLxgA5n937x0v5EgwOvSjpUHtOh+aborVXEnaR/puPP6CDQGihe
/pkGp4c1z5i+osPwbwEX0680YGa6VHBm00FW+uSZg9U0yHG4r/Ihjw7Oh5+Z
b6yhwY6hmYNi7+kwOkbd3ltLg28ZIulNpXQQtJmtbK2jQbC9nlBUBbpvnvCL
1m80GBl8wTP1lQ48R6I3Tv+gweMXjVHP6+jAZvX27oZ6GpjarRHO/6SDuPOb
FOlfNCgbuDBX1kyH7JiQooxGGiS75Sbh7XTwtl4KPtCE7FviUP3cRYcmR2B8
akbx2lYQ8G2QDn+7ejsM22nA8XCjaP0IHULY3+tr/qFBr+TlqsYJOnyPV3XR
6UL7qW3h6mDQQVH1cG5BHw08vtq+6mLSoYy4s5l3gAb6xh90+1boUEF9/Ore
PxoQHRwShjlmoDBz49XGMRrcoFTuWhCYAeVxS7u0BbReaGfZ0q4ZGDZ56/5p
iQZSL6//tyo0A4+2lF4dX0H5Xr4njWP/DAidE1i9QEwEvRGvQ/xKM6DlLSD9
iDcRDsBBTbnzM6BjFl/ecDgR2L8F9x2znIGFh+s7guQSodu8NUzlvxl4XiMa
K6+YCInO4TWa9jNQ8WDh9hv1RGBL7jY28J4BUaFHwYO6idA1QbnmnDQDD3Q+
lN9yTgTqw+XoFy0zYPV+7+aul4nQm3Og6FrHDFSXGJ2UzUqEw1WmveLdM/A0
9bHhrdxEqBl+o/R8cAbSn4eqbS5OhBXFS/2P52Zg1OTqmu6nRCD9KlNP4ZsF
X6+KvnPdiaDBETh112AWdr3Y6iUmmAT3dr7erWMyCzhBoCx/VxK0ybSc3nh+
FkTvNZw9I5QEniZHUiOtZ+HDFgXxmxJJ8PJJt3a4yyzINaw10+WTYPtxzecB
d2dhwwXDNzHGSTB8fd3M/essaFlwG+2lJYG1/vlXQXWz8GRmwza/lCRokMla
ifs5C4Hbnz+tS02CkmGLjOyWWfhVYKWg9yIJoq/mLoz+m4VUv+C9tUVJsAIc
ekujs6App27zvSQJbohYPd04NQufThdafy5PgoudnOekFmahbmKUcv1LEkif
/++BHdcc3NEXPH/wdxI8OlY4eXPzHLAWLw1rtSQB7/ZNWuE8c8BIrjyv1p4E
zPqisec75sBWZ+nbp+4kcM3ZDPl75qBiQ8dvs74k6Iu5QqsUmYPS1w9KP/Un
Qd25LRq9B+agoCb2kNpwEmhK2ZKnZOZA5uriO63RJCjgLBlclZ0Dv74OyYPj
SfDw07U4IZU5aGgJlkuZSgKe5x/+HlKfgz93GbSD9CQIC96mrA7o+9zz1pkz
SeCsUdZjqT0HB7jp+y4zkqBnD98xJ7056LG7L546nwSmSw5RfkZzIHItKr5q
IQmq28o7o8zmQNNZh/R7MQnU3m2XS7kwB0dEnHJ/MpMgN9ExIvPSHNBxN/vC
pSQQv1nRXnx5DohVXAnhy0mQbCJw5Ou1Oeh3czusyUoCbjnn0GbSHMTUZZwY
QBzCU9ky4DKH5vIfnz1XkoAxISgz5z4Hrbz+nyYQO353CWL3moN7X+aPm6wm
Qdfrqt98fnNobibrPkNsHL1Tal/AHAh3Kh/vR/zF4bq/XAg6P4nxde9aEqie
+fwLIuagPV1zTh9xtsRuSaPoOfj+68Nnb8Ri7O5+NrFzMFGxWS0ZcWLflx/X
yXMgdSvqYi7ijfiefYGJc5Ccen5fBeKAxze8Y+/PgX5xU/JXxHT/6rrUR3Og
8vNy2RfEdlZCIlnP5gD2CVPKELerenqWvpiDpd2Se94gNthZW133ag6CC15d
JCP+NC+8tyN7Di6mdBm6IVZuvuk+8nYOrr/MXTuF+E1B3efFojlI5eB35kMs
QhHdteEDug8nP60V2Ut193bd8RH5M4V/jYaYy/B75f6qOXjQF37WGPHUZl+n
03Vz8PhmWdx35M8yBadG7OccvLXPLI9BHG116fiJxjkIkvlcr49Y/A1sUu6Y
A9lso7RGFB8LnY2vpUbnQO2HvewQiqeExzKv5CTKHx7JJzmI6fcn/MRm5uDU
5d8sb8T3RhrO7V6ag6fXeu9sQlwR9WBk8yYGnB09dkke5UdMXozxhq0McF3b
VT6P8udiW2AJkY8B5Qo7TrxHPHvANnplFwMUbg8/l0eMG5rTmUIM2Pl2PnIM
5V+sz9mL82IMEAm+Ff8M8YFqGekpabTerYGLA/HcpBB57DADvpFi/fJR/lYK
bmMOyTHgz1TJFmvEVvZzNb2qDCj8uO3lK5TvUnH/jnZpMMA6mj9bFzGjqC2l
HWMA3wmvT6OoPqq66tabTzPArEXqTgTieI5yUuM5BtwPML/Ih/jS4dxfP/UZ
UGdzJCNqDumD+TOVb8YM4Ij/6DQ8mwTz/tSn1eYMcHnRliGH+FN6xIbPFxmQ
32RseQ3VY8J3H3fcmgHC7WwRwaherecc28quMCDR5Mv+O9NJsKBl8LLIkQF5
xvM/9SeT4LMzbMt3ZYDTHclmnokkIFPlfXNuMOC11Yhx6VgSyPQLamf6MSDk
ZV3OT6Qfi5s25qUFMICTpXJTaQjVh/zyjqchDKjc41QXOZgENqE9QynRDGAv
1cv9h/To0OsGw8RYBiTnHxib7kH61fDpHZnMALsJA9HuLpRvYi8j795nQJEm
95fLSN8un3swdecRA954pxnMI/07fCPGIuwZA1Y8f2deb0L6gbsf8H/FgHEp
oVqu+iSgDV+N981mAPn4KbLU9yS4ss184eZbBuRaiEofqk2CZRvVatcSdB6J
r+ZPVRLIrhEcbGoZcBqbmuwsTILrubUWO34gf1llRlu8RfVsQ9au/8WAeOek
xfJsZD8uelCzjQG9jyw0bmag/AjRnBAeYsCy1YXR2GRUP+wBnt3Eebj1UHXM
yzcJtnItBlnDPHy1sep5ppgE+u8q3AVOzcOFwH4tbTmUzw6RV36cnQddHUbE
yCGkBzWCWhqG88Cq+v18L+pXHNGKnEL/zcP63eH/dPhQP9nkGdN5ex5iPY72
C0wmwsTWyRSrd/PAH11M0UxLBNO7Pfm2pfOgiu1XIzxOhBKOhu/OFfOgsLY3
oiwlEcJZBeu3q+eB59P9OZG4RNgz6kdKbZ1HeXRb+YFvIpz7wqHStTAPBQ9P
N19A/f3FbaHW/1QW4Grtj0axfjTPLmyl26svwHKi5SvjTjSfeKxvcoMF2MqR
dTMYzUfqjv0ngrQXwFPuwlQHmud+n3+V8eTCApzRnk0Ny6IBQV7Ru9d3AW5f
KGVt9qaB9bCewNWSBbjkudgnsY0GiuPb30uWL8DnawedEjeheX66w3IEX4CT
E0eY2znQvLZAeupeswBLyTuk1ZaosIcrQiaodQFen4v6IDdIhXbJciyVsQCa
BVNjH8rRe006fMCGuQCbun9RiSVUiD6sGym+sgAB+L/KC4VUUFFs//6auAgm
GoW5om+okHyKYVGyfRFecd36duQ+FcxsD19vkUP/b46q1fKhgozD3LYHiotg
yTZNU/SkArtzaYG16iJU8LCXHHWjQoHHOeYALMLptsHtJx2owBtqFz5ruAj6
u3slGyyoMBJx6MA700X4FD0bvNmMCpXRs7W3LBZBr37zPwMjKriTQ3jYbBZh
ZMO+X9PaVKh/+ujBtuuL4O5SffTZcfReTr+m0XRjEQYGVcfElakQ9FKmN9lr
Eeb/MvtzFahwJK9EUiRgEdIH0r6OH0Lvv8Lgmr/Bi/D6IM+G19LoPfvurHNG
+CJEyfIfC9hPhdiK5rzDMeh+3It6dug9bvcp1ZQevwg8/yyP3xKigka17Xwh
dRHeCl7a/mI3FcZ/0tXUHy5CQzFbtLoAFXS7t1TrvF6ERq6lSI/NVLgtcyNg
OXsRtt8w/oNtpEKWb5NC1ttFaI5h8u7nosKW7Q+fbilZhJ0ecvdk2Knw66zU
rV/VyN4EhvfPZQqYvz15+PzgItBWvj7qHadAxOqLfs6RRbh4+dDp5VEKFOtu
fPBufBGoppfU+EcosONfPeeuuUW4PraHHxukQMdu694/bEzw32+THdlFAZtw
H+oVUSa8tD+7te0nBeIbOs7xSTAhQXybsdAPCuDCJ9arDjChkTz6hPSNAmIl
RFcJWSbYhzZd4a2hgAknSbxZngnviANN179SIMz0W3uEEhNsVTjMGj9TYGCC
fGZIgwljhhe93lRSQECNwUrGmKDDniEohlPgdNSFAu3TTKBuC/iU+pEC3s2l
jkxtJnAxqJwHyimQuU9E9LUe2u991qmaUgq0uoW2WBoxQUJkQ3DwBwpsKB+M
2WzGhCqH5+8NSyiguumcVpkFE+p4r04qvqeAo0UW08WKCeZFoqIK7yhwP50n
T8iGCUbX7+qfLaZAHd3D/udVJpSqP/H2KKLA8omWvUH2TOg3e/SgsJACMjGq
v2WdmKDPdH+/BbFVe2p0rysTtu/Z+SuggAIx+9c1yTeY0Ods0MqBuNzTdh7z
YkKQd87v9HwKTOBfs2Z8mfBKJan5ImKhrQdt0/yZcOd5xU9JxAZWsbvMgpkw
6+b7cQPioJfT9cRwJiytb0lnQ5zLML1TFMmEir4jwdsR9558p25/jwnyWy+X
qCPmTdg9KxjPBBWZhO9hiLGugFfVFCac7/26axSxx8E+G98kJpyYLH/qhu5X
e/K6pt8DJsxEtX4TR/aIWS0L33rMhEBBmWIWYl/PqNVbz5mwyH7NZgn5o/6e
QPftDCbcHpeu3ov8dyD9ebn/ayZE8R6asEX+DSyTfRSQwwSbncIN9cj/zU1l
/oH5TNDIKPC4jOJ1eOLcpaBiJly5/LRBAMUzgqNVLfgDEzaNJ09MoXh3Cl3b
E/KRCTcn9b9Oony4ZxDYEfqVCXfHP2VZfqFAv/3mD2F1TMiXHyuprqbA8aCU
++E/mRBz6cbExToKjOTmX7jTgvzBWS72ph7ZX6OpEtmB/K8uyLzcSIGU3u87
orqZoMz2sVukmQJneYdaov8hfyZVtb7voEC6xx7z2HkmePfEUyz+ofjffXks
bgnl8+UXk+aofkzTFPnjV5nwMHjrf9ao3ghNhr8TOJeAUiXtFzlDgYvjnfnk
TUtwfufG/a8ZFMgjOlEoW5fA0zdhuHmRAlxCCzeofEug5aj7byML1ZtiuDFN
cAkORg7QldcooAsHtPKSlsBbvveR4kkqCPRFv3F5sATFCr/3EbWo0B0yvl36
8RKkjElE/0B849PbgWcvlkA9uDkm6jQVjl/j1//v1RI4TJUt+Z1BesvhU7Q7
ewkmdu586nuWCkln1O9QC9F+E28SHp2jgs3Q40nD90tgVPXizycdKkhHESy4
y5ZgJi3RekGXCqW1Xw9EfFqCpd52jjsGVOjTM671blyCstM7+zGkx28mCuQU
WpaApbu3r8GcCjfjBB9MtS+B4sNIfjek31y//jiR+pZAuVqX/ZclFQ6Z2nNb
Ti9BDLt2y6arVPC5eNtQY+syMJSiYs56UAFb6nrH5F2GDd5KjX43qbDpIYgW
CyyDz98GapE3FR51ctCPCC3D2XP+d8/dpkKVTQJF9NAy6AsqzM+EU+He+sxS
p+wyOIY1cAdHUsH8mbntfYVl5FX80567VBj6u/sYn9oyhMw7bwuKR/pq/6KZ
XWcZ/lIjhBkPqNDCueEErr8M2jX5sguPqPAk0ynD33gZAu0NkjY+o4L8iKwP
48Iy9K4zRCwyqWDh8mHnkMMyWB8Ua0lF/fG5R71VXcQycHz66FpYTwVqt9VE
S/QyzHTdLjb5TYUwneHA/thlCAhR6J5ooYLtPsJzVuIy1LzQqN3dTQXxRvnh
IxnL0B1IJRqOU2H7iQo/tdfLwHYqULlpCsXzte5m7ZxliLkq1GQ4S4X+kGtH
rhQvg2XEr0/zTCqkyyXdpH5dhnKbxdER1P8TH+3jfFq3DIupke8eb6BBxMbc
5Kyfy0B9ePi90mYa2PVVf/jSsgxDavrm29A8Ya5vptfYsQzCsXF0Yz4anC7p
7eruXob8Va9Kb34aSJKZ6wv/kL/Vmpcdd9JAYCWCQhxbhkMR++1VdtOAw5FP
gndqGRw21LKP7qEBo+lxkdAsim+5w84gIRoMgszZgwvL8M9sUXpRmAbNWe/a
lJaXQadtP2YuSoMvO085aa0tw4MZ3/+SxGhQFP5r2ZCdBT4iIaGl+2iQMX0p
9hIXCzKkirM/i9Mg+dKIsONmFkz5e/e+laBBZI1XnhcPC1LZTfeESdLA5xjb
ydDtLHgc0fWfyn4aODyN+x23gwX/vmW+aUBswb3H7uEeFjg80WIzPECDs76Z
85kiLOCrPWmbh1h5QCGqUJwF7bzK9QzEB4zwXZUHWJB1Mv+MiBQNdpTpvfkh
w4IgiTN1hxBzSbWrd8iy4GRwuKUw4gWq3c9/CizYWtj8ZxZ9P7RGt5lVZsFa
LHlLEeJW50D6mhoLtNPPiLgirm7dFMYNLFjfzVO2B/E7rWT+XadYsOE2cQBH
932ZK54hqc0CUetzKZcQ39+Tpyyvx4KQbUbtk8je6Ej12hNGLHibHJDpg9hv
tsZS14wFIJDKvoD842hjPm5xAZ2n9nHCBfHFb30B1y4h/x24Zd+O/HlO+TrP
jcsskIhYclVHLM0TKX+XhPb/nS/9D8Vj1+3tn5NcWCCJyXYfQrxx6Il5mjsL
Cl/kijmh+I18fO9b5suCm1GZ52tQfF9fH/04GcWCi5JkFw2UD7Pi268Nx7Dg
iH+ktBnKF412tY1/E1iQLiPy1n4XDeq1Yk2bU1hwgyYvGrQDrd95dLj0JQt0
rHZfDNiO5uWfF2KLsliQX7DV3APlZ0RYiHxuHgs0ngYI2vKieEw2+j9/z4K4
vYoDyjw0UPvkxRtdwwJMgs+ZjubjcN/HxaHfWdDqS8lb3EiDH4errfx/seBl
vsaXTYhtUnZmuLWxgLnWfsGQC/lbH9N17GRBXgC1JYSTBnQ2p+mrvSwYOlIg
WoHqK8y19Pj5YRY8NBgTtCTS4Pu+gR7DcRZ0uttXvmNH9dHGHXFumgU2LecV
RRH/F6t4UGuOBZ61kh5UNhpknvyvXn2RBQd253jzIp5euHNTicUC15G9Jx8Q
aKCanbvr6DoL2szs6g8j/raDcE18wwoclpG68986Ffh/SG8U4l6BdnNOnZk1
KliHmuQIbluBwKuRLaGIp8bTFjfuXIHKKdzgwSrSk6ozsdMHVkD+VVnPcxYV
Lvm4yY/KrIDn9CNuIcQvDqW09suuQJSQEjdtmQrKySNircorsE/1bZQvej8E
6/FV/1JD3z/K5fqH9KaWoOZSp7kCRPvd/xkhtnKJKS4/uwKh/xWx7V5EeiRW
ZPVOdwX+2e1rvrFAhYmWrvU8wxUIT4m+/nEezeOYrG66xQp0bslYVmRQoWbe
YvqR1QqcwDPol+fQeyArODHZZgV+3AooCEZ6lybY2HPXYQVcZpMeP6aj+frb
Uni48wr0jzXWpk5TQTFE/GCg2woI33nyOR7pZfXYzZs3fFaArHt7v9kEFbY9
e7TL+TZar1xDk0T6evH814/XglaA/iS5eWwU7Yfv2HghEtn369uX88Po/bAq
oLzl3goYiBga8gxR4ao6v11V3ApwB1zQLUTvJ6FbfFQfygr8+nwvCgao0PZu
W+WhpBVwVuxZKviL9J+xdarv/gq8exfzfGsfFQwUtgglP1oB3pKmIKMeKnzO
2ehHeLEChhYJf6L/IH+Mc2UWv1yB4h+nLUPaUT8/yNnsnIXsPzKz9XIrFfJe
sMm1FKxAau7l3b8bqZCaujz8umoFqgU/vY+vQf2ogyl4+esKZI0W/sO/UIFv
5+IpgboV0Hm5T6e9igpR1LmnQQ0rkIYr3vlUhvr13YkLZr3IXs5TO8pzqaDn
21OzsrICk5vcS20pqH8Xd83nE1ZhbePaNcc41G9n/0iQOFbBTmLK2xr1UxW3
tuBG7lVYdBdt2hZKBQn7BpXMPavwvS2b2OVOBZbpp5dGqqtwjcVbbozmhyzZ
zKi0m6vAQc9i+/97J1alvuel7ypYpPG8SSJSwQ1bUMrxX4Up11m2CTQPKZie
HXwfvgokVjX+cJ4Cpd5D2E/aKvx7c5NEGEDza/mB5cXCVfDvURX6jubHQd2X
rgaMVcis7mcEeFKg2uzXZ1PmKuzpU9fNuk6BV9aLey6urILz5qeUZkcKuLhp
19lyrEFy8d/FnZcpMEsZ3u8nsAaKl/FDtnpovuuQ6k1TXIPE8PcQJoHmddIr
E6bXGgTFHMm8106GG8wM+Q9+a5Dxs0A4oJkMX+6m890OWIOQFHm72w1kcMl+
0sgKX4P9Ghx3HteSoXQm0WSdis6rNxQM+kAGnnCqfGXyGnC7N9u0FpPBVoDM
F/pwDR7Es0WoF5Bhk0pMI3vaGkwy5q4cziLDxYBQE678Ndjh/Lop5zEZsrcG
y9cUrcG4h4Og90MyEJ4G8EWXrMHaiOA//RQyvKzybdxUuQaaVyeOyFLIsMDl
ZrL11xoU2W299v4OGXTvu8jX/14Df2ozHzGcDE8OOvEltK7BX+a4weUQMpzR
t2vk7VmDgnGv6zr+ZEikWJkITK5B5bEih0EPMoyIX5Rvoa/B3ErMtiJ3MmgU
nedLZqyBwNTjyLjrZBhoNW7cubIGbpnP31s7kUFBSNtkL/c61CgZH3C9SobI
nNPyXTzr8LQpNyXqMhn+aGrxPd6+Dr3VZa7Z/5Eh9OqJRpE967BH3dBquxUZ
GjKPmYgfXIeFQOaigRkZJFXl5QcOr8M+nW/fC03I4Fcny/dCbh1UXpBzxI3J
IDpxsHG/6jrEOd/322NABjd5MZOD2usQQ1IGY20ycJdvMZGzX4ege9xvqjTI
UJKcebrHcR28Dn8IjVcng50Hphrrug7xT11TrqiRoeKAl+jIzXVQv1MXIKBK
Bmc2Hv5k33UYqrXvXlAmw86ul1yn/ddhg8Xjjj4llB+UzsmnYesgUVas2HSM
DMKu3n8NItfBum+ysVOBDN/Obmth3V0Hf1bChyl5MkisaJVfoKzDofQJ0jE5
ZG9rVx5n0joMBqXI2h8lQ0C+T3rh/XW49SACnsuSodXhzb1tz9ZhfCcPpnqE
DGEnTwd9TF8HtVjqUdphMhwV6vFwebkODtGaTsxDZOha8LXfnbUOernskyTE
0Y18ljW561C7san0rwwZlLKz9L0L1qEnJe+3PeL+yDOYxLt1WKfHKjIOkiH+
au+xxg/rIBlp0xeLWF3jllTwx3XANoQmHUU8soN/75GqdSCN98T8kUb5MpPN
0/kF+bvG0ScO8ckfZ9nv1q4Dt/Du8+cQT2X2zSv/WIeCL6NS3Igfht4eHfy1
Du4pzVMtUmTQthbopjatg5xb0+tXiBnKuQ1Y2zrk8/69GI74Gd+5L1N/1mEy
eYllj1h/4u/7Rz3rUNy2k2aMeKnaP0u3fx0ePVcWOYU487ngU+a/dVD6bPz4
BGLTgDxq5ug6hJRe5cUQr1voRJpPrsOFvQ6+uoiz5Qdusc+sg1OA5W9rxBe3
BF5/y1gHTleVfb6IOYd3XLVhroOvH+vaA8QFVW/Nt6ysQ7PN84efEds80j1X
ur4OrK7tb+YRR6rPChexEbAknchyWWRvlzS+M4ZIwGZOifhdR6ywI5bPlpOA
JexUbchHHE205D6+gYAFn2n4wkKs1DO7NrSZgKXcvx7+DPk79jvO/LiFgC02
OhmwEPeXxM4m8hCwPkZT4SUUv3jagSGt7QRsx7ne80dQvAdD5np3CxCwJRsf
yhPE6m6VHXRBApanQHISRPkycs7q55PdBCzRWmGKH+WTprJUjfdeAnbwFltq
KuJECUalvjABgy87BqVR/p1ciytaFiNgtYtTuuYoPx8WVqVaSBOw+EZB2Xco
nyMiJd6clyFgcWrWHiYo390s75SYHyZgJGsScxjxyfVzLaZyBGwP066RS5EM
Mr/fDJgoEDDurCMSCYgFMrbMGisSMI0uUsl2VE8jug08RqoEzNanNJsb1dtv
YQVhQzUCFvGpkDsUcRmddshAg4CpcJfmzCCOT75wTg8jYGZxxaVfVJA+OH2w
0NUiYIYxXvulUP3aauy11zlNwF6Hqn6IQKzU3xOqfY6AcQzc/Sx7nAwixRj5
rC5av5zgcBvxxui0J2f0CdjW66bVOOJZK46c04YELEuxrn8NcdcRh7JTxgSs
rmawTAXpRTWhtk7LlIANJD80cUac13Sw/aQ5ASu82pOejPh+ZswQZoHWX3ta
UI447NYkAy4SMP351sAuxK76RkSwImDCIf6cC4gtRPP5NK0JWHKUv84mpE/Y
7HaxEzYE7K97s84OxAe/eslqXCFgI9WeXMKIt99v1VC3JWDPuE2D/88rzqp6
anYELCDRqWgn4qETDy2POxCwlQz7V9yIG3hXSKqOBOxmvAN5FZ1XOvCfj4oz
AfPlqOeYRfziHR6h7ErALLqsPEcRx9/dR1NyI2ClLpIdA4h9rcOfK94gYLGB
usf/Ir5y9F/eMU8C9jJsmPp/1mXXrlDwImBsm8SGBhErtrz6Ie9DwFxOyR8b
RyzyanOnnB8Biz4hf5uBeKO/6+jR2yi+fyXLCOh+swb1i7IBBOzGC8eFbYi7
xOS4ZIMImARV9LA44q9zFIEjIQSMn93IWgVxbvWc+OEwVA/7baOMEN9/cF7+
UAT6nhGW44w4zPU9yEQSsF/6xfXRiF1ht+HBaALG3mM08hqxxXZ/a+l7BOzE
4fGftf/3978uZ6lYAlaZa0fqQyxTonnrQDwBaxJvw6YR88c8i9pPJmC77gab
zf/f3/+xJ0tSCVijRsrT2f/7W87uhUQiAavSsNo//H9/E6sLxJMJWAFh97/f
iEtbpar23Sdg9eVk2WLEL17f/SX2kID9W781+f9+FBcw3i36CMWjIcP6CmIf
I4MJkScEjHmhn+sg4iviecvCzwiYW0nwxMj//T3Pu0k4jYANVtdvffZ/f9d6
7hR6QcDsL4q5GP7f36nN+/dmIns4v3EwUP5ucFNW3PMKrU8R6yQjluEkblh8
jeqzSdP9MGL9R786mrII2OO4vGgc1Yv7sUfZb3MImLNY5UVtxNRvjsFxeQSM
b2wu/DOqt6KrSqbO+QSsxOzSZkXEbUy2/dqFBOyu0tr4fVSfQlKp3wjvCVjk
k0NVgOobKkiPu0sI2Jmw5qJQVP+25xVvlJYSMNquOWIJ6p8vw38KelWg+txR
X8T2//655+GIcSUBEzv7cocg0puJfIeyI58I2Kdjws1CqH8q9K1fGf5KwHIU
+q9uQnp13vfHsS81KP5FqgpTSO/8eB5wPa8jYIpqijY1SA8/aihkW/0kYIHm
RwYskJ6ee2C3+LMZ6VmTcwtdAvV7Oflvb1oJ2NEtBfwB4igeNauPotoJmPfm
h84rYkiP5pO1TnYRMPW5mitdwmT4z7QurmgAxbdKzm73TjKEjCZdofwjYK27
2f8zECRDWojtMbdhAvb7t6+LDz/St1xWu9Q4AZP2bKp5uY0Mm8/WZnFMovOO
Xe3O20qGI92JQX+nUL00bTTM5iaDJ7esZOosAaNEW+523UCGpLTlBV8GAYsZ
touQ4kTzzPGaOvMFVK+3rZO+sZNhlXTFnWeZgBHIfw0SWAkQ/YVaGsrGhurp
RbvavwTIunQ5zobIhlX0+vYe6k2A+tlDV9Q52bAvOvf2T7QnAP++r5zzG9mw
a9csvFq+J8CTwEVjR142DAvx+emclwCFytbDhqJsGP+yLT3dIwGcCz/Wm+1j
w4K3x6lsdkoAMTnRdxcl2DBZ7vIY2ysJEHuwP8JWig1r2OZmMmqYAHZCjuI+
R9kwyuK+LUaHEkCA3eu/x8CGcRP4Znz+xsO3oJbTaSfZsCeWWqIrbfEQwlI+
/PIUG2b28CT/zfp4mGAsLb/VZsNS+j+Cclk8fBkOvv/FiA1b/HPkFF9iPHj/
jGkav8yG2Uqzmd85GQ+HdSdL6VfZMJ2r2lJByvHQX22YNn+NDVNs9/TQOxQP
hpV8HuskNszCktf6mkA8HChM4eG/wYY1PrizP3owDrqOLs3v9GTDagsF9STb
44CabdUt5MWGna8o+Zb4PQ7WMoSzD/ih+40ul03mx0Hr/XQdtRA2TCtFqBZu
x0GsIKc8hCH/7HhncMYlDrSoDrtOR7BhX+ue+PRcioPcmIPDBtFsWE1azefv
6nEQGZQXcZXMhiX9vPmFuhALGixeVwcqG4bLPnqlNBgLs76eZi6JbFjG45wo
18ZYsPFQEve+z4Zdts55lfQmFlTsyvDoZ2yYi9SWDNULsXAgI8rFJY0NG3rH
4RSvFQs7hsx2Gr5gw+6tCCy7HYkFBmnCjf8VG5bZV/+0gS0W3roIizzJY8OW
7iwwdmTEgPTN4IDCCjasjSvvEV/rPdgVdup4TxcbVuVDvRS39S4sP/1ecGw3
O3Zwalyt3fAOJHM6jGzZy471y/YbUeXvgLwLQWRIiB3LOnmSaSRwBxyVle7e
F2PHzFU8OVs7IqD1x5PLq1LsWKApKfa4XQQULHlsqVFmxxjVZSZMj3BwNtvl
YGXOjiVL+Vdc8ggFrg8Fqccs2LHtvQetpYxD4bmIQeOWi+zYgig1rkE2FNpH
QzXwS+xYk1h0e8l4CJwNGd8ueY0dg/53rTPXQkA8pwKf9GDH8k3jOBUyg6Bi
u+V89U12LJHjgMXWa0Fg6Tcn88ybHctp+ed0SCwIyKekk01vsWOKry/XH00N
hLUOiuv7EHaMk6dY3jIxAP5w2e8OTWDH0v3GG06m3IZNponXwijs2OGR4C3P
z98G1cefc8Jp7JgLaTpwWeA2JB8T14pMYcd4JgsGU5NvgcmVXueYp+xYFMeF
uZQMPwjJ4imOfc6Obbqiwlvr4ge5CyfW49LZMTeLSelZBT/YEveIRn7Jjn3Z
uFVe8Ysv1H6wLE/KY8dKScPXVWd9YJHjLldKPjs215WfwsR94IBxifH9QnZs
18HCo4/jfSBiaMe/h+/ZsZVV9hSarA8Af/PWZzg7di0h/oPiLW9452p4+c0v
duy5wIpvjaoX/Hsf+DqrkR07H6Ha0c/vBQLEnLnsJnaM5bTJ0Wn6Jng+4I7O
a2PHypw0eEte3oQj1bVvi3rZMZmNG1IvCd+EF6Kn2PFpdP8I67E3Qp5A+62S
0bSNiM1yhym08d+A5b+NhQV8ROz+b1agybA72M64fKLwE7HtB+VslzLdQYH3
Wa/RTiKmy5peJEi5w2+DjXt+iBCxczbn4ukH3UDtvzTpLDEitq9VQezs+HVI
c9VQuSdOxPY4RmEd2dfBM+aG+bkDRGx3oaxlidx14Ktrj/9yhIj5buPff0nd
FfzaPR+nHyViKXo1dk/WXKBveEt2mDwRW7a5HSf6yQXecp2sw5SI2MAnMuGt
rgvs2tHZJqpCxNyNrjdt5XOBkP3eQ2uqRCzxoypzvd0ZjE+/Jn7UIGJsXPlq
z687Q4nZqe2PNInYgse8pbGaM4hd6xbzx4jYHV6LetpGZ6CH8mkeP03Ehgu+
fWh77QQJ+C2/Yj0ixlOtmm6+7ggL9fxRiQZEjPHse3hmuyPY9OQk3TRC+x99
XRlb6Aiyq38L5M2IWEW6m9kON0dI3hJQxXueiFX1c8mUGjjC2t4dDdMWRMyR
gyy0JOsI9Wq6kzlWRCxcUXCvywIJlHUHWbHWRCws7lnGky4SPLEM2uxqQ8QU
Mzhlb30hAZfTrt16V4jY9UyJnOUcErj5FUjJ2BKxC29/7pV4QILWKH3lTXZE
TKLXw332Dgk0U4ZOj9gTsbittemOXiTIzAwxqyERsacPvhfdsSPB1nd7bDOd
iJhHCilZx4IEXl+LbtxxIWLvt0prF+mQoKvZMNjuOhF7QrxY9lWTBKcHR+JO
uROxo/KJU4FKJMieC3sk7kHE1n7EdHUdIaF8FM5iu0nE6G+d/PulSBCw/f2H
Pi8i5lph8iVeggSD+0xqcR90358jb/+KkUBffrz1iR8RM8zgO50oSoIi7M6/
wNtEbMwotqdMhARCxqIM6wAUb/foKTnEEZc/sGsEEbG3S8cfLgqTYMLNjG9v
CBHNG3ld29D/5kGTosuhRGxqXCH/FuLyuCjZjnAi9oxLgF8J7S/5eN+JkjtE
bO7a89WT6PyY7DK9lCgixv/voOuzfSSIfD7m9uQuEfuT91PWD903LHk3NSMG
2cf/82nefhIExpwrzo4jYrdn2N6flSaBX4hve2ECEbPKVXI/cQj5zzuTVUoh
YkZu1lU0WRK4O7eIfKKhePifztRRIIHzZQ6tuiQithK4qchamQQO5sfsG1KI
GC03caxajQRXdWyj2x4QsVJ3Y5sIIIG1JiWrJ5WIRezd0rV4igQXj1XW/3tM
xKRucN9I1iaBmfT0zMRTlM8ywmqXdUlgKCwiyHiO6uEbD2aqTwLd7QaqrHRU
j4XXo9wNSHBmQ8Al9kwiViBxb8d7xNjKm6BNr4iYz4kzDGnE6jMdz3nfELHP
+0KkvuqhfBza+HVnNhGbmNn7Pgblg0KnyohILhE7+2vpdcBZEhxpcOA+8JaI
SXcuc93XIoH01yTZIwVEbEiZ0NJ9Avm79IuJYhER++vksddQlQSieXNe6u+I
mBzl8uCIPAn2vBC/r1VCxHgdIxVzZUgg+MCkTKcU2RcmueOJOAl440N6jMuJ
mGSFRkjtbhJs8OuRvFxJxJqfrK7PcJGAofcw378W1d+rHk+eHgeYxuqaw74R
scH2E9dkmhxgTIm5ePcHEYslVtLZah3gr6iF5v0GInbmnf7CwFsHqJ/j+17U
TsSyI3TTvIIdoG4Emyr7Q8Sunt6p7ebpAF+63fk+dxGxtrTztRL2DlD5+4ni
tx4i9uusjdyHCw5QVvPzQmMf0r9zMR4Keg7wrnzldns/EatO7RT8DA5QkH/o
Se8gqr/TZ3a5KDlATqZV1dAQEUs/f8BL5rADvEq9Ozg5QsSWpmsk2SQdIJ1c
smF+DJ1/69n+aSEHeHJnWGZlgojZxe33ZOxwgIe3dxgSp4kYQXqFk2+7AyS5
n/HYPEPExO9VjJ3hcQCynVci3xy6z0U9AoXbAWIt09/vmkfnGfoaz21ygCjD
339EF4nYJsWjba6Iw06xrR1YImJmEfcTVhEHqsrtk2Uh/WE74puBvvc7cvm0
0ioRq3t6imyH9vcSjydprKN6an138xQ6333nx3un2Diw158Laq/sdADnLRM5
ukQO7I3VVQ9tEQdwYNvbaMLJgfV9WE3mkXKAqws6jIsbOLCDaXT1d/IOYD3u
t/PKJg7M2iXNVlPTATg4fb78x82BmX3Xibys7wDZIjc9Lm3lwOiiai1G1g5g
rnpDxHIbB5Z75b3JNjcHYJlc/27Bx4GVW3KsPQ51gDQXZz9zfg7M1ce2i5Xs
ALp3SPtNBTmwi6vbp6Vzkf9KrgYb7ObA/uo5l9L/OoDWb5vDens5sDPsCb4x
ayhfxi91nBPmwC59ZvOcFyLBcVGLY6f3cWCxnf8dVr1Mgj5Vs76TEhzY9Dc1
59kwEkSbGsfBfg5s9O22zt8vSdB+R3dY7SAHpux4TuwXgwQhT7UTVQ9xYEs/
JtLGhRxB+sPpk8pHODDJuGR7obOO4DuhmSovz4GF7pjOKk11hB1mx4ykj3Ng
nboP0sfNnMBMTOi9oA4H9upKoLchwxmWj++249fjwP5zNjEbPOgCaWY7+PgM
OLBFn3XHk5ddYDaS12WLCQf2p1hBw6TOBciTHKJESw6sp7fXv+ahK9SXTkbS
HTmwJ00j6dLH3ED3PG7xPZoDe8n+Nb0h4wYcOiZVm3mPA6vNDFf7UH4DtvAl
HA+L5cBs7i9bDjTdgJ8/bISOkzmwkiDP2FV2D9Rf1/5mpnBg+nkR/6u4yuN6
6L4wamZa9KXQgpBCJWnTgpzTgpBEqeRFkixRSWa+M1+Kkkq2iiJJQtKbpETI
0qJFqz2lhJDQHhWvfvf35/OZe8895zzPc++ZX3Zeu2C1seXOkFRpdC25/83E
OAA8FO+FWhRLoxDQpRfduxusOqb2jS2RRjXd7K3JioEwteqwd2cp0UPzOvlK
/UD4GOG+5EqFNDo8cd0o3hYI3sMGReOeSyMrM9FuUlMg+HSYJ3S+l0bd8Esa
P+/tAfuqZPnKj4S/zoq3Ca/2gN6/MvuufJLG/oamquFde6Ddu27D+q8kvpb8
RuVpLPg3cdMqO6Vxmq/vZtvDLLBVt7KuDEljaGrHnu3WHLSdyDH9dziFj1x4
E/c1HKx3zsrPlKLw6NjdYdV+HCxquFqWy1CY73FcbeFZDpS/JjYXjaJQy99M
a8t3Dg5nnPEuVaTQLKDt3v4hDv76xX1/MobCU2stY0yUxPD55/H+pypkvRaj
EmkqhtvSoaObJ1PY4vLbt0kQg15ZcNxHDQob445aKESJITlq78QvmhQaLn/6
9l2CGCKUWO32GRT+tWDT/e+IwW3KNvwzm8KaWZElVt1i6J+3wl8VKdT72mSU
spaHHUPLfk6wplDu6slelW08NBfa7Z1sS2HFakWZFJaHsiXWEdPtKDzhEP6p
O5qHM65zkk0cKZTUPrUOL+dBNMFouvkqCl+2zChLes1DSJN+xjxnCrO0Oa8n
n3jYvlk7z9qNQh9OflLbcAHm7p5Q6+hBzrv3R0rNVIBMU1UXZ08KVyon0Qut
BZg6OPatqxeF1l0QruIggNwBUev6rRRmztr087qXAEG28r6e2ykcOBjTtMdP
gG5GpnfzDgorXQv73/MC1B8bPmynP4WmD3S7rx0VwGHV3zD/AArl4/89rEDm
/cJxv+UDA0l/ZreHjUkWwPTNr2iOpfB6nH3zwzQB0hN7VSRiCuc+U984/IYA
kzy6zgUJFPrZ1c5JyBMgRrNdM2QvWT9w9gD/UAD6S9vVsCAKQ5VTbc8/FkCS
/mV25H4K372ZGCxfIYC20QphewiFeZ5rxwbWCPDqzq3iZQdJPefteuc+FyDU
atKoWYcoFHZfn+zxSgCD8rA1oggKy/2i4z7WCdDo+ONiRySFiSfb3R7XC3C4
zrm9NorC7vcl3tRbAcw88s2zj/6//vGPLhLc8kUzNPY4hbo/W72SCY72i6oK
jCb13zda/btBgAW/ulVcYin0z/h14iaJ9y3I3dPsFIVuxWaqleS803Rhhmo8
hcXSPW1WJJ+Fx3R+DZymMGenjqwyybd7XLRVQwKFdzWSrB1IPefP9UflJ1LY
NMzz/tATAeynebw6l0Rh4cj0CzNLBBjIKJ0SnExhgapF29NHAqSazPbxSCF6
KS89031XAKf8uFyrSxRaJo3KOXpTgGG2f4emppL+j31ifvGaANcqNi+VTqMw
Zio3yzhVAHenqpOfrlLoW7Am1jJJgJueiTpp1ygsfV2dX3BEgI1tUoGR1ym0
l90eNi9UAFGAz4PtN4hf4vvKZhN9bD0w12lWLoVjwKY8fJMA42RTzoluU/hn
8anD31yJPk7ItnbkUagTd7emfJkA6sl1e7PzKRxtYbRMyUiAJzOwNPYBha2u
/oLKNAHE168o7nlEobhvmLm9qgDPHrCpZsWEr3k+zrZDPBxqHFubX0FhxGG5
p741PBhv3js+qYrCD/vCDTqLiN++f/QKrqFwk4GX/IU8Hub+yR6wek7hzoO3
daJTeGgfv1KztJ5CEXujOF3Mw9mUvJ1pbyncuEAm/4ovD3a6U/IimyjcV3C8
stGLh74b4SN8msn91LLn2AHi7xSLDnv7DxQeaRu0T1vFw4oCl/hZLcSPDpXG
q5by8MfuwXvRZwrHJ/pgsDUPLm5H2adfSX62v3o8TXiQau59lP2NwkmZsz3V
9HnI2vKP/MkfFD43aGlbpc3Duo6i1Xs6KCxSlI8apcmDHDcz2aWL5NfgBSsm
8XD7b0ybWQ+FQwmx0krjefA6NGii1kdhzzqL167KPCiJPIMHf1J4xfFgzpQx
PDw8VV7e0E/hhLm9pjtG86BqPXQuZ5DCuLL3YTYiHgLaTQKi/lD4QDtlfvxI
HioTti/a9JfCTjf9V97yPExfnDx+3jAao3OaV96Q42F/z8t2pRE0HjBbeGAy
wW/Oyxe1SdG49dJLkb8sD0b2VvGFFI1dGyKCUmR4ONLP+iQwNGanHq26xfDw
+VIGBMjS+FB91EAGzQOs/DBmqTyNhomKfw9SPJz+T6VVQ4HGQyOi3yyQ5qH7
6vL8ARGNxqcdJfUjeLB3CT3xdDSNTqNcu1yH83B5xB2vq0o0Bpkssrw9RO7n
tVoKa5RpfH3WV3/CHzFkM+7vDVRpHNlXVDl5UAzyN4/nyoynccCI1qX7xeDl
8TiyeQKNRhES6+o+MTwY+XtdnjqNy2ZsVxL3iEH1joHRick01lurxkl1iWHX
Zm96qwaNd1lA/3YxPFFMrAdNGtX9Om9f/iYGrQdPM1Wm0Xh4Zor9wlYxBG1n
Qjum07gnL2CHTYsYXitbupZq03i2z0k5+Z0YDIoCZp7XJf3S37Jkbb0YDvul
DbF6NHbEtErveSGGlglNzx30aVSwH2b3o0oMlmVj0qYb0Pg8REGpuEQMnVOC
HV8Z0yiqCjA/eksMS6tuamXOobH55r3Y4GtiuMi39YeZ0ah9oHB37UUxuDxb
fWHOPBrXZ/1edfSYGLKCovYoWNKobzX14UCIGGRnFiz5tIDG8PkvM4tZMeSH
6nWftCbYVtWc/UcMygaeJTtsacxvlBHWO4jB7218gu0iGi27i9XegximzpGy
6V1Co4/q2VjLqeT9/Pwm1mkljW0lI+OcWjj4EDNq60wnGq95hRy0f8HBPFg4
X2o1jWcKTeYrFHPQHp/Vku1Go3xEnuhzCgfOS8LnKHnQOLRbO7BvHQeZffmy
bRtp3HfXr1nPngMmpbuxYBONufurtPTmcnB3cN2hXVtotInPnnFrHAdjr8S6
L9lGY/CYMcOlpDnY6VSur+FDY8ldEMv0sDAlw+R1rS/Rl9HNc7Oes6CwYOhh
rT/RT/oXNaUiFgZrytNqA2jc/XlzRXkOC182noyuDaSxXWFqtvNlFl70rBdq
WcJvvE51djwLBWE6m2rFxA+B9ye3kHknU6V3Wa1A4zDj7tTWIBbC50Wq1wYR
PuLbXH22sRBY5UTX7if+oHeGfN3AgseGSR01IaR/y3Jb5rqysLyr9XXNQRqv
yrYFbVjBwtzQnEc1h2gM0x62ytWOhRnjgq7WRNAYEGaZqGHNknrtYmoO0/ji
xuPW3PksDLcYI6k5QuPEnDeDCuYstD9p3FRzjMbWmIsPdExYaPgnzb7mBNHD
NAtDWUMWytoD5tTEEL83Xl+Roc9C7n7LSTUnaTS7bqg6ZhYLKUoyTE0cydey
JdxSj4Xjl551VJ8m3w3Kzs4keK/pubrqBBp/z2pybCR4W9mWgupE4q+m6ZdW
kXgu7kbp1Uk0KrWmxEQZsGDz/U9MdTKN1d2r1CKMWTAIKpVUp9CYeNlsjp0Z
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
0xNmkvzubkhQDvvGoCWX7v2uXQL/A9gSzz8=
          "]]}, Annotation[#, "Charting`Private`Tag$42525#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUV3c81e8XRxFKUWh8ZZYKKbJCHaTsLYrILjMjK9xF9s5MMioqoRQl8VQy
kmRl773nde81+31+f93X+/W5zznvs88RsLlnaM9AR0cXw0RH9//fMKnh6oe6
GcC0KD8z/4MdvbZt8KpRfAKvLyvt2X3tIGpMfC/EKJoJHwPDe5VrDyH25YfB
IXuyIMyRtVzqBzdqNEnOUbbKgXmyZMTxch5kfEjeWunoCzgSPpQrXHYCjb8W
v2gV/wKEXnJNO8aeRD4qQhyEPXkweQtpJjkKozSPfd/QWh70LF9VyD59GvX9
GeCH1pfwlsi6Gv5TFNlFBw9dinoDMrLiP4nfJdCakN8nC4ZCCH1+1XNJRRKF
VrjEB/kXQoTTiubVH5Lo5cx1pco7RZDEA1/IPy8gnxOc+ryCb8F7jHTOaVga
fSZNFGfuvAOljbjBBCl5RGoayjgrXwKWO6c99arkkdax3rBK7xLgYBj6FK+m
gPre/bndP1cCZYhT/+kNRbQz9OnA8d738Pv3L5Hx+5eRCkTde/KxFO4LGTSd
1lRGvpcEF8RppcBy/1Xjnjhl9Eah3OWbXBkE29tbdbYqI265SceJ8jKgumbJ
qZuqoOnzV+zOf/kIldpjCu5GV1C84OaNH1/LgUFdQ/7fkauohj+x04T+M9iO
TheU6lxFG7xnTKaVP8MLzndm/KSryO4/U6P91Z+h8HnTJOPMVSTH+V7nRk0F
PDQ9sMpedg0NMjqrzP2sBPU1Mx1+UEecuxm+4VirYG/1akO1mzpSZ0gHDq0q
KA39fXk6Ux2V7NQqyjRWgbN3ne3jDXUUShWUJTQh2LwdVZhUqIFS789zRU5/
hd50hcVf65qoZFXuehvLN+C4/fQhmV8LNXqGJPGIfIPs9D21uWpaiM7jv0PF
Tt/gYdWHNzOPtJCTqwZ7++w3uCi5xpt4WhtddnjByrvwHYgXEHFTWQdNnc6M
v7KvGuqUGvo9rHVQ4mwSt6NINXQb5DBmEXTQpHuI4AeHahC9fOjOzlfs+4XA
l90h1dDzt40/eVQHKVK8xP/lVsMnBnqj1j26KD7AVl5zsBrKXfS24boukr9s
/vXedjV8eG5q647TRWN0RteS//sBW5Ljx9Ve6SK5UBXDIdMfYKtn6TK5Sw8N
xws4+TT/gIqYD64rjXoo2ujoUsbCD/hlvKP4ml4fyXBz+HzbVwPqJ6fUi47r
o8gMOtI+jRq4+i7k/rkb+kjKkrZH8k4NGIRsPar00UcD/Esxpg9roC3R6pRN
ij6SzBtMz/1WAxTU6b2vWx/13e3kqx+sAX9mF7GDW/ooVPTPi/ntGrgz/hDk
+A1Q79uqd3LyteA8luM+7myAQioyfzaV1MLCnMqHanZDJI5L1iM310Jj+evd
jYqGqEsp5u/RxVrgaLR8QnY0RGK1gcN2onUg68ORmldniP42m69vPKuD74Eh
F0PjjRDhkRGe/3sdOPymvQ6tMUIiJlqM14bq4L5JoGnuphHC9cpzJPDUA93s
C1NRZ2MkPHH0zKnkengWz/462PQ6an7JUaz9vh4EBimvLJKvowfOLNKeLfWg
6uD5x7D9OvqzRFOqZPsJG8MchNjrJshvs/OGUehPaMrijdK2N0U/2VPC8b4N
cOjYRyIp7yaS53UvYEtugMEHh65vLtxEb0Q1mzJKGoD1MFWvXdYMxV7bOfRp
vgEeO9x9n9dghowDHbKWbH/BrDBppZFsjoYmZcqs9Rthn8mrflddS2S4xt69
6NoIe9tYHtmnWqJqhtnNoKhGsH2+R75q0BLlHc9SflzbCKdkO8wS3W4jZ6M9
v1sVf0NsMuecjYoVolR1jl450wSry7ZWRzWs0d3Gd0yt15rA7cryGtdda9Td
HXXGyq4JlET29KSEWqMvZLgXmNUEEvU10Se/WyOiyMuND1x/IFfJIsnngg1a
kSUdv3LhD/idtL2WoGuD7K7eUmrR/wP9hf37xRxt0DUr9tD5qD8gfWIl9t8T
G8Sk9YX5EH0zXPTaMe3ZsUHI4MyxngPNoCpMCD/JbYv8bqSI5vA2g49Z4hXG
s7Zo2t5d95xiM4zXVF0PvmmLGgknkrR8m+ExHVuLf6EtCglLeHEwtBkEl7oT
nb/ZokuxO2XdSZi81VdnV9ptUVFGV/edkmZ4pSA3X7lhixLKovlC5ptBQCPL
VVfZDo1NZ/+N2m4G7s21l+pGdkjueGnUI7YWiCzV3f3Dzg4NBfdTc8+2QJfr
y6ELoXZI6uNy4etLLXDuvRyvUIodCp9htCvRaQGqDTEo6oUdOm8g3vzNtQWq
HXJz6r7boZAQldCfQS3wvv6XQ0azHer6aKLYEtMCU7UWulP9dgjPi385VNgC
j2ZOhc5T7FCrwSPLqcoW8NV/0vGCwR4JP8znXPrdgvWj/VqdbPaoafYP4d98
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
IBD9EM01a1qgQH6529tL5oGoNl37+jkqFVoOruO91gtEx7O8rVfyU2H4v9Xl
ByUD0eyV12Uay6jwjPXE60QrG2UwPH4IrKDCqIGhQ0gDG6n7Eiv7pajQd+LC
+ohnbOSltSkhS4YKdGvC62kZG9Gzm2sCZcn1A8uezRex0RWKz5SxPBVkR1wf
/cpjo7Y3OU7/FKmQGiGy0vUsGwVt1DnfpkSF3dvv3ug6xUaCWe8a7qyjgnYB
9Xl7NBsZuC3Sct1AhRSxFWX7vNioty7PV0+dCqb35OLb7NkoUnXrVXENKug+
Epxq38tGZX8DBV5pkecrq6e5bmYjcyeBHbnaVIja8KR2UImNBl8UHInQpcKV
5s7zEyvYSCa1s2/dNioMqtUJi/4LQNXToUsZQAXrh6b263sC0H47YfOe7VTY
1g/9JjUBKGXNzoepO6kQs2P8a0BkAFJO+jzqvYsKbCuPdqsDAejlrwh5/d1U
uLBtVo+qGYDmq0vOTJtSob6c36JmwB/5WC31sLWmgvFym8ly8EfMh2WXNGyo
MIm1kobF/NHVlWYtAgeo8LBXJP/n98OoffDYFmxHhSSlTVOb4w4jw5hhUXk3
KshfuRITXemHZG/X4J+BVDjWrXJKZ9QH1YgenK4NpkLFg3/Tf+/6oIPhk8q5
oVR4/qvRYGmoD0rVX5thGUEFje9fTvv/9UYLn876PYihQjXbffLYrBfqYB5a
duwMFapk4PijLx6IzzLd7fhZKtivN9HNzfRA2pef3449RwVlUav+/WYeKEND
dkdcJhWyvzkpQ+UhZOH82SfxChUETITrpxLdUd3Dg9Xn71DhvsmWVsF1rui+
n7lTUTMV3B8431HMtkXnWjdff/cfDZYZzOk3luqg2S8t5WUiNCgxH3rgZ70Z
uf7yfXZWjEa+Lwek5f5qoo3CuZ/3SNLglgilXnWXGmo1W7T8zUoaaAyyz861
rUAi9e0pL9bTwI9G7btWuwafwRHh90xocNsnJL/wnSH+3SR2Kt2MBpU1n8yT
m3dhx57b54P30OCKv7b9yzojrPrvS5m6FQ1KuzQebCg3xk26xj9v29JA8afw
Fyu2ORa8v9y1wJsGl1cU66Z+s8SJxY9MMk/RYMyzr056hy2Ouzrkn5NAg16x
G8OsN7b4eMaytOuJNAgqXydVuN8Oh8ccaS8/Q4OyV9qYP8Qee1hrHHqbSQN0
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
EieHWbCgF3jYgcT/A1iFux0=
          "]]}, Annotation[#, "Charting`Private`Tag$42525#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUmXc81d8fxy8XURKlkuxUSLL31/uTVEYoJA2SsmVllZkt6w5XpaEQCiGy
kluRVQlZZW8ywjWueX/n95fH83HO/Zzzfr9f73EeRG3cTGyZcTjcLVYc7v9/
oxQHqyOMnkDC5a3SF8v7qW9uNt75qvkUrBaz5i3P8FO/k4oOsR57Bonr5KSf
TwSo3PMRYeHbUuHTf4HVEzki1O/mlJcnrV+C9DX44xlzmGq2R/0GduAVfBrC
XW2knKCOvpFRsya8gsD9NtMZrrJUH+1DPCHbMmHIa6cT1x456iMPzs/UpUw4
y6em2G8pT+352ScCrdlgo+kk6LeuSL0VFzbwX2wuPLhP2jnhoU5dOuRXZsmc
B16iFc+zJDWokR9cCIF38+CCYEmS3LAGNfvvReyj/VuYvY0v1b/2H9VHnPe8
kFgBsMlVT+spYNSK0LH8Z1uFQInV/rVy+xRVG2Ldnpa+Bz19QaXKbH2q739i
szL096AkSPttI2tAzdUod/msWgJ6/r1Rz8sNqPtUxx3Hyktg/9yhzbbmc9RJ
2VO3ZCtL4bmXnIzWbmMqQWzdouZTOZw0+3s/Yu4CtZ/VWXu64SN85iuYDL9x
iapl92q70OwX6LrzQJLZ/Qa1gTs5Oti3EcaOnlQh3HShEkvihMNnmkHdq9kz
94AXdWTyRXvsZjNcKnpdsUvJi6oq+D6WvLMFXGU62j+c96IOhPWupB1vge/r
H++1RHtRZS/INH++3QKrslMP+Na9qE1TP0MYMy0Qtf7uMm3cm7pddM/QvdlW
WBO3fXrmty/Vyuzoo9CtVkiWCkrvo/tS30VpGD3g+gVrux7/Cefzo16evVnx
WOYXJJ64WrZ+yY+a/aGYVOb6CzTXnKQ62v2oZ83NTy3P/gJTAmfn+fq71JQY
p9XNrV9wOl5S98voXepsZVA+66422PfOUIsZf4+afCjr4N4TbfAQZCpmNO9R
x+ZWaApubfCXT/Duct49anjs4wyPf23g13voc1SIP/XFAD7IfqsNlF9E6Fc8
9Kd+UHK9ZLmzHb7bnyhNf+tPXejX3q53rB2kQq3Vn3T7U28oTruJ2LdDeN2D
TQX5AKpWr5bGz752wH2N4ItvD6BekX/N+3WmHSYOXvIQngyg+kTtma3YaIeb
VgnP728EUPPkJl5k8ndA47BDT55YIFUgksgWZN4B1U8Vw3+5BFJXZUZapJs6
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
aG0i83mn6mT7mSS+zh/Xckw5yGQcOrTliL0ZYs216ziYmHU+e4ICjddvxAkq
jAl/zk+D22fTqP13J5uCHBRM+umYo0jjSHL+8/2GhK9cbd0L82g8M83cXXIN
B8dc3egDyjRmQ3L12VUclE+LaQYVGvM6+ZFNKzhQLahLn6VGY32d7tSLyzjw
PsT496vTKPslPvWWFgcNM9fali6kUcmxyFlxMQfaJZ6L4zSIvbAe3SE1DkKO
pPzlLaFxT1qKoroSB12z215u0aTRZ+neubnyHKwtm56irk2jg8ZL3TsyHAwo
+WyrX0bj+IuZ59LGc7CpKks1XY9GufDPNY9G+ZDI9f44s5LGs8HmihoDfLB5
seOGngGNl9UaXFRa+JDhHXpi8loaSzNKy9Jr+CC5+PHG94Y0Sjc+1o4q4UOe
/5KhS8Y0Ov2yWhCayoeZ2nufHV5HI36Y5nDpGh+OtEZGrzOlcftPw6X65/gw
X0/cZHgj4XOBp2XDEfL9/NAUYbWdxnvXwwqP6/KhM3zKgcVWNNbsqfQLm88H
A1i/RnwHjeEJ1erHZPjQF5nRlWlHo+OVTfJhgyxYbwzUk3Gm0bVybqf6XRbS
v+VJ9u6hUcuP9973GgtMwtCbx/toVG5yak4IZuG/MceAY/tpDPivhOfpyoLs
rQiHjQdpvBP7safDioV/rJ5rKrvT+D408J6kCQtKacsbaj1otP0Red1ThYXJ
hn8La48S/2ssXYTTWRireZ5S60ljo6MeYyvBQveeSxdrvWhc8HZ2ADXCg1df
nQS1PBpVnL++DfjIg8dnFu2r5dNYkHxkeksLD9JnDW+uFdD4Y8xUaXwtDwIN
ghVrvQm/T1RLyv7jgVeVFV3rS2ODso7dgXs8cN49t7/Gj8b+baZPmlN4YDH4
saHmNI1GWywZpRs8WO1/v6gmgMbXM5WU9aN5sGCGd2pNEI2brAMs51/ikXzN
wmtCaLz5lGdRH8YDsVXThTVnacy9ubDfIoTsZ+Vv9tWEkX7V11MKDuBBy64U
85oLhJ+IsKZAfx6U9Xnq1YTTeC5fWnbTKR5k+66dW3OJxl3azuU1PjxIkJnA
1Fyh8e6K2mE5gs8nveivvkqjQmBlqBrBohWxjdXRNBo0Fgd+I/hg2f7H1TE0
prQrdQQRezYOurerr9M4amN94S3xZ/L5V3h1PI1lg+XnRkk82t6lwuoEGtP2
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
W7IgTm2xCP7bHT3zzCcGXSJ58ckkn/8Br4LQTw==
          "]]}, Annotation[#, "Charting`Private`Tag$42525#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
DkoEOG1JyRZA5fZMqcghos+Cg10bSD7/B+qOeI8=
          "]]}, Annotation[#, "Charting`Private`Tag$42525#9"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
S8I+3XScjRlPu6cLSFz4YVxot/4XG7+c/CR7ksaFlwUcjZofbLzzzMewFkEu
JLrddvD6xMayJ5p3Zq3kQrKW7QftV2zck/nuxKG1XGDelyTplbPxtd7GZJH1
XLh7rX/S9hlRXw71Y4GbubCR6qeSncPG8/tePbDQ4MJytWNy48ls/Cyh6gNN
mwsV73Qyjsez8bl3ldQy4MIRT9MfA9FsPGj04siGvVwoXqXfIR5K1H9UaVyX
MReKgtnhVf5s7Fjz/EW8ORcsbrryA7zZuA0VS87t58I/dtbCilNsHB9aaPD4
IBeGdzvnKh5nY6PyfO9jjlwY0audzz3CxrR/j+9IHeXCs1leUswhNsY7H71v
Ok7o9x3yqjvAxoG+uVyOKxeWChvcdLVh4x1FD7doeHDBJqd6mZsVG4+PPzg4
4skFXVXJzkZzNs7dnhWV6c2FuMTfvxJM2fjSznc9D85zoYU7kp9kzMZn0N8d
j4KI/Q6Twwyi3y2N1sYVhnEhIFwmfWQvG6vs29P/PJwLkFZeu4dg8UNntCqi
uPBfm80ZMYL/HktNehXLBbGpyBRLgjs9Kn++ucwFl+yr2mRDNi7zHUBNyVxg
Dye5biDuTw8VTmu9ygXyjWLxMuL90Cj1sY83CL/EaQ2VRHxOCYf3fLnNhc+t
BXijBRvrXLtw8/tdLrTXWET9JvStz3w8NfiACyu3ovXL9hN+5XaYjORyobfc
NumaHRsPFPEyJ59wIT3PrSvMgY3ryjf9myki/JHIL2hxYuOcGnMr7nMu6Elw
7gedIPx455dNKeeC9fTdILYb4cfHW3xmFReyErMUBz3Z2KK31laomguXao++
zvNlY6Wfo4/E6gg/Sso0WoPYWGxyOV2qkQvzF1MTD3DYuIN6smh9O/F+Lmua
ncDGJUsuL5bv5MKfoM00uTQ2vi7x/Oi2bi4cvFnE3ZJB1IscU0SjnwszUO/+
NJ+N+40feJhNccFtudeVk83EfLR+/3rfLBfGlgaeoHeycbbDzEq7BS7wbhc8
Df/Kxu5n9tY703jwqSKsdd0oG5ue95RxFeBBiSsvXWeajbezrp4/vYQHx0qC
+3QW2HgycXCjvzgPzk8U9PYt4uD260tDQqR4cP9s7ZVIEQ5+dndnO2c1D+69
PvGaKcnBaXlHtkTL8ODz1Rd73Ij5FvA0ihO3gQfSpxcl3STmi33lk64keR6Q
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
baioSkPtj6O6flVFQq30rumtO2hokYXQCKk6Es7sUs9U2ElDpLGfu8/VRsJy
a1UL+V00VBK/5r12XSRUeigtbNSiIZXt2TeP1UfCiQvbHsr+R5w/K5L7g+Al
GQq264CGFE4ZCL0muLhUjiqtQ0PGvu/b5onzDm0b8lfr0dD7yG0CCW8I/0fW
Oa40oCF6XGKtTw3hP0N6sdReGqJe++Lr8CoSrGVWP5cwoiFuZes11cpI+Ldr
xfFlJjT0pMFS8R+hL9N6uaioGQ25zA1o5hdGgvHpZZXCFjT0ezC+an9uJExe
EHFfYkVDTZ6HXg9nEvnLEJJabE1Ddve793oSfuuULa5h7qehV845+/riI2Go
jelFP0BDOzkOQ3vCIyFhhCZNPUhD375cFLpO5FODSWkkHaKhKYum2m5XIp8y
fH+eAw3dLXwhtdQ+EhRt5lrnnGjoeuF8mu6uSOg4/TdsxpmG9GghzXpykRAa
9Wfr9HEa+rFMNkRNPBLelY1cGHcl/Lh6aJY7HAF+7cOqo2401Jck/d90ewSs
HR3s/eVBQ6dEHZ3nKyLg9LrvmoNnaWj8lpyjWlwEiGt9Hez3oqGrOvs1T3pH
QLlNd8p3H0K/7lbmQ7sIWBLdMfrFn6i3Wp2wgzIRUHyn7cbnQMLf/vUqdRSi
H140G3YF0xAzd/67QX845I42ZLazaIg2/dbkzL1wMN6Pbd9G05BW2obyMyvC
YYuqXF3WRRqaLTFp5/3lwBLRy7s4l4h62ajXNdPGgabGw6t3JdBQeoDziXWX
OMQ8533LukpD0bJPl1tPs2G/6n+nOVk0lNSW2qOWywJ10fs9jtlEP1Y2yOwJ
Y8HysSWWu3JoyLqkyqp6Hws6c7pVxh/RkMNvV+nD42Fgvz541vEpDXWmqU64
BIWCk+iL8F3VNKRUYhJieDIIdMbWT4vX0lBNWzi7mRQE65suuoy/oaF3o533
z18LhL5oe6MHb4l6uet9WLYuAFxI/4Ql2oh+ztLMmFrrD+5jGtfHvxF+5xfk
5Lz2Ab+mZ/kP+DS0sU8+9YuoBwwnFKnnkunI6uI87ZySOxy2yS9/TKUjXk6E
wiFLN9jz+WHdUyYdBa3+KKua4grLf6b3vl5KR/WLN8/+23ICLuZdc3kjSuzX
f/+6fP9x4Hmm/m5YRkd7P1a4RYUfg4G/l2dbJOmI1q7bTBk7Cs9p4SK90nT0
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
Og==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$42525#10"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        RowBox[{"0.4000000000000057`", "\[InvisibleApplication]", 
          RowBox[{"(", "s", ")"}]}], TraditionalForm], 
       FormBox[
        RowBox[{"q", "(", "rad", ")"}], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.026666666666666665`, 2.99}, {-0.029537009256230397`, 
      0.06365428111618274}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"q1\"", "\"q2\"", "\"q3\"", "\"q4\"", "\"q5\"", "\"q6\"", "\"q7\"", 
       "\"q8\"", "\"q9\"", "\"q10\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7999306143494363`*^9, 3.7999306825402374`*^9, 
  3.799933441551406*^9, 3.799979706126646*^9, 3.799980541793641*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Right hand error", "Subsubsection",
 CellChangeTimes->{{3.7584440538903522`*^9, 3.7584440704590893`*^9}, {
   3.758517630794376*^9, 3.758517630794376*^9}, 3.7585180154418917`*^9, {
   3.799932927054405*^9, 3.7999329335715075`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ErrPOSsolr", "[", "time_", "]"}], " ", "=", " ", 
   RowBox[{"ePr", "[", 
    RowBox[{"time", ",", " ", 
     RowBox[{"qsolr", "[", "time", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6817951909469123`*^9, 3.6817951918969135`*^9}, {
   3.681795261985012*^9, 3.681795262225013*^9}, {3.7252759958163743`*^9, 
   3.725276022920084*^9}, 3.758517595825554*^9, {3.758517630796379*^9, 
   3.758517630796379*^9}, {3.799932939497407*^9, 3.799932993707328*^9}}],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"q\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", \\\"time\\\", \\\"]\\\"}], \\\"\
\[Equal]\\\", RowBox[{\\\"qpr\\\", \\\"[\\\", RowBox[{\\\"time\\\", \
\\\",\\\", RowBox[{\\\"q\\\", \\\"[\\\", \\\"time\\\", \\\"]\\\"}]}], \\\"]\\\
\"}]}], \\\",\\\", RowBox[{RowBox[{\\\"q\\\", \\\"[\\\", \
FractionBox[\\\"1\\\", \\\"samplerate\\\"], \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}]}]}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"",2,
   31,4,23101177906813387326,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7999797061496906`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ErrPOSsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"ErrPOSsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"ErrPOSsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"time", ",", " ", 
     RowBox[{"t0", "+", "0.01"}], ",", " ", 
     RowBox[{"tend", "-", "0.01"}]}], "}"}], ",", " ", 
   RowBox[{"PlotStyle", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", " ", "Blue", ",", " ", "Green"}], "}"}]}], ",", 
   " ", 
   RowBox[{"ImageSize", " ", "->", " ", "Large"}], ",", " ", 
   RowBox[{"PlotRange", " ", "->", " ", "All"}], ",", " ", 
   RowBox[{"TargetUnits", " ", "->", " ", 
    RowBox[{"{", " ", 
     RowBox[{"\"\<Seconds\>\"", ",", " ", "\"\<Meters\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"AxesLabel", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "[", "s", "]"}], ",", " ", 
      RowBox[{"ep", "[", "m", "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<ep(x)\>\"", ",", " ", "\"\<ep(y)\>\"", ",", " ", "\"\<ep(z)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6817943475327263`*^9, 3.681794355063737*^9}, {
   3.681794477554909*^9, 3.681794504248947*^9}, {3.681795265236017*^9, 
   3.681795270536024*^9}, {3.682355352744567*^9, 3.6823554355027122`*^9}, {
   3.682355485859601*^9, 3.682355492895213*^9}, {3.682355556293724*^9, 
   3.6823555599285307`*^9}, {3.682356089660661*^9, 3.682356095463872*^9}, {
   3.725271692932171*^9, 3.7252717149928355`*^9}, {3.7252760390439005`*^9, 
   3.725276044393941*^9}, 3.758517595825554*^9, {3.758517630798382*^9, 
   3.7585176307993937`*^9}, {3.7999329990613146`*^9, 3.799933019036232*^9}, {
   3.799934030578672*^9, 3.79993404331349*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Plot","plln",
   "\"Limiting value \\!\\(\\*RowBox[{RowBox[{\\\"0.01`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"+\\\", FractionBox[\\\"1\\\", \
\\\"samplerate\\\"]}]\\) in \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"time\\\", \
\\\",\\\", RowBox[{RowBox[{\\\"0.01`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\
\", FractionBox[\\\"1\\\", \\\"samplerate\\\"]}], \\\",\\\", RowBox[{RowBox[{\
\\\"-\\\", \\\"0.01`\\\"}], \\\"+\\\", \\\"tend\\\"}]}], \\\"}\\\"}]\\) is \
not a machine-sized real number.\"",2,32,5,23101177906813387326,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7999797070370183`*^9}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ErrPOSsolr", "[", "time", "]"}], "\[LeftDoubleBracket]", "1", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{"ErrPOSsolr", "[", "time", "]"}], "\[LeftDoubleBracket]", "2", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{"ErrPOSsolr", "[", "time", "]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"time", ",", 
     RowBox[{"t0", "+", "0.01`"}], ",", 
     RowBox[{"tend", "-", "0.01`"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Blue", ",", "Green"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"TargetUnits", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"Seconds\"\>", ",", "\<\"Meters\"\>"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "[", "s", "]"}], ",", 
      RowBox[{"ep", "[", "m", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"ep(x)\"\>", ",", "\<\"ep(y)\"\>", ",", "\<\"ep(z)\"\>"}], 
     "}"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.7585185532634525`*^9, 3.7585185992662697`*^9, 3.7585188237878294`*^9, 
   3.758519118373108*^9, 3.758519308329031*^9, 3.7585195117493286`*^9, 
   3.7585196226109447`*^9, 3.7585453009189754`*^9, 3.758545438925787*^9, 
   3.7585455469769506`*^9, 3.7585457522778664`*^9, {3.7999340417459793`*^9, 
   3.7999340558445616`*^9}, 3.7999797070600533`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ErrORsolr", "[", "time_", "]"}], " ", "=", " ", 
   RowBox[{"eOr", "[", 
    RowBox[{"time", ",", " ", 
     RowBox[{"qsolr", "[", "t", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.681795255964004*^9, 3.6817952578340063`*^9}, {
   3.725276057452697*^9, 3.7252760707155933`*^9}, 3.7585175958861685`*^9, {
   3.7585176308214164`*^9, 3.7585176308214164`*^9}, {3.7999330353514447`*^9, 
   3.7999330764925995`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"q\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", \\\"t\\\", \\\"]\\\"}], \\\"\
\[Equal]\\\", RowBox[{\\\"qpr\\\", \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
RowBox[{\\\"q\\\", \\\"[\\\", \\\"t\\\", \\\"]\\\"}]}], \\\"]\\\"}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"q\\\", \\\"[\\\", FractionBox[\\\"1\\\", \
\\\"samplerate\\\"], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\"}], \
\\\"}\\\"}]}]}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"",2,33,6,
   23101177906813387326,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.799934042167654*^9, 3.799979707285393*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ErrORsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"ErrORsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"ErrORsolr", "[", "time", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"time", ",", " ", 
     RowBox[{"t0", "+", "0.01"}], ",", " ", 
     RowBox[{"tend", "-", "0.01"}]}], "}"}], ",", " ", 
   RowBox[{"PlotStyle", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", " ", "Blue", ",", " ", "Green"}], "}"}]}], ",", 
   " ", 
   RowBox[{"ImageSize", " ", "->", " ", "Large"}], ",", " ", 
   RowBox[{"PlotRange", " ", "->", " ", "All"}], ",", " ", 
   RowBox[{"AxesLabel", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "[", "s", "]"}], ",", " ", 
      RowBox[{"eo", "[", "rad", "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<eo(x)\>\"", ",", " ", "\"\<eo(y)\>\"", ",", " ", "\"\<eo(z)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6817953070590754`*^9, 3.6817953132000847`*^9}, {
   3.68235566735032*^9, 3.6823556984255743`*^9}, {3.682356159377184*^9, 
   3.6823561666779966`*^9}, 3.7252717337834864`*^9, {3.725276081792498*^9, 
   3.7252760864665327`*^9}, 3.758517595887179*^9, {3.7585176308234196`*^9, 
   3.7585176308244314`*^9}, {3.7999330877326765`*^9, 
   3.7999331045464735`*^9}, {3.7999340840762167`*^9, 3.7999340943042803`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Plot","plln",
   "\"Limiting value \\!\\(\\*RowBox[{RowBox[{\\\"0.01`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"+\\\", FractionBox[\\\"1\\\", \
\\\"samplerate\\\"]}]\\) in \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"time\\\", \
\\\",\\\", RowBox[{RowBox[{\\\"0.01`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\
\", FractionBox[\\\"1\\\", \\\"samplerate\\\"]}], \\\",\\\", RowBox[{RowBox[{\
\\\"-\\\", \\\"0.01`\\\"}], \\\"+\\\", \\\"tend\\\"}]}], \\\"}\\\"}]\\) is \
not a machine-sized real number.\"",2,34,7,23101177906813387326,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7999797073585033`*^9}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ErrORsolr", "[", "time", "]"}], "\[LeftDoubleBracket]", "1", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{"ErrORsolr", "[", "time", "]"}], "\[LeftDoubleBracket]", "2", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{"ErrORsolr", "[", "time", "]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"time", ",", 
     RowBox[{"t0", "+", "0.01`"}], ",", 
     RowBox[{"tend", "-", "0.01`"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Blue", ",", "Green"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "[", "s", "]"}], ",", 
      RowBox[{"eo", "[", "rad", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"eo(x)\"\>", ",", "\<\"eo(y)\"\>", ",", "\<\"eo(z)\"\>"}], 
     "}"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.7585185551186266`*^9, 3.7585185996282587`*^9, 
  3.7585188241506944`*^9, 3.7585191186764364`*^9, 3.758519308717426*^9, 
  3.7585195120725317`*^9, 3.7585196232084465`*^9, 3.7585453040430613`*^9, 
  3.758545441424627*^9, 3.75854554719308*^9, 3.758545752478758*^9, 
  3.7999340438770075`*^9, 3.799979707381537*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Left hand", "Subsubsection",
 CellChangeTimes->{{3.799931916982396*^9, 3.799931926487735*^9}}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Risoluzione", " ", "Equazioni", " ", "Differenziali"}], ",", " ", 
    RowBox[{"con", " ", "Condizioni", " ", "Iniziali", " ", "date"}]}], 
   "*)"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"soll", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Equal", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"q", "[", "time", "]"}], ",", "time"}], "]"}], ",", 
          RowBox[{"qpl", "[", 
           RowBox[{"time", ",", 
            RowBox[{"q", "[", "time", "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"Equal", "[", 
         RowBox[{
          RowBox[{"q", "[", "t0", "]"}], ",", "q0"}], "]"}]}], "}"}], "]"}], 
     ",", "q", ",", 
     RowBox[{"{", 
      RowBox[{"time", ",", 
       RowBox[{"t0", "+", " ", "0.01"}], ",", 
       RowBox[{"tend", "-", " ", "0.01"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388485150683296*^9, 3.388485195636421*^9}, {
   3.388485412839546*^9, 3.388485425667671*^9}, {3.388485527573921*^9, 
   3.388485542511421*^9}, {3.388485583761421*^9, 3.388485588667671*^9}, {
   3.388485837362441*^9, 3.388485877409316*^9}, {3.38848687364633*^9, 
   3.3884869285057044`*^9}, {3.3884880517125616`*^9, 
   3.3884880819469366`*^9}, {3.388488418701748*^9, 3.388488436529873*^9}, {
   3.3884895251964703`*^9, 3.3884895254152203`*^9}, {3.3887477709132957`*^9, 
   3.3887477830394726`*^9}, {3.388748104301137*^9, 3.388748214630013*^9}, {
   3.3887482714330177`*^9, 3.3887482768164625`*^9}, {3.388750054648963*^9, 
   3.3887501125700607`*^9}, {3.388750200514627*^9, 3.388750204745802*^9}, {
   3.3887502580939493`*^9, 3.388750259341916*^9}, 3.669805013954338*^9, {
   3.669901869145849*^9, 3.6699018709866524`*^9}, 3.6699021731277466`*^9, 
   3.6699024170873766`*^9, 3.669902500180066*^9, {3.799927506220837*^9, 
   3.7999275087434263`*^9}, {3.799927542008089*^9, 3.799927568546587*^9}, {
   3.7999276805383396`*^9, 3.799927751527281*^9}, {3.7999289009932137`*^9, 
   3.799928914224619*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","ndsv",
   "\"Cannot find starting value for the variable \
\\!\\(\\*RowBox[{\\\"q\\\"}]\\).\"",2,36,8,23101177906813387326,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.799979707408588*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"qsoll", "[", "time_", "]"}], "=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"q", "[", "time", "]"}], "/.", 
    RowBox[{"soll", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.388750404220339*^9, 3.388750420039639*^9}, {
   3.3887504706037855`*^9, 3.3887504712033567`*^9}, {3.3887506575644755`*^9, 
   3.3887506792105513`*^9}, {3.388750730879119*^9, 3.388750732388788*^9}, 
   3.6698050201319485`*^9, {3.7999279255397797`*^9, 3.7999279381543274`*^9}, 
   3.799930487058312*^9}],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"q\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", \\\"time\\\", \\\"]\\\"}], \\\"\
\[Equal]\\\", RowBox[{\\\"qpl\\\", \\\"[\\\", RowBox[{\\\"time\\\", \
\\\",\\\", RowBox[{\\\"q\\\", \\\"[\\\", \\\"time\\\", \\\"]\\\"}]}], \\\"]\\\
\"}]}], \\\",\\\", RowBox[{RowBox[{\\\"q\\\", \\\"[\\\", \
FractionBox[\\\"1\\\", \\\"samplerate\\\"], \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}]}]}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"",2,
   37,9,23101177906813387326,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.799979707440627*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"q", "[", "time", "]"}], "/.", "\[VeryThinSpace]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["q", "\[Prime]",
       MultilineFunction->None], "[", "time", "]"}], "\[Equal]", 
     RowBox[{"qpl", "[", 
      RowBox[{"time", ",", 
       RowBox[{"q", "[", "time", "]"}]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"q", "[", 
      FractionBox["1", "samplerate"], "]"}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0"}], "}"}]}]}], "}"}]}]], "Output",
 CellChangeTimes->{3.7999797074436316`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "7", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "9", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "10", "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"time", ",", 
     RowBox[{"t0", "+", " ", "0.01"}], ",", 
     RowBox[{"tend", "-", " ", "0.01"}]}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "[", "s", "]"}], ",", " ", 
      RowBox[{"q", "[", "rad", "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q1\>\"", ",", " ", "\"\<q2\>\"", ",", " ", "\"\<q3\>\"", ",", " ", 
      "\"\<q4\>\"", ",", " ", "\"\<q5\>\"", ",", " ", "\"\<q6\>\"", ",", " ", 
      "\"\<q7\>\"", ",", " ", "\"\<q8\>\"", ",", " ", "\"\<q9\>\"", ",", " ", 
      "\"\<q10\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758443792821266*^9, 3.758443795038574*^9}, 
   3.7585175957573547`*^9, {3.758517630772461*^9, 3.7585176307729626`*^9}, {
   3.799930517891491*^9, 3.799930609091443*^9}, {3.7999306456064987`*^9, 
   3.7999306681464467`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Plot","plln",
   "\"Limiting value \\!\\(\\*RowBox[{RowBox[{\\\"0.01`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"+\\\", FractionBox[\\\"1\\\", \
\\\"samplerate\\\"]}]\\) in \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"time\\\", \
\\\",\\\", RowBox[{RowBox[{\\\"0.01`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\
\", FractionBox[\\\"1\\\", \\\"samplerate\\\"]}], \\\",\\\", RowBox[{RowBox[{\
\\\"-\\\", \\\"0.01`\\\"}], \\\"+\\\", \\\"tend\\\"}]}], \\\"}\\\"}]\\) is \
not a machine-sized real number.\"",2,38,10,23101177906813387326,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.799979707553809*^9}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "\[LeftDoubleBracket]", "1", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "\[LeftDoubleBracket]", "2", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "\[LeftDoubleBracket]", "4", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "\[LeftDoubleBracket]", "5", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "\[LeftDoubleBracket]", "6", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "\[LeftDoubleBracket]", "7", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "\[LeftDoubleBracket]", "8", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "\[LeftDoubleBracket]", "9", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{"qsoll", "[", "time", "]"}], "\[LeftDoubleBracket]", "10", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"time", ",", 
     RowBox[{"t0", "+", "0.01`"}], ",", 
     RowBox[{"tend", "-", "0.01`"}]}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "[", "s", "]"}], ",", 
      RowBox[{"q", "[", "rad", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"q1\"\>", ",", "\<\"q2\"\>", ",", "\<\"q3\"\>", 
      ",", "\<\"q4\"\>", ",", "\<\"q5\"\>", ",", "\<\"q6\"\>", 
      ",", "\<\"q7\"\>", ",", "\<\"q8\"\>", ",", "\<\"q9\"\>", 
      ",", "\<\"q10\"\>"}], "}"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.7999306143494363`*^9, 3.7999306825402374`*^9, 
  3.7999797075568137`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Left hand error", "Subsubsection",
 CellChangeTimes->{{3.7584440538903522`*^9, 3.7584440704590893`*^9}, {
   3.758517630794376*^9, 3.758517630794376*^9}, 3.7585180154418917`*^9, {
   3.799932927054405*^9, 3.7999329335715075`*^9}, {3.7999332248933783`*^9, 
   3.7999332258475437`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ErrPOSsoll", "[", "time_", "]"}], " ", "=", " ", 
   RowBox[{"ePl", "[", 
    RowBox[{"time", ",", " ", 
     RowBox[{"qsoll", "[", "time", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6817951909469123`*^9, 3.6817951918969135`*^9}, {
   3.681795261985012*^9, 3.681795262225013*^9}, {3.7252759958163743`*^9, 
   3.725276022920084*^9}, 3.758517595825554*^9, {3.758517630796379*^9, 
   3.758517630796379*^9}, {3.799932939497407*^9, 3.799932993707328*^9}, {
   3.799933228706691*^9, 3.79993323810767*^9}}],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"q\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", \\\"time\\\", \\\"]\\\"}], \\\"\
\[Equal]\\\", RowBox[{\\\"qpl\\\", \\\"[\\\", RowBox[{\\\"time\\\", \
\\\",\\\", RowBox[{\\\"q\\\", \\\"[\\\", \\\"time\\\", \\\"]\\\"}]}], \\\"]\\\
\"}]}], \\\",\\\", RowBox[{RowBox[{\\\"q\\\", \\\"[\\\", \
FractionBox[\\\"1\\\", \\\"samplerate\\\"], \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}]}]}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"",2,
   39,11,23101177906813387326,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.799979707576833*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ErrPOSsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"ErrPOSsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"ErrPOSsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"time", ",", " ", 
     RowBox[{"t0", "+", "0.01"}], ",", " ", 
     RowBox[{"tend", "-", "0.01"}]}], "}"}], ",", " ", 
   RowBox[{"PlotStyle", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", " ", "Blue", ",", " ", "Green"}], "}"}]}], ",", 
   " ", 
   RowBox[{"ImageSize", " ", "->", " ", "Large"}], ",", " ", 
   RowBox[{"PlotRange", " ", "->", " ", "All"}], ",", " ", 
   RowBox[{"TargetUnits", " ", "->", " ", 
    RowBox[{"{", " ", 
     RowBox[{"\"\<Seconds\>\"", ",", " ", "\"\<Meters\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"AxesLabel", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "[", "s", "]"}], ",", " ", 
      RowBox[{"ep", "[", "m", "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<ep(x)\>\"", ",", " ", "\"\<ep(y)\>\"", ",", " ", "\"\<ep(z)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6817943475327263`*^9, 3.681794355063737*^9}, {
   3.681794477554909*^9, 3.681794504248947*^9}, {3.681795265236017*^9, 
   3.681795270536024*^9}, {3.682355352744567*^9, 3.6823554355027122`*^9}, {
   3.682355485859601*^9, 3.682355492895213*^9}, {3.682355556293724*^9, 
   3.6823555599285307`*^9}, {3.682356089660661*^9, 3.682356095463872*^9}, {
   3.725271692932171*^9, 3.7252717149928355`*^9}, {3.7252760390439005`*^9, 
   3.725276044393941*^9}, 3.758517595825554*^9, {3.758517630798382*^9, 
   3.7585176307993937`*^9}, {3.7999329990613146`*^9, 3.799933019036232*^9}, {
   3.799933241478352*^9, 3.7999332475626726`*^9}, {3.799934102294941*^9, 
   3.7999341088578014`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Plot","plln",
   "\"Limiting value \\!\\(\\*RowBox[{RowBox[{\\\"0.01`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"+\\\", FractionBox[\\\"1\\\", \
\\\"samplerate\\\"]}]\\) in \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"time\\\", \
\\\",\\\", RowBox[{RowBox[{\\\"0.01`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\
\", FractionBox[\\\"1\\\", \\\"samplerate\\\"]}], \\\",\\\", RowBox[{RowBox[{\
\\\"-\\\", \\\"0.01`\\\"}], \\\"+\\\", \\\"tend\\\"}]}], \\\"}\\\"}]\\) is \
not a machine-sized real number.\"",2,40,12,23101177906813387326,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7999797076479397`*^9}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ErrPOSsoll", "[", "time", "]"}], "\[LeftDoubleBracket]", "1", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{"ErrPOSsoll", "[", "time", "]"}], "\[LeftDoubleBracket]", "2", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{"ErrPOSsoll", "[", "time", "]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"time", ",", 
     RowBox[{"t0", "+", "0.01`"}], ",", 
     RowBox[{"tend", "-", "0.01`"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Blue", ",", "Green"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"TargetUnits", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"Seconds\"\>", ",", "\<\"Meters\"\>"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "[", "s", "]"}], ",", 
      RowBox[{"ep", "[", "m", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"ep(x)\"\>", ",", "\<\"ep(y)\"\>", ",", "\<\"ep(z)\"\>"}], 
     "}"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.7585185532634525`*^9, 3.7585185992662697`*^9, 
  3.7585188237878294`*^9, 3.758519118373108*^9, 3.758519308329031*^9, 
  3.7585195117493286`*^9, 3.7585196226109447`*^9, 3.7585453009189754`*^9, 
  3.758545438925787*^9, 3.7585455469769506`*^9, 3.7585457522778664`*^9, 
  3.799979707669983*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ErrORsoll", "[", "time_", "]"}], " ", "=", " ", 
   RowBox[{"eOl", "[", 
    RowBox[{"time", ",", " ", 
     RowBox[{"qsoll", "[", "t", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.681795255964004*^9, 3.6817952578340063`*^9}, {
   3.725276057452697*^9, 3.7252760707155933`*^9}, 3.7585175958861685`*^9, {
   3.7585176308214164`*^9, 3.7585176308214164`*^9}, {3.7999330353514447`*^9, 
   3.7999330764925995`*^9}, {3.7999332536436195`*^9, 3.799933259159611*^9}}],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"q\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", \\\"t\\\", \\\"]\\\"}], \\\"\
\[Equal]\\\", RowBox[{\\\"qpl\\\", \\\"[\\\", RowBox[{\\\"t\\\", \\\",\\\", \
RowBox[{\\\"q\\\", \\\"[\\\", \\\"t\\\", \\\"]\\\"}]}], \\\"]\\\"}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"q\\\", \\\"[\\\", FractionBox[\\\"1\\\", \
\\\"samplerate\\\"], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\"}], \
\\\"}\\\"}]}]}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"",2,41,13,
   23101177906813387326,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.799979707689002*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ErrORsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"ErrORsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"ErrORsoll", "[", "time", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"time", ",", " ", 
     RowBox[{"t0", "+", "0.01"}], ",", " ", 
     RowBox[{"tend", "-", "0.01"}]}], "}"}], ",", " ", 
   RowBox[{"PlotStyle", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", " ", "Blue", ",", " ", "Green"}], "}"}]}], ",", 
   " ", 
   RowBox[{"ImageSize", " ", "->", " ", "Large"}], ",", " ", 
   RowBox[{"PlotRange", " ", "->", " ", "All"}], ",", " ", 
   RowBox[{"AxesLabel", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "[", "s", "]"}], ",", " ", 
      RowBox[{"eo", "[", "rad", "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<eo(x)\>\"", ",", " ", "\"\<eo(y)\>\"", ",", " ", "\"\<eo(z)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6817953070590754`*^9, 3.6817953132000847`*^9}, {
   3.68235566735032*^9, 3.6823556984255743`*^9}, {3.682356159377184*^9, 
   3.6823561666779966`*^9}, 3.7252717337834864`*^9, {3.725276081792498*^9, 
   3.7252760864665327`*^9}, 3.758517595887179*^9, {3.7585176308234196`*^9, 
   3.7585176308244314`*^9}, {3.7999330877326765`*^9, 
   3.7999331045464735`*^9}, {3.7999332617263618`*^9, 
   3.7999332677562733`*^9}, {3.7999341133357334`*^9, 3.799934120648039*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Plot","plln",
   "\"Limiting value \\!\\(\\*RowBox[{RowBox[{\\\"0.01`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"+\\\", FractionBox[\\\"1\\\", \
\\\"samplerate\\\"]}]\\) in \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"time\\\", \
\\\",\\\", RowBox[{RowBox[{\\\"0.01`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\
\", FractionBox[\\\"1\\\", \\\"samplerate\\\"]}], \\\",\\\", RowBox[{RowBox[{\
\\\"-\\\", \\\"0.01`\\\"}], \\\"+\\\", \\\"tend\\\"}]}], \\\"}\\\"}]\\) is \
not a machine-sized real number.\"",2,42,14,23101177906813387326,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.799979708079591*^9}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ErrORsoll", "[", "time", "]"}], "\[LeftDoubleBracket]", "1", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{"ErrORsoll", "[", "time", "]"}], "\[LeftDoubleBracket]", "2", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{"ErrORsoll", "[", "time", "]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"time", ",", 
     RowBox[{"t0", "+", "0.01`"}], ",", 
     RowBox[{"tend", "-", "0.01`"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Blue", ",", "Green"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "[", "s", "]"}], ",", 
      RowBox[{"eo", "[", "rad", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"eo(x)\"\>", ",", "\<\"eo(y)\"\>", ",", "\<\"eo(z)\"\>"}], 
     "}"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.7585185551186266`*^9, 3.7585185996282587`*^9, 
  3.7585188241506944`*^9, 3.7585191186764364`*^9, 3.758519308717426*^9, 
  3.7585195120725317`*^9, 3.7585196232084465`*^9, 3.7585453040430613`*^9, 
  3.758545441424627*^9, 3.75854554719308*^9, 3.758545752478758*^9, 
  3.799979708102625*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3D elements (done)", "Section",
 CellChangeTimes->{{3.7993046810598145`*^9, 3.799304696634295*^9}, 
   3.799554263858622*^9, {3.799586669531086*^9, 3.7995866722161613`*^9}, {
   3.799604515692666*^9, 3.799604528253003*^9}, 3.799931572837556*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"plot", " ", "axis"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7995543069747133`*^9, 3.799554324126714*^9}, {
  3.7996050005179634`*^9, 3.79960500678432*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xmin3d", " ", "=", " ", 
   RowBox[{"-", "2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xmax3d", " ", "=", " ", "2"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ymin3d", " ", "=", " ", 
   RowBox[{"-", "2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ymax3d", " ", "=", " ", "2"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"zmin3d", " ", "=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"zmax3d", " ", "=", " ", "2"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7584445123307157`*^9, 3.758444525250996*^9}, {
   3.7584491150937796`*^9, 3.7584491364287763`*^9}, {3.7584493315490484`*^9, 
   3.7584493410040646`*^9}, {3.758452434393653*^9, 3.7584524516650667`*^9}, 
   3.758517595911215*^9, {3.758517630836439*^9, 3.7585176308374505`*^9}, {
   3.799564219332836*^9, 3.7995642628101125`*^9}}],

Cell[CellGroupData[{

Cell["Plane", "Subsection",
 CellChangeTimes->{{3.7584448477974606`*^9, 3.758444857768345*^9}, {
   3.7585176308414464`*^9, 3.758517630842448*^9}, 3.758518055478194*^9, {
   3.7995544121065254`*^9, 3.7995544143422117`*^9}, {3.799564267423721*^9, 
   3.7995642687003417`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"grid", " ", "representing", " ", "floor"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7995544948823767`*^9, 3.799554529549035*^9}, {
  3.799605021247182*^9, 3.7996050299563885`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"passo", " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"xmax3d", " ", "-", " ", "xmin3d"}], ")"}], "/", "4"}]}], ";"}],
   " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"grid", " ", "cell", " ", "size"}], ",", " ", 
    RowBox[{
    "scaled", " ", "in", " ", "order", " ", "to", " ", "always", " ", "hav", 
     " ", "ethe", " ", "same", " ", "number", " ", "of", " ", "cells"}]}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7584446844575644`*^9, 3.7584447101938996`*^9}, {
   3.7584492950458326`*^9, 3.7584492962373123`*^9}, {3.7584517280022936`*^9, 
   3.7584517293694887`*^9}, 3.758452882721119*^9, {3.758452947544653*^9, 
   3.7584529500726852`*^9}, {3.758453417897399*^9, 3.758453418175814*^9}, {
   3.7584538849673314`*^9, 3.7584538853599215`*^9}, {3.7584539379131575`*^9, 
   3.7584539490948534`*^9}, 3.7585175959122066`*^9, {3.7585176308434596`*^9, 
   3.7585176308444514`*^9}, {3.7995544296280746`*^9, 3.799554449433928*^9}, {
   3.7996050390454545`*^9, 3.7996050949846444`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pianopts", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "y", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "x", ",", " ", "xmin3d", ",", " ", "xmax3d", ",", " ", "passo"}], "}"}],
      ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "y", ",", " ", "ymin3d", ",", " ", "ymax3d", ",", " ", "passo"}], 
      "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584517173948603`*^9, 3.758451736337632*^9}, 
   3.7585175959122066`*^9, {3.7585176308464546`*^9, 3.7585176308474655`*^9}, {
   3.7995544355462923`*^9, 3.799554436090897*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "graphic", " ", "representation", " ", "of", " ", "the", " ", "defined", 
   " ", "grid"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799605107229374*^9, 3.7996051339497194`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"piano", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{"Graphics3D", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"LightGray", ",", " ", 
            RowBox[{"Line", "[", "#", "]"}]}], "}"}], " ", "&"}], ",", " ", 
         "pianopts"}], "]"}], ",", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Gray", ",", " ", 
            RowBox[{"Line", "[", "#", "]"}]}], "}"}], " ", "&"}], ",", " ", 
         RowBox[{"Transpose", "[", "pianopts", "]"}]}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.75845183820993*^9, 3.7584518427129583`*^9}, {
   3.7584532312645607`*^9, 3.758453231852436*^9}, 3.7585175959122066`*^9, {
   3.758517630849468*^9, 3.758517630849468*^9}, {3.799554441389098*^9, 
   3.7995544422715807`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Base", "Subsection",
 CellChangeTimes->{{3.799605657930059*^9, 3.7996056749619045`*^9}, 
   3.799605731042144*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"sphere", " ", "representing", " ", "L5"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799605682144755*^9, 3.7996057065110683`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rbase", " ", "=", " ", "0.08"}], ";"}]], "Input",
 CellChangeTimes->{{3.7996058165351706`*^9, 3.7996058253416543`*^9}, 
   3.7996059881553683`*^9, {3.7996060262169495`*^9, 3.799606027250187*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"base", " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Gray", ",", " ", 
      RowBox[{"Opacity", "[", "0.9", "]"}], ",", " ", 
      RowBox[{"Specularity", "[", 
       RowBox[{"White", ",", " ", "30"}], "]"}], ",", " ", 
      RowBox[{"Sphere", "[", 
       RowBox[{"L5Pos", ",", " ", "rbase"}], "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7996057939614596`*^9, 3.7996058951325936`*^9}, {
  3.7996059896664653`*^9, 3.7996059905383673`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Robot", "Subsection",
 CellChangeTimes->{{3.758444861892532*^9, 3.7584448692895813`*^9}, {
   3.7585176308755302`*^9, 3.758517630876523*^9}, 3.7585180793097944`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Position", " ", "and", " ", "orientation", " ", "of", " ", "each", " ", 
   RowBox[{"joints", "'"}], " ", "node", " ", "of", " ", "the", " ", "ARM"}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799554816230855*^9, 3.7995548377576766`*^9}, {
  3.7996051488393087`*^9, 3.799605184974879*^9}}],

Cell[CellGroupData[{

Cell["Points evaluation - Right arm", "Subsubsection",
 CellChangeTimes->{{3.758446247865548*^9, 3.758446258521407*^9}, {
   3.758517630877533*^9, 3.758517630878525*^9}, 3.758518083491593*^9, {
   3.7995552555332527`*^9, 3.7995552599581165`*^9}, {3.7996051938088098`*^9, 
   3.799605210640741*^9}, 3.7996054988895254`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg1r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg1r", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.7995565410114927`*^9}, {
   3.799556671211336*^9, 3.799556671260236*^9}, 3.799560468663576*^9, 
   3.7995775192229996`*^9, 3.7995776259495974`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg2r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg2r", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.7995565448684535`*^9}, {
   3.799556685195239*^9, 3.7995566856639504`*^9}, 3.799560470491392*^9, 
   3.7995775206575146`*^9, 3.7995776239191456`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg3r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg3r", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.7995565673965254`*^9}, {
   3.7995566899731703`*^9, 3.7995566996699953`*^9}, {3.7995604723173823`*^9, 
   3.7995604737157855`*^9}, 3.7995775262938952`*^9, 3.799577621934637*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg4r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg4r", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.7995565718991165`*^9}, {
   3.7995566950520897`*^9, 3.799556695276327*^9}, 3.7995604756072955`*^9, 
   3.79957752887033*^9, 3.7995776188966045`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg5r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg5r", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.799556581565198*^9}, {
   3.7995567081012883`*^9, 3.7995567161973715`*^9}, 3.7995604769767256`*^9, 
   3.7995775304843326`*^9, 3.7995776167420025`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg6r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg6r", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.799556589897834*^9}, 
   3.799556717612341*^9, {3.799556747838355*^9, 3.7995567492761426`*^9}, 
   3.7995604784228716`*^9, 3.799577531655269*^9, 3.7995776125771427`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg7r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg7r", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799554991959058*^9, 3.799554994062825*^9}, 
   3.7995550787365417`*^9, {3.7995554495409145`*^9, 3.7995554570830665`*^9}, {
   3.7995565967351284`*^9, 3.7995566171654387`*^9}, {3.7995567195720625`*^9, 
   3.799556721225299*^9}, {3.7995567540917625`*^9, 3.79955675560159*^9}, 
   3.7995604798484488`*^9, {3.799577532583293*^9, 3.799577536215905*^9}, 
   3.7995776100567117`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg8r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg8r", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995549963258677`*^9, 3.7995549976060557`*^9}, 
   3.7995550821907005`*^9, {3.799555462468993*^9, 3.799555467926289*^9}, {
   3.7995566202532516`*^9, 3.7995566492262435`*^9}, {3.7995567237260084`*^9, 
   3.799556727850706*^9}, {3.799556760956691*^9, 3.799556761769518*^9}, 
   3.7995604815912666`*^9, 3.7995775376006823`*^9, 3.7995776030322933`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg9r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg9r", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799554999873102*^9, 3.799555003002037*^9}, 
   3.7995550853181353`*^9, {3.799555474222129*^9, 3.7995554791602144`*^9}, {
   3.799556644787017*^9, 3.79955665377149*^9}, {3.799556732028022*^9, 
   3.799556734134289*^9}, {3.7995567688698463`*^9, 3.799556769437339*^9}, 
   3.79956048324568*^9, 3.799577540253996*^9, 3.799577599208655*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg10r", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg10r", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995550051530223`*^9, 3.7995550084579816`*^9}, 
   3.7995550874084764`*^9, {3.7995554846984434`*^9, 3.7995554910566845`*^9}, {
   3.7995566582029877`*^9, 3.79955666132306*^9}, {3.799556736318052*^9, 
   3.799556739483471*^9}, {3.7995567735893188`*^9, 3.799556779484175*^9}, 
   3.7995604852224417`*^9, {3.7995775415654893`*^9, 3.79957756653226*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"giuntir", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"{", "\n", "   ", 
    RowBox[{"L5Pos", ",", "\n", "   ", 
     RowBox[{"dg1r", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg2r", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg3r", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg4r", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg5r", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg6r", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg7r", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg8r", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg9r", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg10r", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}]}], "   ", "\[IndentingNewLine]", "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7266847189129505`*^9, 3.7266847442080164`*^9}, 
   3.726684883508539*^9, 3.7266849404597073`*^9, {3.726687033640834*^9, 
   3.72668714196062*^9}, {3.7268232711901693`*^9, 3.7268232712001743`*^9}, 
   3.7269299954040565`*^9, {3.7273759569210653`*^9, 3.7273759743165703`*^9}, {
   3.7274259089096193`*^9, 3.7274259098192263`*^9}, {3.758444920013405*^9, 
   3.7584449288456044`*^9}, 3.7584465676851788`*^9, {3.758446844547414*^9, 
   3.758446869258989*^9}, {3.758446991947087*^9, 3.7584470205952835`*^9}, {
   3.758447058610038*^9, 3.7584470691545696`*^9}, {3.7584471225465937`*^9, 
   3.7584471547716303`*^9}, 3.7584472067868776`*^9, {3.7584483481362257`*^9, 
   3.758448416080258*^9}, {3.758449561751462*^9, 3.758449563152675*^9}, 
   3.758517595917224*^9, {3.7585176308825407`*^9, 3.758517630883542*^9}, 
   3.7995549648837996`*^9, {3.7995567933209324`*^9, 3.7995569855554695`*^9}, 
   3.7995570751555014`*^9, 3.7995589784813333`*^9, {3.7995775461670456`*^9, 
   3.799577592407588*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Points evaluation- Left arm", "Subsubsection",
 CellChangeTimes->{{3.758446247865548*^9, 3.758446258521407*^9}, {
   3.758517630877533*^9, 3.758517630878525*^9}, 3.758518083491593*^9, {
   3.7995552555332527`*^9, 3.7995552599581165`*^9}, {3.799557047244134*^9, 
   3.7995570497634563`*^9}, {3.7996052047719774`*^9, 3.7996052114409285`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg1l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg1l", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.7995565410114927`*^9}, {
   3.799556671211336*^9, 3.799556671260236*^9}, {3.799557081497717*^9, 
   3.7995570864596148`*^9}, 3.799560492029065*^9, 3.7995776487219467`*^9, 
   3.7995777221374846`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg2l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg2l", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.7995565448684535`*^9}, {
   3.799556685195239*^9, 3.7995566856639504`*^9}, {3.799557090139621*^9, 
   3.7995570960341525`*^9}, 3.799560493551958*^9, 3.7995776511104326`*^9, 
   3.7995777247956896`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg3l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg3l", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.7995565673965254`*^9}, {
   3.7995566899731703`*^9, 3.7995566996699953`*^9}, {3.7995570971481404`*^9, 
   3.799557110260045*^9}, 3.799560495349944*^9, 3.7995776536633058`*^9, 
   3.7995777278213577`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg4l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg4l", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.7995565718991165`*^9}, {
   3.7995566950520897`*^9, 3.799556695276327*^9}, {3.799557098636307*^9, 
   3.799557112238226*^9}, 3.799560496838561*^9, 3.7995776563335094`*^9, 
   3.799577730760785*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg5l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg5l", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.799556581565198*^9}, {
   3.7995567081012883`*^9, 3.7995567161973715`*^9}, {3.7995570997544465`*^9, 
   3.799557114387044*^9}, 3.799560498771531*^9, 3.799577658229765*^9, 
   3.7995777331660147`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg6l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg6l", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7584450356452217`*^9, 3.7584450430102143`*^9}, {
   3.7584455442737103`*^9, 3.758445544345808*^9}, {3.758445722194061*^9, 
   3.7584457376661377`*^9}, 3.7584462143366137`*^9, {3.758446409147974*^9, 
   3.758446429857343*^9}, {3.7584468900482035`*^9, 3.758446983643326*^9}, 
   3.758447166610276*^9, {3.758447609305954*^9, 3.758447614849964*^9}, {
   3.758447656649794*^9, 3.7584476595139103`*^9}, {3.758448242449255*^9, 
   3.7584483425273495`*^9}, {3.7584486637713985`*^9, 
   3.7584487007901707`*^9}, {3.758448838907452*^9, 3.7584488559477525`*^9}, {
   3.7584503841485434`*^9, 3.758450384875969*^9}, 3.758517595916222*^9, {
   3.7585176308805275`*^9, 3.7585176308815393`*^9}, {3.7995549132272954`*^9, 
   3.799554947309281*^9}, 3.7995550735363636`*^9, {3.799555160657916*^9, 
   3.7995552848358984`*^9}, {3.7995553171222944`*^9, 
   3.7995553848094096`*^9}, {3.799556516599193*^9, 3.799556589897834*^9}, 
   3.799556717612341*^9, {3.799556747838355*^9, 3.7995567492761426`*^9}, {
   3.799557101037362*^9, 3.7995571159849963`*^9}, 3.7995605005797153`*^9, 
   3.7995776606610794`*^9, 3.7995777356712723`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg7l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg7l", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799554991959058*^9, 3.799554994062825*^9}, 
   3.7995550787365417`*^9, {3.7995554495409145`*^9, 3.7995554570830665`*^9}, {
   3.7995565967351284`*^9, 3.7995566171654387`*^9}, {3.7995567195720625`*^9, 
   3.799556721225299*^9}, {3.7995567540917625`*^9, 3.79955675560159*^9}, {
   3.799557102061288*^9, 3.79955711785483*^9}, 3.799560502307918*^9, 
   3.7995776626149645`*^9, 3.7995777375493026`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg8l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg8l", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995549963258677`*^9, 3.7995549976060557`*^9}, 
   3.7995550821907005`*^9, {3.799555462468993*^9, 3.799555467926289*^9}, {
   3.7995566202532516`*^9, 3.7995566492262435`*^9}, {3.7995567237260084`*^9, 
   3.799556727850706*^9}, {3.799556760956691*^9, 3.799556761769518*^9}, {
   3.799557104341209*^9, 3.799557120411436*^9}, 3.799560504431533*^9, 
   3.799577665175762*^9, 3.7995777397758255`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg9l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg9l", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799554999873102*^9, 3.799555003002037*^9}, 
   3.7995550853181353`*^9, {3.799555474222129*^9, 3.7995554791602144`*^9}, {
   3.799556644787017*^9, 3.79955665377149*^9}, {3.799556732028022*^9, 
   3.799556734134289*^9}, {3.7995567688698463`*^9, 3.799556769437339*^9}, {
   3.7995571059503813`*^9, 3.7995571217094707`*^9}, 3.799560507898234*^9, 
   3.7995776671903577`*^9, 3.7995777422319546`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg10l", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"RigidPosition", "[", 
    RowBox[{"Tg10l", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
       ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
       " ", "q10"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995550051530223`*^9, 3.7995550084579816`*^9}, 
   3.7995550874084764`*^9, {3.7995554846984434`*^9, 3.7995554910566845`*^9}, {
   3.7995566582029877`*^9, 3.79955666132306*^9}, {3.799556736318052*^9, 
   3.799556739483471*^9}, {3.7995567735893188`*^9, 3.799556779484175*^9}, {
   3.7995571074399104`*^9, 3.799557124814324*^9}, 3.7995605131920877`*^9, 
   3.799577670911141*^9, 3.7995777450874343`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"giuntil", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"{", "\n", "   ", 
    RowBox[{"L5Pos", ",", "\n", "   ", 
     RowBox[{"dg1l", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg2l", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg3l", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg4l", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg5l", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg6l", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg7l", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg8l", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg9l", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", "\n", "   ", 
     RowBox[{"dg10l", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}]}], "   ", "\[IndentingNewLine]", "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7266847189129505`*^9, 3.7266847442080164`*^9}, 
   3.726684883508539*^9, 3.7266849404597073`*^9, {3.726687033640834*^9, 
   3.72668714196062*^9}, {3.7268232711901693`*^9, 3.7268232712001743`*^9}, 
   3.7269299954040565`*^9, {3.7273759569210653`*^9, 3.7273759743165703`*^9}, {
   3.7274259089096193`*^9, 3.7274259098192263`*^9}, {3.758444920013405*^9, 
   3.7584449288456044`*^9}, 3.7584465676851788`*^9, {3.758446844547414*^9, 
   3.758446869258989*^9}, {3.758446991947087*^9, 3.7584470205952835`*^9}, {
   3.758447058610038*^9, 3.7584470691545696`*^9}, {3.7584471225465937`*^9, 
   3.7584471547716303`*^9}, 3.7584472067868776`*^9, {3.7584483481362257`*^9, 
   3.758448416080258*^9}, {3.758449561751462*^9, 3.758449563152675*^9}, 
   3.758517595917224*^9, {3.7585176308825407`*^9, 3.758517630883542*^9}, 
   3.7995549648837996`*^9, {3.7995567933209324`*^9, 3.7995569855554695`*^9}, {
   3.7995570634787617`*^9, 3.799557069049429*^9}, {3.799557129442271*^9, 
   3.7995571476687164`*^9}, 3.7995589845577188`*^9, {3.7995776770936127`*^9, 
   3.799577703152626*^9}, 3.7995777473423786`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Tube", "Subsubsection",
 CellChangeTimes->{{3.7584505491958447`*^9, 3.7584505539578123`*^9}, {
   3.758517630884544*^9, 3.7585176308855357`*^9}, 3.7585181048915405`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Tube", " ", "insertion", " ", "between", " ", "two", " ", "consecutive", 
   " ", "joints", " ", "in", " ", "order", " ", "to", " ", "represent", " ", 
   "the", " ", "link"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7995548425748663`*^9, 3.7995548693294554`*^9}, {
  3.799605250121704*^9, 3.799605348475289*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rrobot", " ", "=", " ", "0.05"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"human", " ", "like", " ", "arm", " ", "dimension"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.7584484414775977`*^9, 3.758448472022011*^9}, 
   3.7584490841496067`*^9, {3.7584494875167913`*^9, 3.758449516068557*^9}, {
   3.758449726725319*^9, 3.7584497268284807`*^9}, {3.7584534676166863`*^9, 
   3.7584534723908005`*^9}, 3.758453755991476*^9, 3.758517595917224*^9, {
   3.7585176308875384`*^9, 3.7585176308875384`*^9}, {3.7995573812945585`*^9, 
   3.7995573823916245`*^9}, {3.7995575064180517`*^9, 3.7995575333089833`*^9}, 
   3.799562017956095*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"robotr", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Cyan", ",", " ", 
      RowBox[{"Opacity", "[", "0.6", "]"}], ",", " ", 
      RowBox[{"Specularity", "[", 
       RowBox[{"White", ",", " ", "60"}], "]"}], ",", " ", 
      RowBox[{"CapForm", "[", "\"\<Butt\>\"", "]"}], ",", " ", 
      RowBox[{"Tube", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"giuntir", "[", 
          RowBox[{"{", 
           RowBox[{
           "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", 
            "q5", ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", 
            "q9", ",", " ", "q10"}], "}"}], "]"}], "}"}], ",", " ", 
        "rrobot"}], "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388387217459628*^9, 3.3883873142252536`*^9}, {
   3.3883873635065036`*^9, 3.388387395709628*^9}, {3.726603520596736*^9, 
   3.7266036163393707`*^9}, {3.726659704650152*^9, 3.726659715492388*^9}, {
   3.726668688970785*^9, 3.726668792453329*^9}, {3.7266745165912733`*^9, 
   3.72667451744084*^9}, {3.726685852337557*^9, 3.726685861840593*^9}, {
   3.7266863921225605`*^9, 3.726686393058156*^9}, {3.7266901939759064`*^9, 
   3.726690218520363*^9}, {3.7266905685987625`*^9, 3.726690589423765*^9}, {
   3.726830550951338*^9, 3.726830572289466*^9}, {3.7268306046048627`*^9, 
   3.726830607089507*^9}, {3.726830707060689*^9, 3.726830707800178*^9}, 
   3.726929994857152*^9, 3.758446571608865*^9, {3.758448390703678*^9, 
   3.7584484760148525`*^9}, {3.7584495947176375`*^9, 3.7584496055259*^9}, {
   3.75845045193303*^9, 3.7584504655404854`*^9}, {3.758451768682719*^9, 
   3.7584517734569283`*^9}, {3.758451846859063*^9, 3.7584518528825336`*^9}, {
   3.758451902946669*^9, 3.758451944402688*^9}, {3.75845201765088*^9, 
   3.7584521016889935`*^9}, {3.758452344571225*^9, 3.7584523454221473`*^9}, 
   3.7584545584158487`*^9, 3.7585175959182253`*^9, {3.7585176308895416`*^9, 
   3.7585176308895416`*^9}, {3.7995572087370386`*^9, 3.799557241622786*^9}, {
   3.79957881426075*^9, 3.7995788260549035`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"robotl", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Cyan", ",", " ", 
      RowBox[{"Opacity", "[", "0.6", "]"}], ",", " ", 
      RowBox[{"Specularity", "[", 
       RowBox[{"White", ",", " ", "60"}], "]"}], ",", " ", 
      RowBox[{"CapForm", "[", "\"\<Butt\>\"", "]"}], ",", " ", 
      RowBox[{"Tube", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"giuntil", "[", 
          RowBox[{"{", 
           RowBox[{
           "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", 
            "q5", ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", 
            "q9", ",", " ", "q10"}], "}"}], "]"}], "}"}], ",", " ", 
        "rrobot"}], "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.388387217459628*^9, 3.3883873142252536`*^9}, {
   3.3883873635065036`*^9, 3.388387395709628*^9}, {3.726603520596736*^9, 
   3.7266036163393707`*^9}, {3.726659704650152*^9, 3.726659715492388*^9}, {
   3.726668688970785*^9, 3.726668792453329*^9}, {3.7266745165912733`*^9, 
   3.72667451744084*^9}, {3.726685852337557*^9, 3.726685861840593*^9}, {
   3.7266863921225605`*^9, 3.726686393058156*^9}, {3.7266901939759064`*^9, 
   3.726690218520363*^9}, {3.7266905685987625`*^9, 3.726690589423765*^9}, {
   3.726830550951338*^9, 3.726830572289466*^9}, {3.7268306046048627`*^9, 
   3.726830607089507*^9}, {3.726830707060689*^9, 3.726830707800178*^9}, 
   3.726929994857152*^9, 3.758446571608865*^9, {3.758448390703678*^9, 
   3.7584484760148525`*^9}, {3.7584495947176375`*^9, 3.7584496055259*^9}, {
   3.75845045193303*^9, 3.7584504655404854`*^9}, {3.758451768682719*^9, 
   3.7584517734569283`*^9}, {3.758451846859063*^9, 3.7584518528825336`*^9}, {
   3.758451902946669*^9, 3.758451944402688*^9}, {3.75845201765088*^9, 
   3.7584521016889935`*^9}, {3.758452344571225*^9, 3.7584523454221473`*^9}, 
   3.7584545584158487`*^9, 3.7585175959182253`*^9, {3.7585176308895416`*^9, 
   3.7585176308895416`*^9}, {3.7995572087370386`*^9, 3.799557264947121*^9}, {
   3.7995788177858496`*^9, 3.799578823313649*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Reference frames", "Subsection",
 CellChangeTimes->{{3.758454061371934*^9, 3.758454073822502*^9}, {
   3.758517630891545*^9, 3.758517630891545*^9}, 3.758518114296491*^9, {
   3.7996043520019464`*^9, 3.7996043606267147`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "three", " ", "different", " ", "reference", " ", "frames", " ", "will", 
    " ", "be", " ", 
    RowBox[{"plotted", ":", " ", "Base"}]}], ",", " ", 
   RowBox[{
    RowBox[{"Right", " ", "end"}], "-", 
    RowBox[{"effector", " ", "and", " ", "left", " ", "end"}], "-", 
    "effector"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7995577966021204`*^9, 3.7995578514236774`*^9}, {
  3.799557881720303*^9, 3.7995579174761887`*^9}, {3.7995579650326767`*^9, 
  3.7995579700338974`*^9}, {3.7996053658902574`*^9, 3.7996054235033293`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Reference", " ", "frame", " ", "representation"}], ",", " ", 
   RowBox[{"drawed", " ", "using", " ", 
    RowBox[{"(", 
     RowBox[{"0", ",", "0", ",", "0"}], ")"}], " ", "as", " ", "origin", " ", 
    "and", " ", 
    RowBox[{"(", 
     RowBox[{"x", ",", " ", "y", ",", " ", "z"}], ")"}], " ", "as", " ", 
    "axis", " ", 
    RowBox[{"directions", "."}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7995581676460257`*^9, 3.79955822512317*^9}, {
  3.799558280287505*^9, 3.799558332033263*^9}, {3.7996054392500286`*^9, 
  3.7996054770476027`*^9}, {3.7996055459101095`*^9, 3.7996056049993773`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"lf", " ", "=", " ", "0.25"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"reference", " ", "frame", " ", "axis", " ", "length"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"e1d", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"lf", ",", " ", "0", ",", " ", "0", ",", " ", "1"}], "}"}]}], ";",
   " ", 
  RowBox[{"e2d", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "lf", ",", " ", "0", ",", " ", "1"}], "}"}]}], ";",
   " ", 
  RowBox[{"e3d", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "0", ",", " ", "lf", ",", " ", "1"}], "}"}]}], ";",
   " ", 
  RowBox[{"Orig", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "0", ",", " ", "0", ",", " ", "1"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Ox", " ", "=", " ", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"#", ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"Orig", ",", " ", "e1d"}], "}"}], "]"}]}], ",", " ", 
       RowBox[{"-", "1"}]}], "]"}], "]"}], " ", "&"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Oy", " ", "=", " ", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"#", ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"Orig", ",", " ", "e2d"}], "}"}], "]"}]}], ",", " ", 
       RowBox[{"-", "1"}]}], "]"}], "]"}], " ", "&"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Oz", " ", "=", " ", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"#", ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"Orig", ",", " ", "e3d"}], "}"}], "]"}]}], ",", " ", 
       RowBox[{"-", "1"}]}], "]"}], "]"}], " ", "&"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Otot", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Ox", "[", "#", "]"}], ",", " ", 
      RowBox[{"Oy", "[", "#", "]"}], ",", " ", 
      RowBox[{"Oz", "[", "#", "]"}]}], "}"}], " ", "&"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7584540756592607`*^9, 3.7584541104512215`*^9, {3.75845417491347*^9, 
   3.758454175064698*^9}, {3.758454225591584*^9, 3.7584542412960377`*^9}, {
   3.7584543416649823`*^9, 3.7584543458242054`*^9}, {3.7584543786572523`*^9, 
   3.75845438956558*^9}, {3.758514291442034*^9, 3.758514291495659*^9}, 
   3.7585175959182253`*^9, {3.7585176308935475`*^9, 3.758517630894559*^9}, {
   3.7996036507707477`*^9, 3.79960365099415*^9}, {3.799605623698656*^9, 
   3.7996056353964677`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "\"\<Reference frame\>\"", " ", "representation", " ", "draws", " ", 
    RowBox[{"over", ":", " ", "base"}]}], ",", " ", 
   RowBox[{
    RowBox[{"right", " ", "end"}], "-", 
    RowBox[{"effector", " ", "and", " ", "left", " ", "end"}], "-", 
    "effector"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799558230450033*^9, 3.7995582724842033`*^9}, {
  3.799606173181046*^9, 3.7996062422515087`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rifg", " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", " ", "Thick", ",", " ", 
      RowBox[{"Line", " ", "/@", " ", 
       RowBox[{"Otot", "@", "Tg"}]}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758454146435915*^9, 3.758454153680745*^9}, {
   3.7584542206952753`*^9, 3.758454222366768*^9}, 3.758517595919227*^9, {
   3.758517630896552*^9, 3.758517630896552*^9}, 3.7995583471550026`*^9, {
   3.7995583793370485`*^9, 3.7995583807166047`*^9}, 3.7995592341587534`*^9, {
   3.7995593885140667`*^9, 3.799559389382522*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rifEEr", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", "  ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Green", ",", " ", "Thick", ",", " ", 
      RowBox[{"Line", " ", "/@", " ", 
       RowBox[{"Otot", "@", 
        RowBox[{"TgEEr", "[", 
         RowBox[{"{", 
          RowBox[{
          "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", 
           "q5", ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", 
           "q9", ",", " ", "q10"}], "}"}], "]"}]}]}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.758454223810932*^9, 3.7584542954229145`*^9}, 
   3.7584544912232094`*^9, {3.758454531264327*^9, 3.7584545328106346`*^9}, {
   3.7584548287423778`*^9, 3.758454837118907*^9}, {3.7584551234218874`*^9, 
   3.7584551272185493`*^9}, 3.758517595919227*^9, {3.7585176308985553`*^9, 
   3.7585176308995667`*^9}, {3.799558034121118*^9, 3.7995580752467394`*^9}, 
   3.799558367074365*^9, {3.799578839275694*^9, 3.799578850032714*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"rifEEl", "[", 
     RowBox[{"{", 
      RowBox[{
      "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
       ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
      "}"}], "]"}], " ", "=", "  ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Green", ",", " ", "Thick", ",", " ", 
       RowBox[{"Line", " ", "/@", " ", 
        RowBox[{"Otot", "@", 
         RowBox[{"TgEEl", "[", 
          RowBox[{"{", 
           RowBox[{
           "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", 
            "q5", ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", 
            "q9", ",", " ", "q10"}], "}"}], "]"}]}]}]}], "}"}], "]"}]}], 
   ";"}], "\n"}]], "Input",
 CellChangeTimes->{{3.7995584002940207`*^9, 3.799558404389782*^9}, {
  3.7995788420495834`*^9, 3.79957884757788*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"x", ":", " ", "red"}], ",", " ", 
   RowBox[{"y", ":", " ", "green"}], ",", " ", 
   RowBox[{"z", ":", " ", "blue"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7996062991155577`*^9, 3.7996063653108654`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"riftimeEEr", "[", "time_", "]"}], " ", ":=", " ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", " ", "Thick", ",", " ", 
         RowBox[{"Line", " ", "[", " ", 
          RowBox[{"Ox", "@", 
           RowBox[{"TEEr", "[", "time", "]"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Green", ",", " ", "Thick", ",", " ", 
         RowBox[{"Line", " ", "[", " ", 
          RowBox[{"Oy", "@", 
           RowBox[{"TEEr", "[", "time", "]"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", " ", "Thick", ",", " ", 
         RowBox[{"Line", " ", "[", " ", 
          RowBox[{"Oz", "@", 
           RowBox[{"TEEr", "[", "time", "]"}]}], "]"}]}], "}"}]}], "}"}], 
     "]"}]}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.7995983018200836`*^9, 3.799598385862299*^9}, {
  3.7996001058517942`*^9, 3.7996001062537394`*^9}, {3.799602771701958*^9, 
  3.7996027889106617`*^9}, {3.7996034061111298`*^9, 3.799603435052307*^9}, {
  3.7996034785594873`*^9, 3.79960349016494*^9}, {3.7996036333747563`*^9, 
  3.7996036350131326`*^9}, {3.7996063746484995`*^9, 3.7996063792027254`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"riftimeEEl", "[", "time_", "]"}], " ", ":=", "  ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", "Thick", ",", " ", 
        RowBox[{"Line", " ", "[", " ", 
         RowBox[{"Ox", "@", 
          RowBox[{"TEEl", "[", "time", "]"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", " ", "Thick", ",", " ", 
        RowBox[{"Line", " ", "[", " ", 
         RowBox[{"Oy", "@", 
          RowBox[{"TEEl", "[", "time", "]"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", "Thick", ",", " ", 
        RowBox[{"Line", " ", "[", " ", 
         RowBox[{"Oz", "@", 
          RowBox[{"TEEl", "[", "time", "]"}]}], "]"}]}], "}"}]}], " ", "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7995983018200836`*^9, 3.7995983530023623`*^9}, 
   3.7995983885175257`*^9, {3.799603467369956*^9, 3.7996035074234543`*^9}, {
   3.79960357907696*^9, 3.7996035834107976`*^9}}]
}, Closed]],

Cell["mano_vedere come", "Subsection",
 CellChangeTimes->{{3.7995585402137575`*^9, 3.799558550297923*^9}, {
  3.7995644742987785`*^9, 3.799564476605971*^9}}],

Cell[CellGroupData[{

Cell["Assiemi", "Subsection",
 CellChangeTimes->{{3.7584540466319327`*^9, 3.7584540564275503`*^9}, {
   3.758517630909581*^9, 3.758517630909581*^9}, 3.7585181411124277`*^9, 
   3.7995789998624763`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Put", " ", "all", " ", "defined", " ", "elements", " ", "together"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.799606406005705*^9, 3.7996064225276966`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"assiemer", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"base", ",", "rifg", ",", " ", 
     RowBox[{"rifEEr", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", " ", "piano", ",", " ", 
     RowBox[{"robotr", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.726668849273992*^9, 3.726668893109749*^9}, {
   3.7266689683834524`*^9, 3.726668970437522*^9}, {3.7266710865060577`*^9, 
   3.726671144960312*^9}, {3.726671462042482*^9, 3.726671466184244*^9}, {
   3.726673327873646*^9, 3.726673344795654*^9}, {3.7266733750708475`*^9, 
   3.7266733782829914`*^9}, {3.726673419669597*^9, 3.726673523753719*^9}, 
   3.7266735596886907`*^9, {3.7266736325943213`*^9, 3.726673671999606*^9}, {
   3.726674698332423*^9, 3.726674711439005*^9}, {3.7266752410774755`*^9, 
   3.7266752412450886`*^9}, {3.726675400366004*^9, 3.726675410987362*^9}, {
   3.726675538512786*^9, 3.726675562870107*^9}, {3.7266757251446867`*^9, 
   3.726675737221407*^9}, {3.72667962599102*^9, 3.726679626148626*^9}, 
   3.7266815179301023`*^9, {3.726681547954712*^9, 3.726681548139306*^9}, 
   3.7266815805046234`*^9, {3.7266816183076706`*^9, 3.7266816394174185`*^9}, {
   3.726681761461356*^9, 3.7266818009632635`*^9}, {3.7266828704116745`*^9, 
   3.72668287875696*^9}, {3.7266831172419806`*^9, 3.7266831199943943`*^9}, {
   3.7266839275827093`*^9, 3.7266839278218327`*^9}, {3.7266839735172997`*^9, 
   3.7266839736753826`*^9}, {3.726684027609081*^9, 3.726684028651618*^9}, {
   3.726689396547146*^9, 3.7266893981191783`*^9}, {3.7266894354917593`*^9, 
   3.726689463720324*^9}, {3.7266901981559563`*^9, 3.726690201384021*^9}, {
   3.7266902360141573`*^9, 3.7266902390222583`*^9}, {3.726690537558139*^9, 
   3.7266905478903875`*^9}, {3.7266905894357643`*^9, 
   3.7266905894357643`*^9}, {3.7266913409657493`*^9, 
   3.7266913494419203`*^9}, {3.7266918944867463`*^9, 3.726691895278776*^9}, {
   3.72669425698475*^9, 3.7266943026162233`*^9}, {3.726766971290201*^9, 
   3.726766974948645*^9}, {3.726922077783863*^9, 3.726922078487333*^9}, {
   3.726922243427335*^9, 3.7269222551541576`*^9}, {3.7584485081590123`*^9, 
   3.758448531677947*^9}, 3.758450262036567*^9, {3.7584528445294437`*^9, 
   3.758452846021093*^9}, {3.75845328284031*^9, 3.7584532846369896`*^9}, 
   3.758453618624933*^9, {3.758453868199692*^9, 3.7584538717549973`*^9}, {
   3.7584541668964834`*^9, 3.7584541685068884`*^9}, {3.758454300839019*^9, 
   3.758454306415342*^9}, 3.7584545125282917`*^9, {3.758454660959011*^9, 
   3.758454697238983*^9}, 3.758455117978707*^9, {3.7584619916617537`*^9, 
   3.7584619934574356`*^9}, 3.7585175959212294`*^9, {3.7585176309115844`*^9, 
   3.758517630912586*^9}, {3.799558505262986*^9, 3.799558533055313*^9}, {
   3.79955858344193*^9, 3.799558611634635*^9}, {3.799558644625424*^9, 
   3.7995586453546486`*^9}, {3.799558695849804*^9, 3.7995587142327876`*^9}, {
   3.799562350976088*^9, 3.799562358491709*^9}, 3.7995774965747547`*^9, {
   3.799577767333685*^9, 3.7995777706010094`*^9}, {3.799577813596859*^9, 
   3.799577815971959*^9}, {3.799605912027192*^9, 3.799605912331339*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"assiemel", "[", 
    RowBox[{"{", 
     RowBox[{
     "q1_", ",", "q2_", ",", "q3_", ",", "q4_", ",", "q5_", ",", " ", "q6_", 
      ",", " ", "q7_", ",", " ", "q8_", ",", " ", "q9_", ",", " ", "q10_"}], 
     "}"}], "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"base", ",", "rifg", ",", " ", 
     RowBox[{"rifEEl", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}], ",", " ", "piano", ",", " ", 
     RowBox[{"robotl", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1", ",", " ", "q2", ",", " ", "q3", ",", " ", "q4", ",", " ", "q5", 
        ",", " ", "q6", ",", " ", "q7", ",", " ", "q8", ",", " ", "q9", ",", 
        " ", "q10"}], "}"}], "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.726668849273992*^9, 3.726668893109749*^9}, {
   3.7266689683834524`*^9, 3.726668970437522*^9}, {3.7266710865060577`*^9, 
   3.726671144960312*^9}, {3.726671462042482*^9, 3.726671466184244*^9}, {
   3.726673327873646*^9, 3.726673344795654*^9}, {3.7266733750708475`*^9, 
   3.7266733782829914`*^9}, {3.726673419669597*^9, 3.726673523753719*^9}, 
   3.7266735596886907`*^9, {3.7266736325943213`*^9, 3.726673671999606*^9}, {
   3.726674698332423*^9, 3.726674711439005*^9}, {3.7266752410774755`*^9, 
   3.7266752412450886`*^9}, {3.726675400366004*^9, 3.726675410987362*^9}, {
   3.726675538512786*^9, 3.726675562870107*^9}, {3.7266757251446867`*^9, 
   3.726675737221407*^9}, {3.72667962599102*^9, 3.726679626148626*^9}, 
   3.7266815179301023`*^9, {3.726681547954712*^9, 3.726681548139306*^9}, 
   3.7266815805046234`*^9, {3.7266816183076706`*^9, 3.7266816394174185`*^9}, {
   3.726681761461356*^9, 3.7266818009632635`*^9}, {3.7266828704116745`*^9, 
   3.72668287875696*^9}, {3.7266831172419806`*^9, 3.7266831199943943`*^9}, {
   3.7266839275827093`*^9, 3.7266839278218327`*^9}, {3.7266839735172997`*^9, 
   3.7266839736753826`*^9}, {3.726684027609081*^9, 3.726684028651618*^9}, {
   3.726689396547146*^9, 3.7266893981191783`*^9}, {3.7266894354917593`*^9, 
   3.726689463720324*^9}, {3.7266901981559563`*^9, 3.726690201384021*^9}, {
   3.7266902360141573`*^9, 3.7266902390222583`*^9}, {3.726690537558139*^9, 
   3.7266905478903875`*^9}, {3.7266905894357643`*^9, 
   3.7266905894357643`*^9}, {3.7266913409657493`*^9, 
   3.7266913494419203`*^9}, {3.7266918944867463`*^9, 3.726691895278776*^9}, {
   3.72669425698475*^9, 3.7266943026162233`*^9}, {3.726766971290201*^9, 
   3.726766974948645*^9}, {3.726922077783863*^9, 3.726922078487333*^9}, {
   3.726922243427335*^9, 3.7269222551541576`*^9}, {3.7584485081590123`*^9, 
   3.758448531677947*^9}, 3.758450262036567*^9, {3.7584528445294437`*^9, 
   3.758452846021093*^9}, {3.75845328284031*^9, 3.7584532846369896`*^9}, 
   3.758453618624933*^9, {3.758453868199692*^9, 3.7584538717549973`*^9}, {
   3.7584541668964834`*^9, 3.7584541685068884`*^9}, {3.758454300839019*^9, 
   3.758454306415342*^9}, 3.7584545125282917`*^9, {3.758454660959011*^9, 
   3.758454697238983*^9}, 3.758455117978707*^9, {3.7584619916617537`*^9, 
   3.7584619934574356`*^9}, 3.7585175959212294`*^9, {3.7585176309115844`*^9, 
   3.758517630912586*^9}, {3.799558505262986*^9, 3.799558533055313*^9}, {
   3.79955858344193*^9, 3.799558611634635*^9}, {3.799558644625424*^9, 
   3.7995586453546486`*^9}, {3.799558695849804*^9, 3.7995587459330416`*^9}, {
   3.799577773566415*^9, 3.799577797581126*^9}, {3.7996059148157506`*^9, 
   3.799605915235671*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"assiemeboth", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "q1r_", ",", " ", "q2r_", ",", "q3r_", ",", " ", "q4r_", ",", " ", 
       "q5r_", ",", " ", "q6r_", ",", " ", "q7r_", ",", " ", "q8r_", ",", " ",
        "q9r_", ",", " ", "q10r_"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "q1l_", ",", " ", "q2l_", ",", "q3l_", ",", " ", "q4l_", ",", " ", 
       "q5l_", ",", " ", "q6l_", ",", " ", "q7l_", ",", " ", "q8l_", ",", " ",
        "q9l_", ",", " ", "q10l_"}], "}"}]}], "]"}], " ", "=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
    "base", ",", "\[IndentingNewLine]", "rifg", ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"rifEEr", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1r", ",", " ", "q2r", ",", "q3r", ",", " ", "q4r", ",", " ", "q5r", 
        ",", " ", "q6r", ",", " ", "q7r", ",", " ", "q8r", ",", " ", "q9r", 
        ",", " ", "q10r"}], "}"}], "]"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"rifEEl", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1l", ",", " ", "q2l", ",", "q3l", ",", " ", "q4l", ",", " ", "q5l", 
        ",", " ", "q6l", ",", " ", "q7l", ",", " ", "q8l", ",", " ", "q9l", 
        ",", " ", "q10l"}], "}"}], "]"}], ",", " ", "\[IndentingNewLine]", 
     "piano", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"robotr", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1r", ",", " ", "q2r", ",", "q3r", ",", " ", "q4r", ",", " ", "q5r", 
        ",", " ", "q6r", ",", " ", "q7r", ",", " ", "q8r", ",", " ", "q9r", 
        ",", " ", "q10r"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"robotl", "[", 
      RowBox[{"{", 
       RowBox[{
       "q1l", ",", " ", "q2l", ",", "q3l", ",", " ", "q4l", ",", " ", "q5l", 
        ",", " ", "q6l", ",", " ", "q7l", ",", " ", "q8l", ",", " ", "q9l", 
        ",", " ", "q10l"}], "}"}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.799578901629994*^9, 3.7995789020348883`*^9}, {
  3.7996059181455183`*^9, 3.7996059198145027`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Animation (done)", "Section",
 CellChangeTimes->{{3.7584504746517305`*^9, 3.7584504754715495`*^9}, {
   3.758450651427134*^9, 3.7584506581002417`*^9}, {3.7585176309206*^9, 
   3.75851763092159*^9}, 3.7585181474720097`*^9, {3.7995647031626077`*^9, 
   3.7995647087936797`*^9}, {3.799586643898427*^9, 3.7995866585513306`*^9}, {
   3.7999344494450493`*^9, 3.799934452263769*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "right", " ", "hand", " ", "animation", " ", "of", " ", "inverse", " ", 
   "kine", " ", "solution", " ", "and", " ", "desired", " ", "trajectory", 
   " ", "to", " ", "be", " ", "followed"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7999344574839635`*^9, 3.799934504282265*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"animationr", " ", "=", " ", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"Show", "[", "\n", "   ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"assiemer", " ", "[", 
        RowBox[{"qsolr", "[", "time", "]"}], "]"}], "}"}], ",", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{"ParametricPlot3D", "[", 
        RowBox[{
         RowBox[{"posr", "[", "k", "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"k", ",", " ", "t0", ",", " ", "time"}], "}"}], ",", "\n", 
         "     \t\t\t", 
         RowBox[{"PlotPoints", " ", "->", " ", "500"}], ",", "\n", 
         "     \t\t\t", 
         RowBox[{"MaxRecursion", " ", "->", " ", "13"}]}], "\n", 
        "     \t\t\t", "]"}], "}"}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Desired", " ", "Trajectory"}], " ", "*)"}], ",", "\n", "   ", 
      RowBox[{"PlotRange", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin3d", ",", " ", "xmax3d"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"ymin3d", ",", " ", "ymax3d"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"zmin3d", ",", " ", "zmax3d"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"Boxed", " ", "->", " ", "False"}], ",", " ", 
      RowBox[{"AxesLabel", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
        "}"}]}], ",", " ", 
      RowBox[{"ViewPoint", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0.5"}], "}"}]}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"time", ",", " ", 
      RowBox[{"t0", " ", "+", " ", "0.01"}], ",", " ", 
      RowBox[{"tend", " ", "-", " ", "0.01"}], ",", " ", "0.0001"}], "}"}]}], 
   "]"}], " "}]], "Input",
 CellChangeTimes->{{3.758450660493008*^9, 3.758450665333894*^9}, {
   3.7584507189000864`*^9, 3.7584507568909426`*^9}, {3.7584508307551413`*^9, 
   3.7584508325273056`*^9}, {3.7584508898116407`*^9, 
   3.7584509168272314`*^9}, {3.758452221746763*^9, 3.7584523248423505`*^9}, 
   3.758452469562991*^9, {3.7584554540702825`*^9, 3.7584554619740553`*^9}, {
   3.7584555647988544`*^9, 3.7584556334866343`*^9}, 3.7584556794953566`*^9, {
   3.758455725999753*^9, 3.7584557282791667`*^9}, 3.758455765135393*^9, 
   3.758459655825858*^9, {3.758459707466715*^9, 3.7584597092984505`*^9}, {
   3.7584622118968573`*^9, 3.7584622135352993`*^9}, {3.758462748942848*^9, 
   3.758462751693962*^9}, 3.758514149810066*^9, {3.758514249873308*^9, 
   3.7585142712175846`*^9}, {3.7585163893843803`*^9, 
   3.7585164024550133`*^9}, {3.7585170979334493`*^9, 
   3.7585171116366544`*^9}, {3.758517460445441*^9, 3.758517465232693*^9}, 
   3.7585175959242344`*^9, {3.7585176309235926`*^9, 3.7585176309235926`*^9}, {
   3.7585187414119415`*^9, 3.7585187418674216`*^9}, {3.7585193865541725`*^9, 
   3.75851939601441*^9}, {3.7585196669616184`*^9, 3.758519668570157*^9}, {
   3.7585197348267794`*^9, 3.758519771386014*^9}, {3.7585198146905413`*^9, 
   3.758519902719034*^9}, {3.7585199813302794`*^9, 3.758520004229389*^9}, {
   3.799930767806364*^9, 3.7999308056355867`*^9}, {3.7999308595044117`*^9, 
   3.7999308923598814`*^9}, {3.7999309294529963`*^9, 
   3.7999309691198783`*^9}, {3.7999311007828693`*^9, 
   3.7999311143317113`*^9}, {3.799931144362832*^9, 3.7999311492768984`*^9}, {
   3.799931299504156*^9, 3.7999313049177704`*^9}, {3.7999313361398125`*^9, 
   3.79993135163671*^9}, {3.7999313877994356`*^9, 3.7999314170988245`*^9}, {
   3.7999314644545035`*^9, 3.7999315459590054`*^9}, {3.79993415721865*^9, 
   3.7999341685021353`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Animate","vsform",
   "\"Animate argument \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"time\\\", \
\\\",\\\", RowBox[{\\\"t0\\\", \\\"+\\\", \\\"0.01`\\\"}], \\\",\\\", \
RowBox[{\\\"tend\\\", \\\"-\\\", \\\"0.01`\\\"}], \\\",\\\", \
\\\"0.0001`\\\"}], \\\"}\\\"}]\\) does not have the correct form for a \
variable specification.\"",2,62,1,23101184746792546416,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.799980653032569*^9}],

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"assiemer", "[", 
       RowBox[{"qsolr", "[", "time", "]"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ParametricPlot3D", "[", 
       RowBox[{
        RowBox[{"posr", "[", "k", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "t0", ",", "time"}], "}"}], ",", 
        RowBox[{"PlotPoints", "\[Rule]", "500"}], ",", 
        RowBox[{"MaxRecursion", "\[Rule]", "13"}]}], "]"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xmin3d", ",", "xmax3d"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ymin3d", ",", "ymax3d"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"zmin3d", ",", "zmax3d"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"x\"\>", ",", "\<\"y\"\>", ",", "\<\"z\"\>"}], "}"}]}], 
     ",", 
     RowBox[{"ViewPoint", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0.5`"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"time", ",", 
     RowBox[{"t0", "+", "0.01`"}], ",", 
     RowBox[{"tend", "-", "0.01`"}], ",", "0.0001`"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.799980578899299*^9, 3.7999806530355735`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "left", " ", "hand", " ", "animation", " ", "of", " ", "inverse", " ", 
   "kine", " ", "solution", " ", "and", " ", "desired", " ", "trajectory", 
   " ", "to", " ", "be", " ", "followed"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7999344574839635`*^9, 3.7999344928469305`*^9}}],

Cell[BoxData[
 RowBox[{"animationl", " ", "=", " ", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"Show", "[", "\n", "   ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"assiemel", " ", "[", 
        RowBox[{"qsoll", "[", "time", "]"}], "]"}], "}"}], ",", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{"ParametricPlot3D", "[", 
        RowBox[{
         RowBox[{"posl", "[", "k", "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"k", ",", " ", "t0", ",", " ", "time"}], "}"}], ",", "\n", 
         "     \t\t\t", 
         RowBox[{"PlotPoints", " ", "->", " ", "500"}], ",", "\n", 
         "     \t\t\t", 
         RowBox[{"MaxRecursion", " ", "->", " ", "13"}]}], "\n", 
        "     \t\t\t", "]"}], "}"}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Desired", " ", "Trajectory"}], " ", "*)"}], ",", "\n", "   ", 
      RowBox[{"PlotRange", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin3d", ",", " ", "xmax3d"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"ymin3d", ",", " ", "ymax3d"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"zmin3d", ",", " ", "zmax3d"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"Boxed", " ", "->", " ", "False"}], ",", " ", 
      RowBox[{"AxesLabel", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
        "}"}]}], ",", " ", 
      RowBox[{"ViewPoint", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0.5"}], "}"}]}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"time", ",", " ", 
      RowBox[{"t0", " ", "+", " ", "0.01"}], ",", " ", 
      RowBox[{"tend", " ", "-", " ", "0.01"}], ",", " ", "0.0001"}], "}"}]}], 
   "]"}], " "}]], "Input",
 CellChangeTimes->{{3.758450660493008*^9, 3.758450665333894*^9}, {
   3.7584507189000864`*^9, 3.7584507568909426`*^9}, {3.7584508307551413`*^9, 
   3.7584508325273056`*^9}, {3.7584508898116407`*^9, 
   3.7584509168272314`*^9}, {3.758452221746763*^9, 3.7584523248423505`*^9}, 
   3.758452469562991*^9, {3.7584554540702825`*^9, 3.7584554619740553`*^9}, {
   3.7584555647988544`*^9, 3.7584556334866343`*^9}, 3.7584556794953566`*^9, {
   3.758455725999753*^9, 3.7584557282791667`*^9}, 3.758455765135393*^9, 
   3.758459655825858*^9, {3.758459707466715*^9, 3.7584597092984505`*^9}, {
   3.7584622118968573`*^9, 3.7584622135352993`*^9}, {3.758462748942848*^9, 
   3.758462751693962*^9}, 3.758514149810066*^9, {3.758514249873308*^9, 
   3.7585142712175846`*^9}, {3.7585163893843803`*^9, 
   3.7585164024550133`*^9}, {3.7585170979334493`*^9, 
   3.7585171116366544`*^9}, {3.758517460445441*^9, 3.758517465232693*^9}, 
   3.7585175959242344`*^9, {3.7585176309235926`*^9, 3.7585176309235926`*^9}, {
   3.7585187414119415`*^9, 3.7585187418674216`*^9}, {3.7585193865541725`*^9, 
   3.75851939601441*^9}, {3.7585196669616184`*^9, 3.758519668570157*^9}, {
   3.7585197348267794`*^9, 3.758519771386014*^9}, {3.7585198146905413`*^9, 
   3.758519902719034*^9}, {3.7585199813302794`*^9, 3.758520004229389*^9}, {
   3.799930767806364*^9, 3.7999308056355867`*^9}, {3.7999308595044117`*^9, 
   3.7999308923598814`*^9}, {3.7999309294529963`*^9, 
   3.7999309691198783`*^9}, {3.7999311007828693`*^9, 
   3.7999311143317113`*^9}, {3.799931144362832*^9, 3.7999311492768984`*^9}, {
   3.799931299504156*^9, 3.7999313049177704`*^9}, {3.7999313361398125`*^9, 
   3.79993135163671*^9}, {3.7999313877994356`*^9, 3.7999314170988245`*^9}, {
   3.7999314644545035`*^9, 3.7999315459590054`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "left", " ", "and", " ", "right", " ", "hands", " ", "animation", " ", "of",
    " ", "inverse", " ", "kine", " ", "solution", " ", "and", " ", "desired", 
   " ", "trajectory", " ", "to", " ", "be", " ", "followed"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7999344574839635`*^9, 3.7999345144319115`*^9}}],

Cell[BoxData[
 RowBox[{"animationboth", " ", "=", " ", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"Show", "[", "\n", "       ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"assiemer", " ", "[", 
        RowBox[{"qsolr", "[", "time", "]"}], "]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"assiemel", " ", "[", 
        RowBox[{"qsoll", "[", "time", "]"}], "]"}], "}"}], ",", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{"ParametricPlot3D", "[", 
        RowBox[{
         RowBox[{"posr", "[", "k", "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"k", ",", " ", "t0", ",", " ", "time"}], "}"}], ",", "\n", 
         "     \t\t\t", 
         RowBox[{"PlotPoints", " ", "->", " ", "500"}], ",", "\n", 
         "     \t\t\t", 
         RowBox[{"MaxRecursion", " ", "->", " ", "13"}]}], "\n", 
        "     \t\t\t", "]"}], "}"}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Desired", " ", "Trajectory"}], " ", "*)"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"ParametricPlot3D", "[", 
        RowBox[{
         RowBox[{"posl", "[", "k", "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"k", ",", " ", "t0", ",", " ", "time"}], "}"}], ",", "\n", 
         "     \t\t\t", 
         RowBox[{"PlotPoints", " ", "->", " ", "500"}], ",", "\n", 
         "     \t\t\t", 
         RowBox[{"MaxRecursion", " ", "->", " ", "13"}]}], "\n", 
        "     \t\t\t", "]"}], "}"}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Desired", " ", "Trajectory"}], " ", "*)"}], ",", "\n", "   ", 
      RowBox[{"PlotRange", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin3d", ",", " ", "xmax3d"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"ymin3d", ",", " ", "ymax3d"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"zmin3d", ",", " ", "zmax3d"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"Boxed", " ", "->", " ", "False"}], ",", " ", 
      RowBox[{"AxesLabel", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
        "}"}]}], ",", " ", 
      RowBox[{"ViewPoint", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0.5"}], "}"}]}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"time", ",", " ", 
      RowBox[{"t0", " ", "+", " ", "0.01"}], ",", " ", 
      RowBox[{"tend", " ", "-", " ", "0.01"}], ",", " ", "0.0001"}], "}"}]}], 
   "]"}], " "}]], "Input",
 CellChangeTimes->{{3.758450660493008*^9, 3.758450665333894*^9}, {
   3.7584507189000864`*^9, 3.7584507568909426`*^9}, {3.7584508307551413`*^9, 
   3.7584508325273056`*^9}, {3.7584508898116407`*^9, 
   3.7584509168272314`*^9}, {3.758452221746763*^9, 3.7584523248423505`*^9}, 
   3.758452469562991*^9, {3.7584554540702825`*^9, 3.7584554619740553`*^9}, {
   3.7584555647988544`*^9, 3.7584556334866343`*^9}, 3.7584556794953566`*^9, {
   3.758455725999753*^9, 3.7584557282791667`*^9}, 3.758455765135393*^9, 
   3.758459655825858*^9, {3.758459707466715*^9, 3.7584597092984505`*^9}, {
   3.7584622118968573`*^9, 3.7584622135352993`*^9}, {3.758462748942848*^9, 
   3.758462751693962*^9}, 3.758514149810066*^9, {3.758514249873308*^9, 
   3.7585142712175846`*^9}, {3.7585163893843803`*^9, 
   3.7585164024550133`*^9}, {3.7585170979334493`*^9, 
   3.7585171116366544`*^9}, {3.758517460445441*^9, 3.758517465232693*^9}, 
   3.7585175959242344`*^9, {3.7585176309235926`*^9, 3.7585176309235926`*^9}, {
   3.7585187414119415`*^9, 3.7585187418674216`*^9}, {3.7585193865541725`*^9, 
   3.75851939601441*^9}, {3.7585196669616184`*^9, 3.758519668570157*^9}, {
   3.7585197348267794`*^9, 3.758519771386014*^9}, {3.7585198146905413`*^9, 
   3.758519902719034*^9}, {3.7585199813302794`*^9, 3.758520004229389*^9}, {
   3.799930767806364*^9, 3.7999308056355867`*^9}, {3.7999308595044117`*^9, 
   3.7999308923598814`*^9}, {3.7999309294529963`*^9, 
   3.7999309691198783`*^9}, {3.7999311007828693`*^9, 
   3.7999311143317113`*^9}, {3.799931144362832*^9, 3.7999311492768984`*^9}, {
   3.799931299504156*^9, 3.7999313049177704`*^9}, {3.7999313361398125`*^9, 
   3.79993135163671*^9}, {3.7999313877994356`*^9, 3.7999314170988245`*^9}, {
   3.7999314644545035`*^9, 3.7999315459590054`*^9}, {3.79993415721865*^9, 
   3.7999341685021353`*^9}, {3.799934257348915*^9, 3.799934313528778*^9}, {
   3.7999343554442167`*^9, 3.7999343683004785`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plots (done)", "Section",
 CellChangeTimes->{{3.7993046504795775`*^9, 3.7993046703943205`*^9}, {
  3.7995866347076197`*^9, 3.7995866517785664`*^9}, {3.799934435954816*^9, 
  3.7999344385696363`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"assieme_", "[", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0"}], "]"}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xmin3d", ",", "xmax3d"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ymin3d", ",", "ymax3d"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"zmin3d", ",", "zmax3d"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{
  3.726662789348078*^9, {3.726662943705654*^9, 3.726662944508189*^9}, {
   3.726663012047241*^9, 3.7266630155625863`*^9}, {3.7266633052133703`*^9, 
   3.726663307453866*^9}, {3.7266689778824735`*^9, 3.726668978988211*^9}, {
   3.7266737001027117`*^9, 3.726673700420924*^9}, {3.726673948169004*^9, 
   3.7266739485472565`*^9}, {3.726674511278406*^9, 3.7266745401131563`*^9}, {
   3.7266746360083866`*^9, 3.726674636612789*^9}, {3.726675618163138*^9, 
   3.72667561851087*^9}, {3.726681828362344*^9, 3.7266818584024353`*^9}, {
   3.7266819215526953`*^9, 3.7266819218557262`*^9}, {3.726682021908248*^9, 
   3.7266820225976*^9}, {3.7266836971261783`*^9, 3.726683699538417*^9}, {
   3.7266837875501924`*^9, 3.726683790609763*^9}, {3.726683912564397*^9, 
   3.726683948029211*^9}, 3.7266894501680527`*^9, 3.7266933651409407`*^9, {
   3.726766952810869*^9, 3.7267669596024013`*^9}, {3.7267670173989763`*^9, 
   3.7267670175810986`*^9}, {3.7268324098853827`*^9, 
   3.7268324103496923`*^9}, {3.726832441410447*^9, 3.726832495419097*^9}, {
   3.7268325870783443`*^9, 3.7268325905646734`*^9}, {3.7268330493858733`*^9, 
   3.7268330787775126`*^9}, {3.7269222606908503`*^9, 3.726922262709197*^9}, {
   3.7275179179574165`*^9, 3.7275179201450467`*^9}, {3.7584485370383897`*^9, 
   3.758448552606547*^9}, {3.7584489569108095`*^9, 3.7584489586754794`*^9}, {
   3.758449352655596*^9, 3.7584493679390473`*^9}, {3.758449862868603*^9, 
   3.758449875493161*^9}, 3.7585175959212294`*^9, {3.758517630914579*^9, 
   3.758517630914579*^9}, {3.7995587574895506`*^9, 3.799558769424492*^9}},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "Show", " ", "how", " ", "joints", " ", "angles", " ", "move", " ", "the", 
    " ", "arm"}], ",", " ", 
   RowBox[{
   "single", " ", "arm", " ", "plots", " ", "and", " ", "double", " ", "arms",
     " ", "plot"}]}], "  ", "*)"}]], "Input",
 CellChangeTimes->{{3.799582725766685*^9, 3.7995827572199216`*^9}, {
  3.7996064587752604`*^9, 3.799606511011916*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"right", " ", "arm"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7996065171806993`*^9, 3.7996065248331404`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"assiemer", "[", 
       RowBox[{"{", 
        RowBox[{
        "q1r", ",", " ", "q2r", ",", " ", "q3r", ",", " ", "q4r", ",", " ", 
         "q5r", ",", " ", "q6r", ",", " ", "q7r", ",", " ", "q8r", ",", " ", 
         "q9r", ",", " ", "q10r"}], "}"}], "]"}], ",", " ", 
      RowBox[{"PlotRange", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin3d", ",", " ", "xmax3d"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"ymin3d", ",", " ", "ymax3d"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"zmin3d", ",", " ", "zmax3d"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"Boxed", " ", "->", " ", "False"}], ",", " ", 
      RowBox[{"AxesLabel", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
        "}"}]}], ",", " ", 
      RowBox[{"ViewPoint", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "2"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q1r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q2r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q3r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q4r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q5r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q6r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q7r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q8r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q9r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q10r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}]}], " ", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7995615384416866`*^9, 3.7995615389673147`*^9}, {
   3.7995640619450254`*^9, 3.799564070893553*^9}, {3.7995641479028344`*^9, 
   3.799564173867876*^9}, {3.799577803098279*^9, 3.7995778074605293`*^9}, 
   3.799577864872572*^9, {3.7995825805449653`*^9, 3.7995826105118427`*^9}, 
   3.7996059618338966`*^9, 3.799606110516128*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"left", " ", "arm"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7996065280576897`*^9, 3.799606532683281*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"assiemel", "[", 
       RowBox[{"{", 
        RowBox[{
        "q1l", ",", " ", "q2l", ",", " ", "q3l", ",", " ", "q4l", ",", " ", 
         "q5l", ",", " ", "q6l", ",", " ", "q7l", ",", " ", "q8l", ",", " ", 
         "q9l", ",", " ", "q10l"}], "}"}], "]"}], ",", " ", 
      RowBox[{"PlotRange", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", " ", "1.5"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.5"}], ",", " ", "1"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "2"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"Boxed", " ", "->", " ", "False"}], ",", " ", 
      RowBox[{"AxesLabel", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
        "}"}]}]}], 
     RowBox[{"(*", 
      RowBox[{",", 
       RowBox[{"ViewPoint", "\[Rule]", "Right"}]}], "*)"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q1l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q2l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q3l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q4l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q5l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q6l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q7l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q8l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q9l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q10l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}]}], " ", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.799560874833705*^9, 3.7995609652777405`*^9}, {
   3.799561022503049*^9, 3.7995611796320615`*^9}, {3.7995613412320414`*^9, 
   3.7995614170904665`*^9}, 3.7995778699584084`*^9, {3.7995788810481577`*^9, 
   3.799578882528304*^9}, {3.7995826140294375`*^9, 3.799582644999633*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"both", " ", "arms"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7996065397329135`*^9, 3.7996065461777363`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"assiemeboth", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "q1r", ",", " ", "q2r", ",", "q3r", ",", " ", "q4r", ",", " ", "q5r",
           ",", " ", "q6r", ",", " ", "q7r", ",", " ", "q8r", ",", " ", "q9r",
           ",", " ", "q10r"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "q1l", ",", " ", "q2l", ",", "q3l", ",", " ", "q4l", ",", " ", "q5l",
           ",", " ", "q6l", ",", " ", "q7l", ",", " ", "q8l", ",", " ", "q9l",
           ",", " ", "q10l"}], "}"}]}], "]"}], ",", " ", 
      RowBox[{"PlotRange", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin3d", ",", " ", "xmax3d"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"ymin3d", ",", " ", "ymax3d"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"zmin3d", ",", " ", "zmax3d"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"Boxed", " ", "->", " ", "False"}], ",", " ", 
      RowBox[{"AxesLabel", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
        "}"}]}], ",", " ", 
      RowBox[{"ViewPoint", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "2"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q1r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q2r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q3r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q4r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q5r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q6r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q7r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q8r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q9r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q10r", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q1l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q2l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q3l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q4l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q5l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q6l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q7l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q8l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q9l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q10l", ",", "0"}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", 
      RowBox[{"+", "Pi"}]}], "}"}]}], "  ", "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.7995984181120715`*^9, {3.799730517334225*^9, 3.799730527437417*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "shows", " ", "desired", " ", "position", " ", "and", " ", "orientation", 
   " ", "in", " ", "time", " ", 
   RowBox[{"(", 
    RowBox[{"desired", " ", "trajectory"}], ")"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.799606574417136*^9, 3.799606608024907*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"riftimeEEl", "[", "time", "]"}], ",", " ", 
       RowBox[{"riftimeEEr", "[", "time", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xmin3d", ",", " ", "xmax3d"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"ymin3d", ",", " ", "ymax3d"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"zmin3d", ",", " ", "zmax3d"}], "}"}]}], "}"}]}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Boxed", " ", "->", " ", "False"}], ",", " ", 
     RowBox[{"AxesLabel", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
       "}"}]}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"ViewPoint", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "t0", ",", " ", "\"\<Time\>\""}], "}"}], ",", "t0",
      ",", "tend"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.799598421320098*^9, 3.7995985562119446`*^9}, {
   3.799598596521023*^9, 3.7995986002454357`*^9}, {3.799599272621426*^9, 
   3.7995993431364336`*^9}, 3.7996020403117795`*^9, 3.7996024191982484`*^9, 
   3.7996025364974527`*^9, 3.799602590974831*^9, {3.799602658829427*^9, 
   3.7996026649579344`*^9}, {3.799606617073227*^9, 3.799606643460726*^9}, {
   3.7999006837722692`*^9, 3.7999007228429375`*^9}, {3.7999007568270483`*^9, 
   3.7999007829795017`*^9}, {3.799900998427977*^9, 3.7999010002997746`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`time$$ = Rational[1, 60], Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`time$$], 
       Rational[1, 60], "Time"}, 
      Rational[1, 60], 3}}, Typeset`size$$ = {450., {187., 194.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`time$35938$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`time$$ = Rational[1, 60]}, 
      "ControllerVariables" :> {
        Hold[$CellContext`time$$, $CellContext`time$35938$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[{
         $CellContext`riftimeEEl[$CellContext`time$$], 
         $CellContext`riftimeEEr[$CellContext`time$$]}, 
        PlotRange -> {{$CellContext`xmin3d, $CellContext`xmax3d}, \
{$CellContext`ymin3d, $CellContext`ymax3d}, {$CellContext`zmin3d, \
$CellContext`zmax3d}}, Boxed -> False, AxesLabel -> {"x", "y", "z"}, 
        ViewPoint -> {1, 1, 1}], "Specifications" :> {{{$CellContext`time$$, 
          Rational[1, 60], "Time"}, 
         Rational[1, 60], 3}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{509., {242., 249.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.799900728499408*^9, 3.7999007387469797`*^9}, {
   3.799900770238423*^9, 3.7999007846247516`*^9}, 3.7999009156234865`*^9, 
   3.7999009749833407`*^9, {3.7999010070539255`*^9, 3.7999010125812216`*^9}, 
   3.7999025185242867`*^9, 3.799902631794203*^9, 3.7999028575363193`*^9, 
   3.7999051891135545`*^9, 3.7999061633996415`*^9, 3.799924426499816*^9, 
   3.7999287314019375`*^9, 3.7999290501095123`*^9, 3.7999294677038064`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Heart", "Section",
 CellChangeTimes->{{3.7995672946109076`*^9, 3.799567300580344*^9}, {
  3.7999010234034605`*^9, 3.7999010710265703`*^9}, {3.7999347937949753`*^9, 
  3.7999347957170005`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolarPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", "t", "]"}], 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Abs", "[", 
         RowBox[{"Cos", "[", "t", "]"}], "]"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", "t", "]"}], "+", 
       RowBox[{"7", "/", "5"}]}], ")"}]}], "-", 
    RowBox[{"2", 
     RowBox[{"Sin", "[", "t", "]"}]}], "+", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.799604407189679*^9, 3.7996044071976156`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Ect2xCj1h52OMg/hlbtOhRl0INunldvlb4ZAKJQ5i3y7Cz3SaYo4jhuGg0tK
Z3R8uhDt9mWGbsZhmL3o+Zanpgu1zjEQ3biHwT6szzLndjeyWBmw97o6DNNl
BUULaj2o8FrILb3Xw3Bbh+WLjUUfqg4WVyfNDYNwsdwgObkPybvMrfzZGQZ2
JZqt+IU+NHmBj1qfngia7bsd3E796F3l6Ml7/ERQP3/ieNOnAeRn1Dixq08E
hf3BKyVtA0jsi5pW72PKfBoWN0TNMYguqx3K/UqZkx83UY29TBhEA1LRstkf
iRDAa63len8Imb6yKrcsIkJOZv+rdO8hFM8+HKJYQ4QmHk3WA3+G0IFl2dV9
HURwiDdVFFkZQlx5FTJMM0QwMqfWv/phGOkUvbENYiPBwn+KDAa5RGTCa0vX
+ZQyb/svnCUNEJFa3dJVh1ckKLQsUfKnIaHM45q3lt6QYLByp1NTi4R6z+Vm
vAokwQb/EKvHPAllHxot+JlFAvWCOlG+42SkOjjgTF9IgoIC3fZJICPutaKS
2+UkeB5xfanPn4zcc3wKVNtJsN8vAqcjOoJUbRecHiyRIGHk9/B/+iPI5PCd
126bFJ1x53d6r8cIemXIjVlTdIlOptdNUtsIGmtK3mw5RAYNT6oo1t0RZIRb
MJM/RgaTphw6yzOjyOJU9LIXBxlOjK9deek0isK42JzfnyFDlX5R0JnYUaTr
7Tp6U5iiHzVF2TbrR9Fr8ff3u8TIkLLu37DFO4aa7EvcbWXJMB6g5y2kPIbM
eOvCnOXJIHrD76293RhqMRLK0FEgw3mXNb2ntWOITq25zUOdov9uzohmboyh
5eCWLWFtMtyXO+x1QmAcYRFHcr/rUfQ+sxlV0t1xJHTBK6v/HhneHhIw1PUa
RzX0nyOGTckg1j0lK5A1jtwdOTiTH5JBkdP5LhtpHDmQHg0CRa8ytoUN3pOb
QLn328j/KPr2W9ephDSrCTR3aNQ9xoYM34df6pyKmUATO1HHVV5R9DsHCs1u
nEAaWYk6yJ4MhpsuTI/3JtC6iMjsqiMZpNbtrC6dn0Taz1p9l16T4Yx+nh6/
8ST6vIENZbmQYWj556uL/pOI5UVMpDRFv39f6bUwQpPIYC/K9i1F38cm6wzG
zU0i85XnR4Mo+l/RRN+BgWcKJVy6JXbfg6Ijme16PqlPoSNVs65rFMY98ksU
dp9CJPmkNFVPMlw0bXw/nj6F0gw0HP73+8MJnRJ2RJxC1bo3fa9T+GCBND6d
eRpxf3SMIlK+v0Fj2l94fRo9arJ4LE9hnk/paiOvplHmilDEfcr+Cq921vjj
p5EW4d7SDcr58n2evvLomkYHO6VOT7yh6F5Jx0drdDMoTcJnVJliH8ODrSde
MjNoLCJr0YpiP/UrbvZzz2bQE7dMvDbFP6/PW7JMRc0g4yWO+nU7MnhnlWwU
N80gAWYuRsOXZFi3MzZO2zeLZK3eebyxJoOuRO9wtvgssnuFiMbPyVCyepaj
5dEssq9vmdqzIMMAXVwsddgs0q2w0Dd6TIZ9+3dYVGpnkXdm65TTfTJ0tF0/
8HtnFrWp7NzTNiYDv9hA0y+zOZQe7jMof5cMeg/km+U+zyHiPvrn2hpkuFVV
9Gehcg7li77vPa1Mhn432dhylnk0mLOuu0Egw6M15+PSF+bRn//0Z3akyeD7
9/2PnFvzSCP3i3mROBkchmlP1DvPo4PEXUEbSn3IfSFEP/gyj1L6mdcf8JCB
VbFDnzptHvU2dhczsZFhutg1yoA0jzg1aR5E0ZHh6bX/zt6/vYDCY0prX4xR
9H6uiYrkgwX03NrUQHyA0h/CsomMbxaQY+b7CxltJKA6iXvTnr6A3i9oDHRh
JBDLEDkUy7aIsp6zddR9JgFnxlbLqOgiEuMaL+D0JUGfp1qU8O1FtB1AUyTs
RgK9j0peFU6LaGOO3znInASzDl8v8vQtIssOPer7l0nAljtf57K8iFZj2ttz
zpHgs3zkcD/DEtKzufy7jpsEdNFUWbGySwjT5CRK0FD61WHmVwrRS4jNc4CP
qp4It9Q0zTJzlpCZ5UDOHUp/Ne/MFedpWkJhS01GD1OJFJ3ZnbeFW0Zfkzjc
SgOI8Kd8LSbLbBm9OHfzupU6ERi4Onf3+FbQdH1LqH3pMKj9C6syvbqCXPJ7
pFPThkHpvpxI8d0VSvz/C4yNHAZPeYVVe+8VRMquPVZlNww/nIoC0fgKouPY
GZznG4aeStV73kmrKKDyWnaR/RBQu6s5JJasotzPz/RqTYZguzCgorxnFR2h
PbATcmsIDFtluacPrCGRIgMRY8r96D7llTxhsYYWwxrjI60H4ZYNh6m94Dq6
ZuBXJN7SD6n1X0a4rq0jA7tyJZ3QfqB66uWQb7iOLl0cetZn0A+67cxJLf7r
aMhZJfsQqQ9Yf+0zsF5ZR7zSYrHHJnvh1g3vsgtFG6jpwtqDip5u+PQm1Xh/
5wZa5REM4PrSDf7OT7wa5jbQlcBUzV71bohgzVIV5t1EMisWjz3LusBCvHPq
tOcmIjFYVwfHdkJv+rGVgmtb6JFFmfC0Qjukpf5UcDLYQnpm8k2JG21wmuZG
9CnbLfTnFRt/U1IbHNrKkL38YwsxYhyyuvRtgI466j/Z20K03j+rjMtboMFS
+EVo9jYaEalsjTnRBH4EH81bjLtondXj/XZpGewG/22OOLWLSs/ccS2jLYNb
bNPBbZd2UfQ+mHmrWApnIwWH5ox30a1k2z9LVcUQxnUjrCFlF73tjaDRfF0I
Hw4pXl25uYfCN5kmqebSwM5fT+SF3h4S88q445aYAnnM9rbVT/dQomG2u6D1
b4iyZaTjCthDB84eiju1Egsv9E+VEzr3UHTD9MhtOX84S2cpE3Eehx3lNMm7
e+YnOrR5t7P+Eg4zzlomn/kSh3p27cpnAIet3D70x+K/JDRXefnMuhoOYz8U
3f75dRoa6MxZuPgCh0mEZKnZvslBNlRz6eeTcFhGGv5i73gJchmofns5HYdp
zdroBjSXojN4zfXzuThs/PDqIm1+Geod4DAgluMwbRvuu6IBFSjx/bSK/hAO
y/RwrFG4VoOGlOJc3I/gMREtUQvLkSbUnP8jcZQFj70xoKkQ0GlGxssyyZc5
8Zi74lexc9XNaMk1bDGBH48R7rVT06S0oE3Jjx5J0nhsOX2weMypDdEw9tk5
Ax4zb/8wWD5LmftSy7JlruMxC8IFN7JZO7Kq42xyV8Fj8qHbc4NKHeh+YVOi
kDEeY27Y7crh6UJtX3+cfngfjyWWsj/0+NKF1Gw4n/g9xmPv4km/3jF0IxPd
N/TfX+AxXIhGndRGN/pxP5Z7+A0eE3s7K3i2vRdxLByXdvPAY5ml6oNJyn3o
ezBVPP07POYdMwv3yvrQ5v0ywpgfHkPmPc/uZvUjXqHczdQwPPZK5NwV9y+D
SLFPQSQtAo/V+3u/L9o/hM43vbsdEY3Hgu1uCmpeH0LWClQMUr/w2IOQpr+5
hUPo2n+yYWPxeOw03+0cn80hdFGQe9AjCY/Rq1l/tro0jDhpeR47p+Kxn0ym
h+zSh5H827GgnnSKf2dO5YXMDqNv3om3T2fhsbfufg/LzxIR3+vKi065lPOp
NXTrxxGRcqGH+rs8PFb96Ux6EYmIVCrWGl0K8JiOttAvMV4SSpIXbxLB8NhK
D92OYgQJedpyXB0vxmONqQLPJrtJ6K/b9rhfKR6zP+3I9I2VjD53rFRyluMx
pXcONjraZORoZdwSWoHH/sg+YjoZTEb+p2v3dirx2N2OG/YbTWTEOUetqFaN
xzoYhvn6D42gU1KX6DJr8dj9FEObSp8RdPngjE15HR4LUiw5Xl9FmdsuT3eV
1OMxF65Ftn7aUTTRdEb8dwMeyzHN2li9PoqUqxpc3jRS7LkYK8PuOYq2ZZRT
rzThsbYu0fs3i0dRW45CyQiF3edil5z2RtGqy680x2Y8di+FyypHdgyx1L97
uU7hXv4Ig63XYygle2bHvAWP1UytZfmiMWS/8De4hMLsBVNhp6jGkWSG/vl9
rXiMvN/JouTmOLrGGV8jQOHkMLd3j33GUfBvzFiSwnRnClSYGsZRWejJCSEK
u0zWcpccmUD8l6JNaSmcdVPC0E57AuWZmJRVUdY/ZvvYTCSM8rx+jMGGwv9E
UeBE3wT6bMd4aR+FZz753IrnmUSea3Twv/OLJTFMPHowiUzGzXg7KfbVvXdv
PJMwiXiv7PVwUJh5kddwYmoShYefMFeg+EdX+8xs0vkplInuVutR/PfjXyP5
qe0UMq6J3NCk+Jc1xzT6bM4UehRFWBej+N/X6YLLxOYUGpIYL92ooZynJbo/
9uo0clr7ahBPiZ+FggDPPY9pZHYgs0imCo9RyxjEHqmYRgMJi9N/KfGvOjZW
XUyZo8KtrUaPU/LD+HX4vKXKDDJq0pUNpOST3Rnn4vS2GRRtWh4Rj/DYTbWj
524fn0U3/rysjS3EY0/ts4/3GswiLsm4KK1/eGzb7swWiTiLGEPYFGlyKPlo
x5Gpzz+HXF5l1ERS8v12w2PrSvM5RMd029yTUh/VQprv3ebn0Han6MemP3gs
921yywjbPMr5e+QbNaWe7sXXC3jJzCNp+iQP3lg8Fv7o4mLqm3l0jX/8/PlQ
POZwY8IqmXoBKZyNvJwVjMc+JVhlHOdfQC86t+/xBOCx9dI4ldcKC+hEbx1L
yns8NmgbbcTns4B6Y4OvxjjgMe1nhV+pGRcRx+3Ow8Yv8Vjh5R2tkxcWEe3R
QQUaK0o89lvQS2gsIv/u0MP/UfrR7OSBm1LBiyj61aDuuBYem3upM5zMsoTi
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
SIs=
      "]]}}, {}, {{{}, {}, {}, {}}, {}}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction:>Identity,
  Method->{},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02]]], "Output",
 CellChangeTimes->{
  3.799604411924679*^9, 3.7996059446045337`*^9, 3.7996060008821354`*^9, 
   3.799606038358439*^9, 3.799730455078911*^9, 3.799900338231742*^9, 
   3.7999003744869223`*^9, 3.7999009157006025`*^9, 3.7999009751575933`*^9, {
   3.7999010070839605`*^9, 3.799901012611271*^9}, 3.7999025187035565`*^9, 
   3.7999026319844975`*^9, 3.799902857751643*^9, 3.799905189288828*^9, 
   3.7999061635158267`*^9, 3.7999244274282837`*^9, 3.7999287317519655`*^9, 
   3.7999290505651608`*^9, 3.799929467827527*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Trial", "Section",
 CellChangeTimes->{{3.7999010419513855`*^9, 3.7999010745708666`*^9}, {
  3.799934803480871*^9, 3.7999348043357725`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "posinthandl", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.799907235015417*^9, 3.799907237110861*^9}, {
  3.799907385671318*^9, 3.7999073931911497`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.7999072235262246`*^9, 3.7999072377960596`*^9}, 
   3.7999073950561714`*^9, 3.7999244313603783`*^9, 3.7999287318636684`*^9, 
   3.7999290505861053`*^9, 3.799929467846055*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Draw3", "[", "posinthandl", "]"}]], "Input",
 CellChangeTimes->{{3.79990698354543*^9, 3.7999069970775423`*^9}, {
   3.7999070912147727`*^9, 3.7999071393752165`*^9}, {3.799907263806569*^9, 
   3.799907271885685*^9}, {3.799907591855654*^9, 3.7999075937186975`*^9}, 
   3.799907756151789*^9, {3.7999246839989896`*^9, 3.799924686778*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Scala$$ = 1, $CellContext`xx$$ = 
    0, $CellContext`\[CapitalDelta]xx$$ = 189., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`Scala$$], 1}, 0.1, 4}, {{
       Hold[$CellContext`xx$$], 0}, 0, 180}, {{
       Hold[$CellContext`\[CapitalDelta]xx$$], 189.}, 0, 189.}}, 
    Typeset`size$$ = {1375., {166., 174.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`Scala$35994$$ = 0, $CellContext`xx$35995$$ = 
    0, $CellContext`\[CapitalDelta]xx$35996$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`Scala$$ = 1, $CellContext`xx$$ = 
        0, $CellContext`\[CapitalDelta]xx$$ = 189.}, "ControllerVariables" :> {
        Hold[$CellContext`Scala$$, $CellContext`Scala$35994$$, 0], 
        Hold[$CellContext`xx$$, $CellContext`xx$35995$$, 0], 
        Hold[$CellContext`\[CapitalDelta]xx$$, \
$CellContext`\[CapitalDelta]xx$35996$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`b = Transpose[$CellContext`posinthandl]; 
       ListLinePlot[{
          Transpose[{$CellContext`xAxis, 
            Part[$CellContext`b, 1]}], 
          Transpose[{$CellContext`xAxis, 
            Part[$CellContext`b, 2]}], 
          Transpose[{$CellContext`xAxis, 
            Part[$CellContext`b, 3]}]}, ImageSize -> 
         1100 $CellContext`Scala$$, AspectRatio -> 0.25/$CellContext`Scala$$, 
         PlotRange -> {{$CellContext`xx$$, $CellContext`xx$$ + $CellContext`\
\[CapitalDelta]xx$$}, All}]), 
      "Specifications" :> {{{$CellContext`Scala$$, 1}, 0.1, 
         4}, {{$CellContext`xx$$, 0}, 0, 
         180}, {{$CellContext`\[CapitalDelta]xx$$, 189.}, 0, 189.}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1434., {256., 263.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.799907274842084*^9, 3.7999075785036764`*^9, 3.7999077575468664`*^9, 
   3.7999079322708054`*^9, 3.7999083932274027`*^9, {3.7999244313892994`*^9, 
   3.799924453371714*^9}, 3.799924689262627*^9, 3.7999287319823837`*^9, 
   3.7999290506289907`*^9, 3.799929467913*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Draw3", "[", "datavell", "]"}]], "Input",
 CellChangeTimes->{{3.7999078882565165`*^9, 3.7999079036030855`*^9}, 
   3.799924476384717*^9, {3.799924695650441*^9, 3.799924697927825*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Scala$$ = 1, $CellContext`xx$$ = 
    0, $CellContext`\[CapitalDelta]xx$$ = 189., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`Scala$$], 1}, 0.1, 4}, {{
       Hold[$CellContext`xx$$], 0}, 0, 180}, {{
       Hold[$CellContext`\[CapitalDelta]xx$$], 189.}, 0, 189.}}, 
    Typeset`size$$ = {1375., {165., 173.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`Scala$37310$$ = 0, $CellContext`xx$37311$$ = 
    0, $CellContext`\[CapitalDelta]xx$37312$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`Scala$$ = 1, $CellContext`xx$$ = 
        0, $CellContext`\[CapitalDelta]xx$$ = 189.}, "ControllerVariables" :> {
        Hold[$CellContext`Scala$$, $CellContext`Scala$37310$$, 0], 
        Hold[$CellContext`xx$$, $CellContext`xx$37311$$, 0], 
        Hold[$CellContext`\[CapitalDelta]xx$$, \
$CellContext`\[CapitalDelta]xx$37312$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`b = Transpose[CompressedData["
1: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
HytD3xQ=
          "]]; ListLinePlot[{
          Transpose[{$CellContext`xAxis, 
            Part[$CellContext`b, 1]}], 
          Transpose[{$CellContext`xAxis, 
            Part[$CellContext`b, 2]}], 
          Transpose[{$CellContext`xAxis, 
            Part[$CellContext`b, 3]}]}, ImageSize -> 
         1100 $CellContext`Scala$$, AspectRatio -> 0.25/$CellContext`Scala$$, 
         PlotRange -> {{$CellContext`xx$$, $CellContext`xx$$ + $CellContext`\
\[CapitalDelta]xx$$}, All}]), 
      "Specifications" :> {{{$CellContext`Scala$$, 1}, 0.1, 
         4}, {{$CellContext`xx$$, 0}, 0, 
         180}, {{$CellContext`\[CapitalDelta]xx$$, 189.}, 0, 189.}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1434., {255., 262.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.799907882278448*^9, 3.799907904811878*^9}, 
   3.799907936633561*^9, 3.799924431431188*^9, 3.7999244767565794`*^9, 
   3.7999247002921286`*^9, 3.7999287320432253`*^9, 3.7999290506698914`*^9, 
   3.7999294687376537`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Draw3", "[", "dataposl", "]"}]], "Input",
 CellChangeTimes->{
  3.7999078195199966`*^9, {3.7999247079107704`*^9, 3.7999247111850634`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Scala$$ = 1, $CellContext`xx$$ = 
    0, $CellContext`\[CapitalDelta]xx$$ = 189., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`Scala$$], 1}, 0.1, 4}, {{
       Hold[$CellContext`xx$$], 0}, 0, 180}, {{
       Hold[$CellContext`\[CapitalDelta]xx$$], 189.}, 0, 189.}}, 
    Typeset`size$$ = {1375., {166., 174.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`Scala$37359$$ = 0, $CellContext`xx$37360$$ = 
    0, $CellContext`\[CapitalDelta]xx$37361$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`Scala$$ = 1, $CellContext`xx$$ = 
        0, $CellContext`\[CapitalDelta]xx$$ = 189.}, "ControllerVariables" :> {
        Hold[$CellContext`Scala$$, $CellContext`Scala$37359$$, 0], 
        Hold[$CellContext`xx$$, $CellContext`xx$37360$$, 0], 
        Hold[$CellContext`\[CapitalDelta]xx$$, \
$CellContext`\[CapitalDelta]xx$37361$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`b = Transpose[CompressedData["
1:eJx1WHc8le/7r5SGKFqipWxJSeojerdIKkmkIRpKsiqfSJGsUlr2KGQdEbKO
kfGY2ZyjQUtLj9kwzlOi+j3Pye/rj+/r+8fzz/W6z33f13Vf13scqSP2hsfG
jRkzJov+BOjPZalrh8dPDsEuMw9Y1VWNxKjVsxKXk3hS8hNXBjmE3L2rae87
q6GxRO+CpwqJo9rCrMM/OMTFVRMnkR3VqGGZvj+4jER/1cKpmt85xLMaL/Ou
9mqsy5Rev0OZBCVvequUxyGiNJc+DSerkU70RGouJWF9rFSF188hKG6iUtSn
asjUZf1SUiJheNHw85NeDrHDUs4ztq0aLodVjZcrknDwdsrz+cohVBddKBz6
WI0n1MNkNQUSE6wex3T2cIg5Lxq+76bjiteVx/8jT6JJIyl8UReHuMr+MXMM
HT+WdMjIUI6ER8X7uofk6P4t2fKZG2RJxC/dNK/7A4fQTUh1Cabvb6Wxdu48
GRIp23/EX2zlEIEFGpWXeqoxe1Xo5fdLSLi1GsWVtnCIZe2GpsZUNVi5ST35
i0mUbn9FZDRxiAI/57ZpgjVQ1yw0DJYiMVky0kyhlkPInB0XPkmyBkm63une
i0isLbUq8S3iEMrM8eo1uDn2RfebhSTICS1bElI5xIwpoqcmGddgbOu4ydfo
uOvinf6pYRxCKLQ4Jd+5BlVfbX9m0nFPtaPcfx05xBWD+OPTsmrwQdDlojh9
7usBSxhu5hBTmmNPaU2pRZzP1Afn6PvHJU2O+SLAIcR8mnlCjrVwl3pwQIuu
T1dGaIuLaSPxM1fd6Hp/LQSCer+upN93h/KBbl+vBqI1zXbXcc869A7o7bu8
hoS649WuFPd6IkaeI9cnXQ9Ple2sKTokZJNyBLP16ohd93a2bW2qxx0tzpSp
+0iwbVJUxF7WEHRT0J3RgA+dQRlTT5Moour8x6yqJnLbcndr7G1EzTt557M3
Sdw4GHPe+lAlUfvj+9w5Ihy88iY1bmSR6BF7dkDgQAWRJpmtXGPDwVuJFsWS
DyS83Ntby2TKiBztMGHVag6EzAZmxc1tR9N17ScvqosJLaYN53Ox90/7cnOz
dqznJ1ZAaKvE7rWz4uJXQSL9Mu0oCL497bx6DlH3pbpsYwoXdNP7hIp1wPed
m9KL9HRCcczjlSc6uLD6d2L6Su8OmGeaqmu0JxDrTM+8VpjfhI1B4XTGndi4
QWF/3pxQQn7KwFXNrU1YJf0lfSC6E3TzbLztuZFQXaNnFnGUXi81TiRarwub
1hx/EVAcDJfPYTJjTzYh//CrmDrBbsg+Vv0l1ssCubhoRqZZE3ZMP7vw0tNu
TP4ppHVkIA37dnlaia9rwmKjxBcCKT2Q5E2/8WVRNiK7bt95L9iE+4nHrF39
PuNP4+GigjH5yLqZJOvziIvVLLmlvZe+wOm5XT7HlID519/nHu7nonxjilXr
6a+w81WVtPAvgbfMAgP1TxzYu4+vuLXiG07SXeuhVgZBxY9vLU05kG3zjKxP
+gaJy7d8FPzK8bEyND/4diMSOnSX/ZHqRXH7FdHS2ApYR92snGrUgP6bu/+V
DumFJPNspx5j94RYf42x9QhTFA96OrkP9zXajueOrUTZlvJA3Ri6P5ljnfow
S+Nh+jajSuzQ25ATolaDjpNKVMibPsj5PJq2/mQlzBVqp1c+qsK4ggliM9EP
iZ9yuXt3VUJRw7/WTbcSLn1pBtbh/dDhD2Il5oVt+X3oXQUqH+XeEPzWj/ch
P513+z2GhqDFQye3cjic8PvsggGsSxWe9XG4Ag8an+3pUSmDyM6Hgcd8BhBI
CZqHbq9ASU20dnZ/CULtxDyLawaQ/OFG3RL69wqLyxRbq4rh4aBDL+Wh9eap
/d9iynDkuW/03RMEtPiDyYPSUOqk3zml4KdnXwh6uJ5X2PIwfrzDwI/CEuyy
Dne6G5OP3PUeHypDedjZeehXVFkxfrzVc7QZ/wh7/8mqciziYe6eXh3Sj8C/
3Nu98kG5WHuqwaeplQezbVUTte4Uwv1CJGyNcsD1M/296ScPzutfBCoV5GOy
6jjFeRuyYRc7lq4chfwpCkik8uB5xerta3M2on+sIFNlKDx9msEu0s2Fc6fs
iknJWXih5bz3/ioKzZTjtjPF2XAaIEx9Z2fB5tx5GlIp9F58fXHQgo3Js6+s
JMIz0T6U2Nu0g4KXh2HWGZUsxL1TaNPTyoSy1MIBmz0UjAuH9QPmZoJO6sPZ
Xxlg0DLSjIKCoK6a++IMFBVac0JaM6BLuM5fY0mhT5bQltuWjnUMvLzJAB3c
bGVPYerZve+Db6Vh2Hbn7ZYvGbA4+FpH4ByFR8p+Qg3vHmKFjH/HsZmZkFR5
Iy3oTuFPLfvE2JepiLc8fzV9eyY2Me1/jUJU4FZh2zGpKDSyqev2ycTPiycL
/g2gMGk/g5gp2OC5I2JLRSYaafaJv0Ohdqu8q1RbMk6YrpnuPyELK8vTl9nF
0vdk2s4pGR5/UiwqdbJG5oWC8xKGOZNxRGVm2vzrWVB/sM7kQDqFRn3BLdUP
HsDNR3i2flMW6GZQu5RDwayId7hw1wMMre9riJ7KRsYy5sUoeLuuvTrpTxKk
I9z9Qlax0X5d/rNwEYUCAU2r9xlJSN47zEozZKP6E+Le0vG0Crso4+NJmKXp
bZpoObr+vNHwW9FZSSAbcyZsOzu6f3N0uH9yWSJCfH/o151ngz9muRSmyd85
4+2UCMvQl4YTndlYni83TYhNYWjhoZSXqxLxYd0Z6yZb9n/yWubvGHtr8D7K
gzKddA6woXXHOOpBCgUD8UArtbz7qGp41dKjywZ79Y9SC7o+OmwfeVn7+/DL
U72vvoYNEeWMiK8JFEITHLQVpO5jhdyJgDI5NvjHsihICTg7Dj5PwIoLLxxf
SrDBlwXx1MhcJEB83WLWZjE2TixmOpTCVjEvpXsGCZjtE0m/9Oh60QW289Jn
J+BQO6t+jfDo/jO2Dqhe+8RC9YLo47qz2Ii4JFt6mb5PShnX+FE+C27Wcnob
F7PBly2JFH4+TdfrDGPBq3mZ7ZqlbGz2taFHgALmSW8e9GBhVW6KsqbKaL51
uYnupMN/x7VEPAeVLFhgx4v0nV8+Gtd3XeTcbsDC3ZmkVoPa6P6b40VXDmmy
oM+RvbJTg40nre+EAui4/aWwr+/kWLCp32PWh9H4MgnVBfFiLNw+VlK+UHt0
n1v3Dd6YDsfDOnJJ30G90XP3lb4UX/s+HnXmUg7HDNiYxH9ICnyYJeKxqDvx
mYkJG3/5k8aBZXN6I0LjMfy73ncGjSe37zGAQmHCsMRWj1Px0MpjrT9uOdon
lf1zDex14rFRJvWo6Wk23rC9XDiZFNoluVrdEvFIXn3Su/MCGzRouKZmU7BU
LF/S2xcH97TdyRJebDBouSSPvk+n60frxji8GjKaJeHDBoeB73wKtjcd7px6
GAdj/Qt6DVfZWPJqkJ5sOq6+50hkUBwOljvREM3GBDVRWsJRGFt6RUzZOQ73
fLSnrr3OhuO7u6LxdJwnkrOp7Egc5ETfm4+/Mbp+TsRSdqt9HPjyOpiNDQxs
0+fO15wRLh0ch21jrf4IJI/OUdtLgxUNb+PQccJ4m0bNaL5/7xePZ44zXJ4M
sBHCyBK6zvqHNFJe3WOh+PzrnP1y2QhI9Ni1NYLGgQnfBRaI38eQtFPL5uPZ
kBF0D9rkS0GPvbPyqGASJnYFblldmo3Be5aZXQ4U2Cu32yZ6JkOgJ3a3ybqc
/+Dwxgu8Xo7TQ3Anqae6NecwoCFydyUFYT6hpuOzLi/CPDAXdDHpyaBQ8TFm
/2YaT+XzymRVHfIQdMzn6MHXPNhW/M640JcFy8/ZQvVnH8GNTxg8GJy5ssOC
zB6Zk3yc5hMhD7o0G+d9z4VI0XJaChTie9vh6OdqPJDBezZ9WJCPiOYWmaSc
ohFfMQClGRdpy1IIbb7wL4bNZCazAcx1aBbr20Dgo7pE8YFFJVj7dueNELsB
0M1FO5BiFIrXXHWcVYqBX0/PdcoOYEX29LZ7XiXYklyRMEa8DJzMfby8l/2o
HPCilU/piG8ph9uQBs2o/bDhC9Ay0ORXv1a/Au+UmY7uh540t1Y+uAyzxTMe
PXN4DLo5j7i96AOf1oXLcXfw2bxFoZWoVGAmpQ98+2JRjsfeAlL7iqvAsJSQ
dB8GGbnrVY6kTXaXJb/RvmOolp6kXgifTvZ9daIca/of/LN+eS0YFXL0YC/E
9BmlWw6RH8PLN56rG6n7NzAurfdCGfjhrHq0fGOE+zc0z5ls+09IKYxM1tX2
v2tAk735xIa535DBXNOmBB/2zsnhjuGAUUEFJl9Bi01Z/S8E3A849Rtd4aA2
b6ZJkOsXhAd62KlYFcCNb1S4I3z3GdyawuJkg1zQRQ3LduOO6KIePAtq7NPM
zQRtNqUk3nBh5h0YZTTUDbPpfuGOK1LgxtCreBN4TNnVu/H0zq5+475ofAkU
ef7nnyZM4QN3F9yKlPcmCfngq6T5heO0rj7HJ6ZOuAoESGo/v0bcIefT0rMJ
QboxIbuWdiLCsmeb+oI4ImqhzqRb6k3YrPbIsyWsA1ZjX+7JbEgjGBeTItaE
pcfm0ql3wFIHEvphOUQY74i83EsuCkwYJ9gO2sysCrAvIoz5Ap6LWMEny102
t8OOZuf1HqWExvnhVhZo/bzfZcqlXhKP6W5qvFdBjPhU+HGCHRRSyZE+rCJK
bj9LiQzgIOcIMxkkei9lKJicqyVOpcfQO3PgH1zzSlSf9r+ib6/uU2kgaNH8
5/bFRjSoM8qdxGnSxOHSIQ7R22xx47xPA4rPCQr/mkHiVLcdLf25xF/8qQfD
ZlHjSESllQvUsJoIzkXGCdZB6cpsmvI+0V6/b1xP7BNC9cxsKqusdkTPfoLi
48E7Bj5PiZ0LZp/c0V8D/S9OtJX5BJvGpZMNdj8jmFeN1q7BkVn2FgsGPyFa
r37BiQnPiQftcd9vPKzGtYCh+dfocyWFmQl5Tvz1A9XoamQu8P9+rZko+yZK
S7KqEd4lYc3I+oBm4q+PqsJ1Wi2b0H6WcU9CXc2EP2OvIyshO2wIe0US/+t/
jP8DvUagEg==
          "]]; ListLinePlot[{
          Transpose[{$CellContext`xAxis, 
            Part[$CellContext`b, 1]}], 
          Transpose[{$CellContext`xAxis, 
            Part[$CellContext`b, 2]}], 
          Transpose[{$CellContext`xAxis, 
            Part[$CellContext`b, 3]}]}, ImageSize -> 
         1100 $CellContext`Scala$$, AspectRatio -> 0.25/$CellContext`Scala$$, 
         PlotRange -> {{$CellContext`xx$$, $CellContext`xx$$ + $CellContext`\
\[CapitalDelta]xx$$}, All}]), 
      "Specifications" :> {{{$CellContext`Scala$$, 1}, 0.1, 
         4}, {{$CellContext`xx$$, 0}, 0, 
         180}, {{$CellContext`\[CapitalDelta]xx$$, 189.}, 0, 189.}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1434., {256., 263.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7999078206961946`*^9, 3.7999244333740063`*^9, 
  3.799924713258179*^9, 3.7999287321020308`*^9, 3.799929050716287*^9, 
  3.799929468989301*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"posinthandl", " ", "=", 
   RowBox[{
    RowBox[{"Accumulate", "[", 
     RowBox[{"datavell", "/", "samplerate"}], "]"}], "+", " ", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{
      RowBox[{"dataposl", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"Length", "[", "dataposl", "]"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799901076274413*^9, 3.799901086405571*^9}, {
  3.7999011906843643`*^9, 3.7999012370208406`*^9}, {3.7999012723493805`*^9, 
  3.7999012899646482`*^9}, {3.7999013442763453`*^9, 3.799901354132865*^9}, {
  3.799901643980966*^9, 3.7999016450765963`*^9}, {3.7999017780047226`*^9, 
  3.7999017886774263`*^9}, {3.7999058197318754`*^9, 3.7999058225240526`*^9}, {
  3.7999059284985523`*^9, 3.79990595020483*^9}, {3.79990622086896*^9, 
  3.7999062227577844`*^9}, {3.7999062978605995`*^9, 3.7999063096527853`*^9}, {
  3.7999079195117035`*^9, 3.7999079260545125`*^9}, {3.7999082704090877`*^9, 
  3.7999083003760448`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"posinthandl", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
     RowBox[{"dataposl", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1", ",", 
     RowBox[{
      RowBox[{"Length", "[", "dataposl", "]"}], "-", "10"}], ",", "1"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.799901662838219*^9, 3.7999017316373997`*^9}, {
  3.799908988010683*^9, 3.799908988937683*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 170, 1}}, Typeset`size$$ = {612., {3., 10.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$37408$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$37408$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {
        Part[$CellContext`posinthandl, $CellContext`i$$], 
        Part[$CellContext`dataposl, $CellContext`i$$]}, 
      "Specifications" :> {{$CellContext`i$$, 1, 170, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{671., {61., 68.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.799906173583916*^9, 3.799906228135342*^9, 
  3.7999063152622433`*^9, 3.799908324672558*^9, 3.799908993651529*^9, 
  3.7999244337317348`*^9, 3.7999287324262133`*^9, 3.799929050781176*^9, 
  3.799929469296482*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"posl", "[", 
      RowBox[{"i", "/", "samplerate"}], "]"}], ",", " ", 
     RowBox[{"dataposl", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1", ",", 
     RowBox[{"Length", "[", "dataposl", "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.799904817411095*^9, 3.799904828429778*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 180, 1}}, Typeset`size$$ = {582., {3., 10.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$37432$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$37432$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {
        $CellContext`posl[$CellContext`i$$/$CellContext`samplerate], 
        Part[$CellContext`dataposl, $CellContext`i$$]}, 
      "Specifications" :> {{$CellContext`i$$, 1, 180, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{641., {61., 68.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.799904830079562*^9, 3.7999051908962417`*^9, 
  3.7999061649479756`*^9, 3.7999244338025913`*^9, 3.799928732561814*^9, 
  3.799929050843984*^9, 3.79992946963277*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"vellderiv", "[", "time_", "]"}], " ", "=", " ", 
   RowBox[{"ND", "[", 
    RowBox[{
     RowBox[{"posl", "[", "time", "]"}], ",", "time", ",", " ", "time"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7999018697966566`*^9, 3.7999018747891054`*^9}, {
   3.7999019336772485`*^9, 3.799901976486266*^9}, 3.7999020209818153`*^9, {
   3.7999022472778263`*^9, 3.7999023074857087`*^9}, {3.799902355717964*^9, 
   3.799902361574305*^9}, {3.799902487895602*^9, 3.799902499518854*^9}, {
   3.7999025939830246`*^9, 3.799902611710469*^9}, 3.799902915431043*^9, {
   3.7999030369595413`*^9, 3.7999030404637985`*^9}, {3.799904861049927*^9, 
   3.799904865850108*^9}, {3.799904907921997*^9, 3.7999049085299006`*^9}, {
   3.7999049388555574`*^9, 3.7999049410668755`*^9}, {3.7999050147701902`*^9, 
   3.799905037970478*^9}, {3.79992497249559*^9, 3.7999249756401806`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"vellderiv", "[", 
      RowBox[{"N", "[", 
       RowBox[{"i", "/", "samplerate"}], "]"}], "]"}], ",", " ", 
     RowBox[{"datavell", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1", ",", 
     RowBox[{"Length", "[", "datavell", "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7999023773590684`*^9, 3.7999024431196365`*^9}, {
  3.7999025368948107`*^9, 3.799902539022986*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 180, 1}}, Typeset`size$$ = {713., {3., 11.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$37457$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$37457$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {
        $CellContext`vellderiv[
         N[$CellContext`i$$/$CellContext`samplerate]], 
        Part[$CellContext`datavell, $CellContext`i$$]}, 
      "Specifications" :> {{$CellContext`i$$, 1, 180, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{772., {61., 68.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.79990252048324*^9, 3.7999025400344906`*^9}, 
   3.7999026337521534`*^9, 3.7999028596214623`*^9, {3.799904954773367*^9, 
   3.7999049590136933`*^9}, 3.799905044756612*^9, 3.7999051910204287`*^9, 
   3.7999061650090685`*^9, 3.7999244340727696`*^9, 3.799924755726621*^9, 
   3.799928732730361*^9, 3.7999290509157934`*^9, 3.7999294698230753`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Draw3", "[", "datavell", "]"}]], "Input",
 CellChangeTimes->{{3.7999248277789793`*^9, 3.799924840359707*^9}, 
   3.799924882187398*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Scala$$ = 1, $CellContext`xx$$ = 
    0, $CellContext`\[CapitalDelta]xx$$ = 189., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`Scala$$], 1}, 0.1, 4}, {{
       Hold[$CellContext`xx$$], 0}, 0, 180}, {{
       Hold[$CellContext`\[CapitalDelta]xx$$], 189.}, 0, 189.}}, 
    Typeset`size$$ = {1375., {165., 173.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`Scala$37480$$ = 0, $CellContext`xx$37481$$ = 
    0, $CellContext`\[CapitalDelta]xx$37482$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`Scala$$ = 1, $CellContext`xx$$ = 
        0, $CellContext`\[CapitalDelta]xx$$ = 189.}, "ControllerVariables" :> {
        Hold[$CellContext`Scala$$, $CellContext`Scala$37480$$, 0], 
        Hold[$CellContext`xx$$, $CellContext`xx$37481$$, 0], 
        Hold[$CellContext`\[CapitalDelta]xx$$, \
$CellContext`\[CapitalDelta]xx$37482$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`b = Transpose[CompressedData["
1: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
HytD3xQ=
          "]]; ListLinePlot[{
          Transpose[{$CellContext`xAxis, 
            Part[$CellContext`b, 1]}], 
          Transpose[{$CellContext`xAxis, 
            Part[$CellContext`b, 2]}], 
          Transpose[{$CellContext`xAxis, 
            Part[$CellContext`b, 3]}]}, ImageSize -> 
         1100 $CellContext`Scala$$, AspectRatio -> 0.25/$CellContext`Scala$$, 
         PlotRange -> {{$CellContext`xx$$, $CellContext`xx$$ + $CellContext`\
\[CapitalDelta]xx$$}, All}]), 
      "Specifications" :> {{{$CellContext`Scala$$, 1}, 0.1, 
         4}, {{$CellContext`xx$$, 0}, 0, 
         180}, {{$CellContext`\[CapitalDelta]xx$$, 189.}, 0, 189.}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1434., {255., 262.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7999248862315736`*^9, 3.7999287328081903`*^9, 
  3.7999290509596367`*^9, 3.799929470027277*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"vellderiv", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "t0", ",", " ", "tend"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7999249595812693`*^9, 3.7999250225625935`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
uQXxKV9JgHzavEPyNKja7154Pi4lIe7ykYFZrPMYn36k6F5Gwiq+nMkm0+Cy
43addSonUYJyHN3l0wj0KLaPulpB4s+nZP2rm0bTGXPXwaYKkhInY72lfRpt
sn52i1MVJJP+ed3h/mn4XW/v6C7/TvIhXW0zPo31jIt31SUqSbFPkvtzyjQ0
CnmUUx5XksqWXTKpC9OwlV64q8+oJPWbE/tblsxAOWyogG5RRboz4w+J8s+A
CC9XUjpQTeiDn1Ykys3g6Mz55Qn0GvJr9/a8OqUZnBykux62qCVL7sTY0tRn
YNTuMztUV0s4SrZtXKMzA9PazRYeanWEZ2V0nbL+DC4XZ7ZsSKgjAsZbH5w3
nkFKqckHkRd1RCQ6Ut7TYgblIfq8d+bqyEaK+HC0zQziEiOYTzXryVaViNff
nWbgqR0Sm3m5nhi8ChUbS5uB67aW22FhDYSiT8kezpuBpvWWv3GlDcRPQPPU
YPEMWhIdH2ZMN5CSl1P3eppmUL2H73m1ciO5oAfhrq4ZSLmYCrZfbCS/V71K
ah+awUWRHT42Ko0kqH5Us3VqBu1pD7g+3Gkk8i+Uu5toM/iXl/6A2tpIak8+
d274PYOIY0PReuJNxGblIFfdslmUhK6mGDg2kfDnT5UqBWcxmRsaZr6mmax6
1h5UtGcWWz+GKBhcbiGJx3dJF6rMQlgsJqooq4Uc4fEozTs0C7+INKFd3K1k
uKrJNOfYLB5v+eoVfL6V3PfdTs88PYtvUbX0pamtZN2xu77pJrNI2tZ92Z69
jWRy1YmnXprF2k8TzR2GbUS/Ujw3+dosrKg1Yc8vt5HZp7f0kpxncfp691WX
h23E52jlePzdWTwdtKrWTGkjEis2esQ+nMVSTnq6SHkb+VbhuCbGdxYtqhf2
/ulpI2ZPSj9HvppFmxU18Te9jSwcXqsd/m4WjACvrb+420ngcruesMhZNBQI
hy6It5NqbyGet2mzKJb70eSo106ual+NDM6bxVANn2Pf1XbCxpGv/Lp4Fk+s
Jfh0PdrJx9KVjQFVs7jCfiAhN7idqDy6ZP2iaRbrww2OSCa3k1bNrCXPu1j5
U7MbeV3WTpzYuEN8h2ah1eHluay3nfCVnJd5OjWL5BuhmxwZ7ST+YWqZN20W
fE+fV5jOtBPtQxznvX7P4uwWinTqn3YyuNSY8WDZHAxbTr2P3d5B7n1L8rvP
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
Ws/bn+dRH36mvOZpB1EsTRR6mDqP907Tu087dBAFcWvFkNx5hAht+G2mxnr/
dQ/c/1Y5jwNVG9IOdbSTbhudrU9q5zGV4L+T8rWd+PxMrdBtnMcbv6VRofHt
ZEzYi7+jYx7DuuOBjLvtJCh6OiOsZx4O0ia8EZfbiaaCgfHlgXkg63fkb592
Qv1W8HfHyDx+PnRPXXeUpT/0JCLnxuehvpvq6iXQTk70Pz+cMT2PyM6UZ+az
beSP/Y8pV8o8Eopd9yiw9JGxX4UCx8I8EvdXXtjh0EYEy23KNiynws94bfvk
t1byzaDJZpCLilMp6l5twa3EYVhlZSwfFVs4bGRLbFvJRueoNDsBKigmAd0p
6q2k+j9ewz3CVPh+yX3yXriVuL64ubiwlgqj5UMKPlMtZMem3o+Foqz1ZtwD
t4paSHuStpaXGBWJqXueXXrdQrxVkyeObqPi1jQtXSSxhSx8ofG4HKJiimKX
bXqtmcQcNP2iepiKJFfu7r2azeRMXYnB0mNUxD2ayBEXbSZfpl+HPdOnIvhd
9M3F2iZy4e5fjdNnqfgW8/D0xKcmwsdlNSZiTEX+l4tyrR5NJD+kzrfXjIr3
+VhZbMTSv9sVZaMuUvGuXHQmWb6JiGR+bLa2pCKw8XdlKHcTKddccUfGmopD
2dwfv6xuIreaHEUZtlQsTV++++CPRrLVovNrrgMVoWt22K773kh6Qt1ON9yn
4rzw2kxPlj732znyI+ghFff2j/FHaTYS5VzdUNPHVHQaZtiVbmfp9baNI2PP
qZBY7mtAZhuI5pXHT5MCqMhbYbxZt7GB0Ohzu52DqNDm2THVmdFATgl8vfX3
PRUX+cs9mG4N5O/HHetLwqngFAo65nWhgSTKBJCn0VR4ClsKC2g2EOPCX5dO
xlEhuFZh4MP2BrJC9xLn6iQqhi9c2V0g3UCyu6oSO1OoWPDlufZsXQO5YqOg
9zGdiky3OpM3k/VE6GcowzKbipz12f1jbfXk22P2tzvzqfhhfaPNtqSezLOJ
UNWL/v+/q5JCbWw92ewppWNYQsW/339fyDyrJ/fcTv7yqqZi+fOnOlSDeqLk
+Ma4t5uKkTe5JhyNdeTqbEIqvZ+KBJ5t6gHv6kjQtUIu7hEqzt33l9hoWUfo
lkO5+2eoqLx8eX7vQi3ZMsQQODFPRZlY7sMM9jqif4Hz2mUGFbZDttfRUkse
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
7uBBmdou7w8pM/H/AMi11IY=
     "]], LineBox[CompressedData["
1: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
coQDkQp0074smp9G//+/+hebHb6v
     "]], 
    LineBox[{{2.672437880328363, -1.5728184487416956`}, {
     2.6729536692355165`, -1.5719023729347632`}, {
     2.673943588394578, -1.570144209895856}, {
     2.6759234267127012`, -1.566701215206296}, {
     2.6798831033489474`, -1.5599830098614202`}, {
     2.680873022508009, -1.5583034585252022`}, {
     2.6818629416670703`, -1.5566239071889845`}, {
     2.6828528608261317`, -1.5549443558527636`}, {
     2.6838427799851936`, -1.552611244301972}, {
     2.6848326991442555`, -1.5507282124594868`}, {
     2.685822618303317, -1.552692933132128}, {
     2.6868125374623784`, -1.558408789447126}, {
     2.68780245662144, -1.5638131603784533`}, {
     2.6887923757805012`, -1.568509547033323}, {
     2.6897006196430904`, -1.5728184487416956`}}], 
    LineBox[{{2.9734264369887082`, -1.5728184487416956`}, {
     2.9754258444673503`, 1.3436630243002938`}, {2.975556594300331, 
     1.5343842602489117`}}], 
    LineBox[{{2.997141895692422, 1.5343842602489117`}, {2.997952097894955, 
     0.8653359715626334}, {2.9989760185053007`, 0.019803424303971248`}, {
     2.9999999391156464`, -0.8257291229550787}}], LineBox[CompressedData["
1:eJwUV3c81f8X1lBEhRQlKgpfJCkS5WkgpTIa9khlJRUlREmSlSKFNIzI3ivh
ba/sTfa99uaSJP3u76/7el7nfM7nnOfzvs95P3uM72jcXM3AwPCHiYHh/79K
ZzcKbWX3RYhgDesqLRnsnrd8NM3gh1VMZ0+8uiqPpZCq2h/Tfnh46PBjgxpp
NJ0X2/u19w0O/S7iXDkkgoRFLzuXOn84d1inLYuxwP3LWJV+/lv4R/qFL/By
E2M1lT1Hk94hZPiroI6MONkataFy6lUgrr7goZWEnSCTlyz4fjwJwlauy9G8
+xVJ+b8K68g777FyOLdDNucscdT04NFX/QDpoqH+6tvq5OqakTsy+IiLP2J5
I9MvEYlE5eItBz6hXv2u1uO/V4j1Glfpm+tD4O3wu1r8pQ4xbE/t1XgSAlWv
XKb1zXrkfCLF88SvEJy0dTnds9OQHH2+RUr8TihSqGVEMciQCOqe7uEZCsXy
T63yyABDsuWgjQezYRjuR28ptuU2JAzrww/9aglD5+n38W93GZCJzoYu6sVw
KEruDkgT1CcdKavdG0rDMfUx0rlxvx4pc5eUzJf/gjGZ/Razh3VJmoFxZ3zG
F8Ak9RL7MR3is6FQwiMyAsnRibaiV7TIKeOn7XD7inMnfXbXJV8mB2SSn+1f
+YrKJEaV3+WXyM5Nfft5bKPgtM3pAX+vBmGmsrUxTUYh0of2WeWXOln4dsJl
4WY05G9ZVt7fpE4or+6KUbui8dz+xu60vWqk7mZIS/2VGOxzVflezKFGcuXq
nEl1DMyiI4fWmqqTGHYG0XjFWEx+VD59yOISCRg60Pw+NxYKUlIChZZXiGuu
4RN3qTj42T12XKusSQzMSeP1ffFo3MR+wGNFh3AUPHbcwZiIoGaR9tlT18i/
dwmCTE6J+D24q3RcypiMW3bXzdMSEd3JmToofJ1Y7nmRe086CX1MG0J6eW6Q
66yf/cysk+C6tOLdsekm0fmVYWqYkATJ6Tn7plUmRK2/5tjV0SRUco2Y1NBM
iFL1IPsFwWRE07TDt6aakuNZK4OnjZNhbvlGb8tPU3I4fFuO7Kdk0Ma4GjbK
mxIRH3Hfgx3JOLT1wxmmUBPCdcNAbpdGCpZMv0j+NblJZjbnvVo6mQr+yA2s
fTRjMt1///OySyrusPnt0bpEx+miiStFqfBP3n6kNvkamdYNqlmtlAb3//4z
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
yyEm8V1COLoFjkmpYzcVyxHkcZ5yJKsFzDstX2Q4lmMdpevtmbIWbG2eDxJO
L8edBDORErRCcnde9W+HSnSuX+psutiKc49CVFtTK3Humtcrqn4rgptc6tPG
K5GZvfMUzbIVew7cvOS37wf2cibQ1ji2QngNi9UfmR9os5/LO5XVih3lU8Ml
HFVQbHS9p1HWinp50QUp1SqkiG3ba9zSio/Gnj94X1XBu0fG4ymtFVnRyrYT
m6pxQvHxpXyJNnBXlsg4b65BklZmE8fJNhQIPjq25UoNdllOX7mp3oYBF4kT
ke9rsOJnrLXBug29ssFnqvbVwioyuF3Phf58gJqK4a1adH1r0kn0a8PXmG6G
Uzq1OF+9sXNVeBuMN/2YuhdUi5xeJf3LqW1YuajhtYO5DmK0J92RRW2ozJn8
L+tQHYLXfzP83diGZNkXrxmv1cFBXNT4E60Ngr9CrRwK63DEcbPpsFQ7FoO1
5gLpOhr5SnlYVqkdhZesJDoz67Et/Kn5y6vtMGBxvb1rhK6jGdmjPSbt+FQU
FGO8owG0irlbkg/bYfoocShCpQE3usQmXF+0g/VQyd4RxwY0Tt+0ag1ox8fR
jmtiCQ04tfbz1H9R7WDpW83mEN6AFK62u45Z7WALcBCIaaDrnij7bE15O9qq
cgWlBxrgK3/OZk97O74KOV/OnGgAg8Yzms0I/Qra/znRnNaAuzdzHpT+bkdS
e9dPg6UG9NrNL3Bv6IBLHQ/TZQa6rnmL293a0QGPMu3DZ9c1Qjw1xIFNrgN5
fDnPxbY04lNp+x9jlQ7UiOumFNN1b2MHh1O6bgdC5Ze69XbTdWZCZWW9ZQec
LgaxzAs2Ypzh+RMdxw4oGsjIvNzfCF3OPIZ47w5oW7Xe2He4EZVCv57++9AB
kce2vrl0nZSVk1ijEd+Bdbzhuqx0HH3R3PVLbgfKnUuEGnY1gts4jPFXdQeO
MIr/stFvhPuDn25nuzuQEOaQPfGQrrvunEwfJjuw5kSZk6lfI0w+XPCYXOlA
zi6h/15GN6Il0W3Dyc0/8fAl99vQ/EYoFhGvN7t+YmaJeVVGayP2jh70kTnx
E3F79f6orGuC/1+LzV5qP/F07IrUCG8T1rB/ed1l9BPPUlTvuEk1wXpvF7vE
vZ/YZX82WuBCE/qPbHvj8vQnzE+cpuTfaIKGiipns+9P3Ft/nNfAsQkFBu5v
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
DqHi1VQRa3YrWblocHHOZAiaokcl7zK0kbBde1gNrIZgX+oS0qjURpSmKRXl
D4awybhq05GXbWQ0P/LFIachVGrN3Tpq1EZ8fM0VP7kOIcyK7c2mkDYiaSy2
htl7CJ7xn8akudpJi+RUvs2bITh8uMbw+lY7cViT8rj7/RCmXQe+pRW0k8Iv
R5ZSo4dwetei7vUnHUR96NSMQdkQVngZuHb/+UkW/LW33aodgrnA9fNnjTvJ
h1N35R62DuGvUOlT64pOcnLazehZzxBCxf7LDJboIoMfPz5/NTSE9oPe48UB
XcRLJS0meGoIltJTeyZXuojE78rar7+GUC6rocll0k2aI/toqf+G8A/p3ieq
u4nD5cXt+euH8fnCk9o10d1k1+rNqNo8jPKRxZMxq3tIceK+G21cw9CpsIm8
cLiHmOsf86DuGkZvCOuqGt0esonlUsK00DDu8kknlr7oIalZ5o3LB4aRGvht
xC69h2iZOC8yyQzjE8fxvaKUHhJWEH9qj/IwVvJWhPR39ZIzd4pN96sNIyRK
uNBYupeM7/zpfVRrGDO+GnpmF3qJtB1Tq7rZMF7ciHxt86iX/Ny3a1n/7jBy
L9SJ2Pv1EudGqT0WdsMYlV4qfhzdS/Y9Pa9k6zyMy7v3Grrm95JK8eu3XNyH
0cV88bdHay+502n/2uf1MGrjnk/qFfcSTs/X6e8Dh/FE//KXY5O9xGAg919K
FD2/ZKMjD1MfmQvm9qeUD6Pku6Kz4sk+Enj2wLepOnrc58z+n6p9RP6XYvef
tmEUeWpIOhv0EXcNG2HOkWEkuZgdq3zUR/YzeF7YPTMMg8c2J+949pGG+BBr
sd/DUHB4rMQZ1Ece6mYGyKwagYith8q3r31kJ3NNjgLzCDit/dUMMvpIQQa1
T419BOcuC+U3F/URkxt/1ulvH0H9PclG67g+wsLBIWa+ZwRrqV1t7zr6SBIR
Vn/w3wiO/xPvNfzdR67chu3TgyPY8yz4z51t/WRpx9Xgl0dHsHjZY+usVD9R
sH02EHF2BKL/zosp2PaTEYH3G1LUR7C5KeHI7Xf9xKc+6UCe9ggoXXrTJKOf
tIl127eYj+CpWuu+mF/9xKmD9qn/3gg2evqf2MVNIfzuLMWT9iOwL1LX9Zeh
EEuKzKb1niO4JV31+rE9hbD7qh7a4jeCtjsesXNBFJIhb6K16/0InsiI+aZm
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
7ftx4HB8P1lXKxVWxTKJgwdpMuUh/STUx+No5ZZJbHy685Sefz9he9n2Lv/Q
JEzOTwm4Xe8ncefFxPPkJnHm7dy4o2Y/UWZ1Lvl+ehL/df9Kt1HpJ9QfjXrf
VCYxI7j82AL95ImXEC3j0iSY7jIoXzvUT3aoPPJK051ERdZadi2hfpKxoZY/
5fokvq9i7rjI0080KvmzE29NgsWqburj3n4y6WGrHm8zCa1tprafNvUTz7OV
wzGP6P2XDR11mOojgsx8zlHPJjEqKtYn3N9HCsvvcUV6TWKfXbedZ0Mf0Xcv
SQh/MwklrupzGqSPVLlxsr5PncQHlo8Xx6z7iJmSWXjA90m4fzFd2WXUR9au
y5F9WzQJ2eOSCZcv9JGQks0Nfj8mcaplWd9Dto/IPb9u/rpxEn+syjbmCfWR
FoVMBp+fkyha75c7y9lHrNeyBHpRJpESondbaHUf2VRscMBjbBKPjwrx6k31
kphnKaVuc5NYHnfq1KP1EqXT6wxc/0xCJfzRmdPUXtK/Wmf+6ZopZPsKtvfm
9pLHhfHeT1im0KRrqc8f20u2u6za67RlCj/dHjK/e9dL3J3VntocmsJiQX91
3aFeouDgvXA+dQrWHspz6mVd5O2xq0x85dN4Fb2PX35dE+G8dfi9cNU0zC4c
us7U2kj8gjjEDtVN43qhVfHNmUbCVj6de7xpGl2L59xtIhuJz0KNqnLbNDrt
ViL5bBuJe9KZAOvhaZgkF/lZLjQQx71HBcuYZjD1kvmJwEA9MWbdqXD37AyY
KhK6npMa0iu71OxwYQbi+mJXV5nWEEPzNtPn6jM4PhNd47iphnQHZPx+dWUG
W14LGofnVxO9Un+v99ozcNTblchG98MdNGveCP0ZpJ131rU3riZaAuqJiddm
8CDCaQPzchVpUT9wMvvmDPaemWOjvK8iV5w3Nhabz9D509haKFZFmhLGbtTe
noHUQb8a5pwfRKOrYqH93gzS6+pfqKv8IBdl3XZM2c/Ar0YyUtGikijTVq5t
95xB2X2hnYvR5aSUv2tOwGcGRZ++fKMeLSeK6t+fi/vN4G75Hs36ijJS/CSI
6+i7GfyZ+UTL1S4jpxIeRp9+PwPOiLMd2YxlJL/zitzFTzNQzrUp4xYtI/Is
h6u1wmbgY6g7uzOylOQc5TC8HjkD7T7e9odWpUTObHr6dswMeo17SYN0Kcl+
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
WyXimLDtwfPNNKxkvZht8EjEAP76bGinIevbvxH5B4nw0XQdL++kwW9A9b/D
RomQucNy7kUvDT/UeHN2ySWi383vqyKVhkbZhES3zYnw/rSdce0wDa/2IXyC
koCeaqF85yl6f8LrZ3u8E+AmpiDtsELDf1u46mX64yGh8OONzOp5yLD+ZHqV
GY92XY2ZBcZ5YP3nEwPe8XCxab+YzjwPhdXX7eSM4yHmZRRns3EeGn8Ek3yP
xKMlbIhZkn0epyiOtg9Z4+GcbWU6zTmP3FuuZszNcRBpmC9O4J6H7Nxxtn/z
cWgcceS/vXMeq7Y3/yvfHg/HVWudRXfP48maKXdeuXgIbvfqGhGYx27plwO5
5+NRJ8EhFyU0jxevFHVYL8TDQTko0ER0HlfG/tbo0PFeo90Lew/Mw04h43Q0
HVc//HqJIjkPsxCrrF90bPtKPDlUeh4zH8UYjqrGY/fX9E1GsvOY1GvSfa0W
j8q8Y5Z88vMw3uGYOaQeD5uWoorOk/N42iGwBZfisXPynFCw4jwqAn9Yvbsc
j1LGBlfts/OY0LSpnLgSj7u82v1cF+j8beMRVNSMxw6pXrSozeNQS+HTD1rx
KD5v+tH/8jyi31h0zWnH4/aNySUNrXnopvxL1tsfj22OD7TY9ebhkZO3LnJ1
PPLfLKfXGs4jbHaS7b5QPCxin23xuT4PyWd/TK6/igdn0YZ7503nsf8lY9rw
TDzyOnxrNtyah1SHRt7Z0wkwneUWq7CaR6VwSHmMfwKy9wgNKdrOY6FQtsvy
SCJuHE1QWOswj3v+kbfv0M/bJnWpsEKneXwaPRmU+zMR15xP6+P5PJTPH1sU
O5GEDYGV2X/d6fm/mDddNk9CWqI6d443ne+wVoFHfklg6jFslPGfx93f1qoV
1CSkLAxK/AqYB2PEiZvTG5Ohu8nKJz14HvzjdmH5h5KxVnB+zObzPOTrGYTb
dyQj4bjjWcnwebwE70vJ6iRoXVnzdTqSnu9ml1JSnoTVtz3XJsbMg/P6TKdq
cRLiXNmNbyfMIyKunOO/rCRc+RBIRFPo52fhs/LquCQ4h1XUyWbMo6HL37P5
UxJiopb6zmbPY2+JR1WUbxJW0vTWmhXO47tajeM1uyQIf3+59WHpPL4yLrn8
vJUEjYI8QbfKeZjm7PO4YpiEr9W7z35pmMdbIae3Z5WS0NCorpPaMo8z3VHB
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
3Up7BP8H+lzLdQ==
     "]], 
    LineBox[{{2.9691285184788954`, -1.5728184487416956`}, {
     2.9692823208052763`, -1.523956804120811}, {
     2.970306241415622, -1.257462418911924}, {
     2.971330162025968, -0.9909680337030373}, {
     2.9723540826363135`, -0.7244736484942701}, {
     2.9733780032466592`, -0.4579792632853831}, {2.9754258444673503`, 
     0.07500950713214537}, {2.976449765077696, 0.3415038923410322}, {
     2.9774736856880413`, 0.6079982775497961}, {2.9795215269087327`, 
     1.14098704796745}, {2.9805454475190785`, 1.4074814331763368`}, {
     2.9810330316010054`, 1.5343842602489117`}}], 
    LineBox[{{2.9877820187291255`, 1.5343842602489117`}, {2.991808574232881, 
     0.9836360250007857}, {2.9928324948432268`, 0.8435851878382872}, {
     2.993856415453572, 0.7035343506758522}, {2.9959042566742635`, 
     0.42343267635091864`}, {2.9969281772846093`, 0.2833818391884202}, {
     2.997952097894955, 0.1433310020259217}, {2.9989760185053007`, 
     0.003280164863486701}, {2.9999999391156464`, -0.13677067229901177`}}], 
    LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1: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
YC0v09gvuWRHnjP6H3xjvDA=
     "]], 
    LineBox[{{2.4816080185472638`, -1.5728184487416956`}, {
     2.4823927123676484`, -1.571973146372904}, {
     2.4833895712981917`, -1.5708562195339684`}, {
     2.484386430228735, -1.5690697536151215`}, {
     2.485383289159279, -1.5716691244306826`}, {
     2.485676839052656, -1.5728184487416956`}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  ImageSize->{453.5483870967752, Automatic},
  Method->{},
  PlotRange->NCache[{{
      Rational[1, 60], 3}, {-1.5728184487416956`, 1.5343842602489117`}}, {{
     0.016666666666666666`, 3}, {-1.5728184487416956`, 1.5343842602489117`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.799925038369452*^9, 3.7999287479378633`*^9, 
  3.7999290668938894`*^9, 3.7999294857874036`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1360, 725},
WindowMargins->{{-1368, Automatic}, {-150, Automatic}},
Magnification->1.2499998807907104`,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 270, 3, 126, "Title"],
Cell[853, 27, 267, 3, 69, "Subtitle"],
Cell[1123, 32, 182, 2, 41, "Subsubtitle"],
Cell[1308, 36, 1601, 26, 264, "Text"],
Cell[CellGroupData[{
Cell[2934, 66, 207, 3, 86, "Section"],
Cell[3144, 71, 500, 9, 134, "Input"],
Cell[3647, 82, 360, 7, 76, "Text"],
Cell[4010, 91, 1313, 22, 251, "Input"],
Cell[5326, 115, 240, 6, 46, "Input"],
Cell[5569, 123, 391, 8, 46, "Input"],
Cell[5963, 133, 290, 6, 46, "Input"],
Cell[6256, 141, 443, 8, 46, "Input"],
Cell[CellGroupData[{
Cell[6724, 153, 402, 7, 46, "Input"],
Cell[7129, 162, 1799, 34, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8965, 201, 551, 9, 46, "Input"],
Cell[9519, 212, 1859, 34, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[11427, 252, 96, 1, 68, "Section"],
Cell[11526, 255, 398, 11, 37, "Input"],
Cell[11927, 268, 431, 9, 37, "Input"],
Cell[12361, 279, 1949, 49, 158, "Input"],
Cell[14313, 330, 340, 6, 37, "Input"],
Cell[14656, 338, 2709, 68, 206, "Input"],
Cell[17368, 408, 379, 12, 37, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17784, 425, 371, 4, 86, "Section"],
Cell[18158, 431, 195, 4, 37, "Input"],
Cell[18356, 437, 288, 5, 36, "Text"],
Cell[18647, 444, 202, 4, 37, "Input"],
Cell[18852, 450, 181, 4, 37, "Input"],
Cell[19036, 456, 283, 8, 37, "Input"],
Cell[CellGroupData[{
Cell[19344, 468, 111, 1, 58, "Subsection"],
Cell[19458, 471, 410, 8, 37, "Input"],
Cell[19871, 481, 214, 5, 37, "Input"],
Cell[20088, 488, 191, 4, 37, "Input"],
Cell[20282, 494, 523, 11, 37, "Input"],
Cell[20808, 507, 370, 9, 37, "Input"],
Cell[21181, 518, 575, 12, 37, "Input"],
Cell[21759, 532, 450, 10, 37, "Input"],
Cell[CellGroupData[{
Cell[22234, 546, 104, 1, 48, "Subsubsection"],
Cell[22341, 549, 161, 3, 37, "Input"],
Cell[CellGroupData[{
Cell[22527, 556, 2782, 59, 470, "Input"],
Cell[25312, 617, 1403, 39, 158, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26764, 662, 103, 1, 48, "Subsubsection"],
Cell[26870, 665, 232, 4, 37, "Input"],
Cell[CellGroupData[{
Cell[27127, 673, 2725, 56, 470, "Input"],
Cell[29855, 731, 1316, 37, 158, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31220, 774, 114, 1, 48, "Subsubsection"],
Cell[31337, 777, 413, 11, 37, "Input"],
Cell[31753, 790, 366, 10, 37, "Input"],
Cell[CellGroupData[{
Cell[32144, 804, 712, 14, 37, "Input"],
Cell[32859, 820, 324, 7, 28, "Message"],
Cell[33186, 829, 2049, 31, 77, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35284, 866, 111, 1, 48, "Subsubsection"],
Cell[35398, 869, 305, 6, 37, "Input"],
Cell[CellGroupData[{
Cell[35728, 879, 2843, 58, 470, "Input"],
Cell[38574, 939, 1332, 37, 158, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[39955, 982, 110, 1, 48, "Subsubsection"],
Cell[40068, 985, 352, 6, 37, "Input"],
Cell[CellGroupData[{
Cell[40445, 995, 2872, 58, 470, "Input"],
Cell[43320, 1055, 1318, 37, 158, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44699, 1099, 112, 1, 58, "Subsection"],
Cell[44814, 1102, 462, 9, 37, "Input"],
Cell[45279, 1113, 265, 6, 37, "Input"],
Cell[45547, 1121, 191, 4, 37, "Input"],
Cell[45741, 1127, 574, 12, 37, "Input"],
Cell[46318, 1141, 419, 10, 37, "Input"],
Cell[46740, 1153, 622, 12, 37, "Input"],
Cell[47365, 1167, 506, 11, 37, "Input"],
Cell[CellGroupData[{
Cell[47896, 1182, 104, 1, 48, "Subsubsection"],
Cell[48003, 1185, 161, 3, 37, "Input"],
Cell[CellGroupData[{
Cell[48189, 1192, 2802, 59, 470, "Input"],
Cell[50994, 1253, 1403, 39, 158, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[52446, 1298, 103, 1, 48, "Subsubsection"],
Cell[52552, 1301, 232, 4, 37, "Input"],
Cell[CellGroupData[{
Cell[52809, 1309, 2725, 56, 470, "Input"],
Cell[55537, 1367, 1318, 37, 158, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[56904, 1410, 114, 1, 40, "Subsubsection"],
Cell[57021, 1413, 558, 14, 37, "Input"],
Cell[57582, 1429, 386, 11, 37, "Input"],
Cell[CellGroupData[{
Cell[57993, 1444, 651, 13, 37, "Input"],
Cell[58647, 1459, 320, 7, 28, "Message"],
Cell[58970, 1468, 2047, 31, 77, "Message"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[61066, 1505, 111, 1, 40, "Subsubsection"],
Cell[61180, 1508, 305, 6, 37, "Input"],
Cell[CellGroupData[{
Cell[61510, 1518, 2889, 58, 470, "Input"],
Cell[64402, 1578, 1332, 37, 158, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[65783, 1621, 110, 1, 40, "Subsubsection"],
Cell[65896, 1624, 352, 6, 37, "Input"],
Cell[CellGroupData[{
Cell[66273, 1634, 2926, 59, 470, "Input"],
Cell[69202, 1695, 1318, 37, 158, "Output"]
}, Closed]],
Cell[70535, 1735, 94, 1, 29, "Input"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70690, 1743, 257, 3, 86, "Section"],
Cell[CellGroupData[{
Cell[70972, 1750, 98, 1, 67, "Subsection"],
Cell[71073, 1753, 218, 5, 71, "Input"],
Cell[CellGroupData[{
Cell[71316, 1762, 109, 1, 89, "Subsubsection"],
Cell[71428, 1765, 182, 6, 71, "Input"],
Cell[71613, 1773, 685, 19, 71, "Input"],
Cell[72301, 1794, 479, 9, 71, "Input"],
Cell[72783, 1805, 268, 7, 71, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73088, 1817, 100, 1, 89, "Subsubsection"],
Cell[73191, 1820, 459, 10, 246, "Input"],
Cell[73653, 1832, 372, 9, 246, "Input"],
Cell[74028, 1843, 402, 9, 246, "Input"],
Cell[74433, 1854, 457, 11, 246, "Input"],
Cell[74893, 1867, 421, 10, 246, "Input"],
Cell[75317, 1879, 192, 4, 246, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[75546, 1888, 101, 1, 72, "Subsubsection"],
Cell[75650, 1891, 434, 10, 109, "Input"],
Cell[76087, 1903, 428, 10, 109, "Input"],
Cell[76518, 1915, 453, 11, 109, "Input"],
Cell[76974, 1928, 432, 10, 109, "Input"],
Cell[77409, 1940, 432, 10, 109, "Input"],
Cell[77844, 1952, 242, 5, 109, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[78135, 1963, 159, 2, 53, "Subsection"],
Cell[78297, 1967, 318, 6, 46, "Text"],
Cell[CellGroupData[{
Cell[78640, 1977, 157, 2, 53, "Subsubsection"],
Cell[78800, 1981, 550, 13, 79, "Input"],
Cell[79353, 1996, 274, 6, 79, "Input"],
Cell[79630, 2004, 322, 7, 79, "Input"],
Cell[79955, 2013, 822, 17, 47, "Input"],
Cell[80780, 2032, 795, 18, 79, "Input"],
Cell[81578, 2052, 810, 16, 79, "Input"],
Cell[82391, 2070, 748, 16, 47, "Input"],
Cell[83142, 2088, 814, 18, 79, "Input"],
Cell[83959, 2108, 727, 15, 47, "Input"],
Cell[84689, 2125, 663, 15, 47, "Input"],
Cell[85355, 2142, 857, 17, 47, "Input"],
Cell[86215, 2161, 697, 16, 79, "Input"],
Cell[86915, 2179, 870, 18, 79, "Input"],
Cell[87788, 2199, 222, 5, 47, "Input"],
Cell[88013, 2206, 1303, 27, 173, "Input"],
Cell[89319, 2235, 914, 21, 173, "Input"],
Cell[90236, 2258, 919, 21, 173, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[91192, 2284, 204, 3, 42, "Subsubsection"],
Cell[91399, 2289, 553, 13, 79, "Input"],
Cell[91955, 2304, 227, 5, 79, "Input"],
Cell[92185, 2311, 322, 7, 79, "Input"],
Cell[92510, 2320, 802, 17, 47, "Input"],
Cell[93315, 2339, 790, 17, 79, "Input"],
Cell[94108, 2358, 883, 18, 79, "Input"],
Cell[94994, 2378, 826, 17, 47, "Input"],
Cell[95823, 2397, 812, 18, 79, "Input"],
Cell[96638, 2417, 863, 18, 79, "Input"],
Cell[97504, 2437, 708, 16, 47, "Input"],
Cell[98215, 2455, 859, 17, 47, "Input"],
Cell[99077, 2474, 742, 17, 79, "Input"],
Cell[99822, 2493, 870, 18, 79, "Input"],
Cell[100695, 2513, 154, 4, 46, "Input"],
Cell[100852, 2519, 1300, 27, 104, "Input"],
Cell[102155, 2548, 930, 21, 76, "Input"],
Cell[103088, 2571, 911, 21, 76, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[104048, 2598, 96, 1, 67, "Subsection"],
Cell[104147, 2601, 2544, 66, 392, "Input"],
Cell[106694, 2669, 2678, 70, 392, "Input"],
Cell[109375, 2741, 421, 7, 107, "Text"],
Cell[109799, 2750, 315, 6, 47, "Input"],
Cell[CellGroupData[{
Cell[110139, 2760, 102, 1, 53, "Subsubsection"],
Cell[110244, 2763, 652, 17, 79, "Input"],
Cell[110899, 2782, 424, 9, 47, "Input"],
Cell[111326, 2793, 598, 14, 47, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111961, 2812, 99, 1, 53, "Subsubsection"],
Cell[112063, 2815, 703, 18, 79, "Input"],
Cell[112769, 2835, 424, 9, 47, "Input"],
Cell[CellGroupData[{
Cell[113218, 2848, 751, 16, 47, "Input"],
Cell[113972, 2866, 415, 7, 70, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[114460, 2881, 191, 2, 68, "Section"],
Cell[CellGroupData[{
Cell[114676, 2887, 98, 1, 67, "Subsection"],
Cell[114777, 2890, 309, 7, 79, "Input"],
Cell[115089, 2899, 1425, 25, 79, "Input"],
Cell[116517, 2926, 1473, 26, 111, "Input"],
Cell[117993, 2954, 1513, 27, 111, "Input"],
Cell[119509, 2983, 1559, 28, 111, "Input"],
Cell[121071, 3013, 1633, 30, 142, "Input"],
Cell[122707, 3045, 1675, 31, 142, "Input"],
Cell[124385, 3078, 977, 21, 142, "Input"],
Cell[125365, 3101, 917, 21, 173, "Input"],
Cell[126285, 3124, 959, 22, 173, "Input"],
Cell[127247, 3148, 1121, 25, 204, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[128405, 3178, 99, 1, 53, "Subsection"],
Cell[128507, 3181, 283, 7, 79, "Input"],
Cell[128793, 3190, 1474, 26, 79, "Input"],
Cell[130270, 3218, 1577, 28, 111, "Input"],
Cell[131850, 3248, 1617, 29, 111, "Input"],
Cell[133470, 3279, 1665, 30, 111, "Input"],
Cell[135138, 3311, 1679, 30, 142, "Input"],
Cell[136820, 3343, 1721, 31, 142, "Input"],
Cell[138544, 3376, 1033, 22, 142, "Input"],
Cell[139580, 3400, 965, 21, 173, "Input"],
Cell[140548, 3423, 1007, 22, 173, "Input"],
Cell[141558, 3447, 1174, 26, 204, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[142781, 3479, 382, 5, 68, "Section"],
Cell[CellGroupData[{
Cell[143188, 3488, 265, 3, 58, "Subsection"],
Cell[143456, 3493, 214, 5, 44, "Input"],
Cell[143673, 3500, 459, 10, 44, "Input"],
Cell[144135, 3512, 1443, 35, 132, "Input"],
Cell[145581, 3549, 1374, 35, 132, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[146992, 3589, 193, 2, 47, "Subsection"],
Cell[CellGroupData[{
Cell[147210, 3595, 105, 1, 48, "Subsubsection"],
Cell[147318, 3598, 713, 12, 62, "Input"],
Cell[148034, 3612, 1217, 26, 37, "Input"],
Cell[149254, 3640, 642, 13, 62, "Input"],
Cell[149899, 3655, 791, 15, 86, "Input"],
Cell[150693, 3672, 1120, 26, 62, "Input"],
Cell[151816, 3700, 696, 14, 62, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152549, 3719, 102, 1, 48, "Subsubsection"],
Cell[152654, 3722, 713, 12, 62, "Input"],
Cell[153370, 3736, 1169, 26, 37, "Input"],
Cell[154542, 3764, 695, 14, 62, "Input"],
Cell[155240, 3780, 791, 15, 86, "Input"],
Cell[156034, 3797, 1016, 24, 62, "Input"],
Cell[157053, 3823, 698, 14, 62, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[157800, 3843, 284, 3, 58, "Subsection"],
Cell[158087, 3848, 982, 16, 37, "Input"],
Cell[159072, 3866, 405, 8, 37, "Input"],
Cell[159480, 3876, 1093, 32, 64, "Text"],
Cell[CellGroupData[{
Cell[160598, 3912, 151, 2, 48, "Subsubsection"],
Cell[160752, 3916, 2301, 51, 132, "Input"],
Cell[CellGroupData[{
Cell[163078, 3971, 361, 8, 44, "Input"],
Cell[163442, 3981, 607, 11, 70, "Output"]
}, Open  ]],
Cell[164064, 3995, 557, 12, 74, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[164658, 4012, 101, 1, 40, "Subsubsection"],
Cell[164762, 4015, 2249, 50, 132, "Input"],
Cell[CellGroupData[{
Cell[167036, 4069, 313, 8, 44, "Input"],
Cell[167352, 4079, 638, 13, 70, "Output"]
}, Open  ]],
Cell[168005, 4095, 504, 11, 74, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[168558, 4112, 265, 3, 58, "Subsection"],
Cell[168826, 4117, 147, 2, 36, "Text"],
Cell[168976, 4121, 171, 4, 37, "Input"],
Cell[169150, 4127, 169, 2, 36, "Text"],
Cell[169322, 4131, 601, 12, 37, "Input"],
Cell[CellGroupData[{
Cell[169948, 4147, 103, 1, 48, "Subsubsection"],
Cell[170054, 4150, 233, 6, 37, "Input"],
Cell[170290, 4158, 1943, 39, 37, "Input"],
Cell[CellGroupData[{
Cell[172258, 4201, 609, 12, 37, "Input"],
Cell[172870, 4215, 9247, 187, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182154, 4407, 2189, 54, 86, "Input"],
Cell[184346, 4463, 318360, 5402, 300, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[502755, 9871, 237, 3, 48, "Subsubsection"],
Cell[CellGroupData[{
Cell[503017, 9878, 511, 10, 37, "Input"],
Cell[503531, 9890, 1030, 17, 50, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[504598, 9912, 2010, 46, 86, "Input"],
Cell[506611, 9960, 646, 11, 50, "Message"],
Cell[507260, 9973, 1668, 40, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[508965, 10018, 469, 10, 37, "Input"],
Cell[509437, 10030, 1041, 17, 50, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[510515, 10052, 1647, 39, 86, "Input"],
Cell[512165, 10093, 646, 11, 50, "Message"],
Cell[512814, 10106, 1501, 36, 62, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[514364, 10148, 100, 1, 48, "Subsubsection"],
Cell[514467, 10151, 233, 6, 44, "Input"],
Cell[CellGroupData[{
Cell[514725, 10161, 1898, 39, 74, "Input"],
Cell[516626, 10202, 257, 6, 70, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[516920, 10213, 561, 12, 44, "Input"],
Cell[517484, 10227, 1028, 17, 70, "Message"],
Cell[518515, 10246, 670, 19, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[519222, 10270, 2139, 54, 132, "Input"],
Cell[521364, 10326, 645, 11, 70, "Message"],
Cell[522012, 10339, 2050, 51, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[524111, 10396, 290, 4, 40, "Subsubsection"],
Cell[CellGroupData[{
Cell[524426, 10404, 560, 11, 37, "Input"],
Cell[524989, 10417, 1029, 17, 50, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[526055, 10439, 2065, 47, 86, "Input"],
Cell[528123, 10488, 647, 11, 50, "Message"],
Cell[528773, 10501, 1609, 39, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[530419, 10545, 517, 10, 37, "Input"],
Cell[530939, 10557, 1020, 17, 50, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[531996, 10579, 1699, 40, 86, "Input"],
Cell[533698, 10621, 645, 11, 50, "Message"],
Cell[534346, 10634, 1477, 36, 62, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[535896, 10678, 251, 3, 86, "Section"],
Cell[536150, 10683, 208, 4, 44, "Input"],
Cell[536361, 10689, 802, 19, 189, "Input"],
Cell[CellGroupData[{
Cell[537188, 10712, 275, 4, 64, "Subsection"],
Cell[537466, 10718, 231, 4, 44, "Input"],
Cell[537700, 10724, 1064, 22, 74, "Input"],
Cell[538767, 10748, 664, 17, 44, "Input"],
Cell[539434, 10767, 230, 5, 44, "Input"],
Cell[539667, 10774, 953, 25, 44, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[540657, 10804, 120, 2, 64, "Subsection"],
Cell[540780, 10808, 179, 3, 246, "Input"],
Cell[540962, 10813, 230, 4, 246, "Input"],
Cell[541195, 10819, 531, 13, 246, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[541763, 10837, 171, 2, 51, "Subsection"],
Cell[541937, 10841, 344, 7, 246, "Input"],
Cell[CellGroupData[{
Cell[542306, 10852, 322, 4, 321, "Subsubsection"],
Cell[542631, 10858, 1647, 30, 246, "Input"],
Cell[544281, 10890, 1649, 30, 246, "Input"],
Cell[545933, 10922, 1677, 30, 246, "Input"],
Cell[547613, 10954, 1648, 30, 246, "Input"],
Cell[549264, 10986, 1651, 30, 246, "Input"],
Cell[550918, 11018, 1669, 30, 246, "Input"],
Cell[552590, 11050, 990, 21, 246, "Input"],
Cell[553583, 11073, 963, 20, 246, "Input"],
Cell[554549, 11095, 949, 20, 246, "Input"],
Cell[555501, 11117, 965, 20, 246, "Input"],
Cell[556469, 11139, 4147, 85, 2207, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[560653, 11229, 346, 4, 254, "Subsubsection"],
Cell[561002, 11235, 1699, 31, 246, "Input"],
Cell[562704, 11268, 1701, 31, 246, "Input"],
Cell[564408, 11301, 1703, 31, 246, "Input"],
Cell[566114, 11334, 1697, 31, 246, "Input"],
Cell[567814, 11367, 1699, 31, 246, "Input"],
Cell[569516, 11400, 1723, 31, 246, "Input"],
Cell[571242, 11433, 1011, 21, 246, "Input"],
Cell[572256, 11456, 1009, 21, 246, "Input"],
Cell[573268, 11479, 1008, 21, 246, "Input"],
Cell[574279, 11502, 1016, 21, 246, "Input"],
Cell[575298, 11525, 4247, 86, 2207, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[579582, 11616, 175, 2, 254, "Subsubsection"],
Cell[579760, 11620, 367, 7, 246, "Input"],
Cell[580130, 11629, 687, 13, 246, "Input"],
Cell[580820, 11644, 2323, 43, 579, "Input"],
Cell[583146, 11689, 2324, 43, 579, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[585519, 11738, 230, 3, 51, "Subsection"],
Cell[585752, 11743, 600, 13, 109, "Input"],
Cell[586355, 11758, 663, 14, 109, "Input"],
Cell[587021, 11774, 2593, 72, 463, "Input"],
Cell[589617, 11848, 467, 11, 109, "Input"],
Cell[590087, 11861, 612, 12, 109, "Input"],
Cell[590702, 11875, 1216, 26, 109, "Input"],
Cell[591921, 11903, 926, 23, 182, "Input"],
Cell[592850, 11928, 270, 6, 109, "Input"],
Cell[593123, 11936, 1327, 30, 322, "Input"],
Cell[594453, 11968, 1116, 27, 322, "Input"]
}, Closed]],
Cell[595584, 11998, 157, 2, 51, "Subsection"],
Cell[CellGroupData[{
Cell[595766, 12004, 201, 3, 51, "Subsection"],
Cell[595970, 12009, 212, 5, 44, "Input"],
Cell[596185, 12016, 3724, 60, 103, "Input"],
Cell[599912, 12078, 3604, 59, 103, "Input"],
Cell[603519, 12139, 2090, 47, 304, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[605658, 12192, 382, 5, 68, "Section"],
Cell[606043, 12199, 331, 6, 37, "Input"],
Cell[CellGroupData[{
Cell[606399, 12209, 3611, 69, 206, "Input"],
Cell[610013, 12280, 481, 9, 28, "Message"],
Cell[610497, 12291, 1416, 38, 119, "Output"]
}, Open  ]],
Cell[611928, 12332, 332, 6, 37, "Input"],
Cell[612263, 12340, 3560, 68, 206, "Input"],
Cell[615826, 12410, 362, 7, 37, "Input"],
Cell[616191, 12419, 4452, 88, 326, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[620680, 12512, 205, 3, 86, "Section"],
Cell[620888, 12517, 2284, 41, 74, "Input"],
Cell[623175, 12560, 421, 10, 44, "Input"],
Cell[623599, 12572, 160, 3, 44, "Input"],
Cell[623762, 12577, 3285, 93, 161, "Input"],
Cell[627050, 12672, 157, 3, 44, "Input"],
Cell[627210, 12677, 3231, 94, 161, "Input"],
Cell[630444, 12773, 160, 3, 44, "Input"],
Cell[630607, 12778, 5080, 156, 276, "Input"],
Cell[635690, 12936, 314, 7, 44, "Input"],
Cell[CellGroupData[{
Cell[636029, 12947, 1820, 40, 218, "Input"],
Cell[637852, 12989, 2374, 44, 638, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[640275, 13039, 198, 3, 68, "Section"],
Cell[CellGroupData[{
Cell[640498, 13046, 633, 19, 44, "Input"],
Cell[641134, 13067, 28895, 484, 604, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[670078, 13557, 145, 2, 68, "Section"],
Cell[CellGroupData[{
Cell[670248, 13563, 275, 6, 44, "Input"],
Cell[670526, 13571, 224, 3, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[670787, 13579, 358, 5, 44, "Input"],
Cell[671148, 13586, 2885, 57, 673, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[674070, 13648, 207, 3, 44, "Input"],
Cell[674280, 13653, 8213, 145, 671, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[682530, 13803, 162, 3, 44, "Input"],
Cell[682695, 13808, 7895, 140, 673, "Output"]
}, Open  ]],
Cell[690605, 13951, 1001, 19, 44, "Input"],
Cell[CellGroupData[{
Cell[691631, 13974, 545, 15, 44, "Input"],
Cell[692179, 13991, 1770, 36, 186, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[693986, 14032, 466, 13, 44, "Input"],
Cell[694455, 14047, 1733, 35, 186, "Output"]
}, Open  ]],
Cell[696203, 14085, 911, 16, 44, "Input"],
Cell[CellGroupData[{
Cell[697139, 14105, 559, 15, 44, "Input"],
Cell[697701, 14122, 1931, 38, 186, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[699669, 14165, 159, 3, 44, "Input"],
Cell[699831, 14170, 8088, 143, 671, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[707956, 14318, 265, 6, 44, "Input"],
Cell[708224, 14326, 141370, 2333, 446, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

